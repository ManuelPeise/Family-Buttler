{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\AddMenuDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport MenuLayout from './MenuLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMenuDataService = () => {\n  _s();\n\n  var _menuDataService$item6;\n\n  const dispatch = useDispatch();\n  const [selectedMenuId, setSelectedMenuId] = React.useState(0);\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const valueDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\",\n    params: null\n  });\n  const handleMenuSelect = React.useCallback(id => {\n    if (id !== null) setSelectedMenuId(id);\n  }, [setSelectedMenuId]);\n  const selectedMenu = React.useMemo(() => {\n    var _menuDataService$item, _menuDataService$item2, _menuDataService$item3;\n\n    return (_menuDataService$item = (_menuDataService$item2 = menuDataService.items[0]) === null || _menuDataService$item2 === void 0 ? void 0 : (_menuDataService$item3 = _menuDataService$item2.menuCollection) === null || _menuDataService$item3 === void 0 ? void 0 : _menuDataService$item3.find(menu => menu.id === selectedMenuId)) !== null && _menuDataService$item !== void 0 ? _menuDataService$item : {};\n  }, [selectedMenuId, menuDataService]);\n  const saveOrUpdateRecipe = React.useCallback(async menu => {\n    await menuDataService.post({\n      serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.addOrUpdateRecipe,\n      method: 'POST',\n      params: menu\n    }).then(() => {\n      setSelectedMenuId(0);\n    });\n  }, [menuDataService]);\n  const component = React.useMemo(() => {\n    var _menuDataService$item4, _menuDataService$item5;\n\n    const config = {\n      isReadOnly: false,\n      hasFilter: false,\n      hasMenuList: false,\n      selectedMenuId: selectedMenuId,\n      componentKey: 'add'\n    };\n    return /*#__PURE__*/_jsxDEV(MenuLayout, {\n      layoutConfig: config,\n      menuCollection: (_menuDataService$item4 = (_menuDataService$item5 = menuDataService.items[0]) === null || _menuDataService$item5 === void 0 ? void 0 : _menuDataService$item5.menuCollection) !== null && _menuDataService$item4 !== void 0 ? _menuDataService$item4 : [],\n      values: valueDataService.items[0],\n      handleSelectMenu: handleMenuSelect,\n      handleSave: saveOrUpdateRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }, [menuDataService.items, valueDataService.items, selectedMenuId, handleMenuSelect, saveOrUpdateRecipe]);\n\n  if (menuDataService.items[0] === null) {\n    return null;\n  }\n\n  if (valueDataService.items[0] === null || valueDataService.items[0] === undefined) {\n    return null;\n  }\n\n  dispatch(SetMenuCollection((_menuDataService$item6 = menuDataService.items[0]) === null || _menuDataService$item6 === void 0 ? void 0 : _menuDataService$item6.menuCollection));\n  dispatch(SetPageTitle(valueDataService.items[0].pageTitleAdd));\n  return component;\n};\n\n_s(AddMenuDataService, \"KG+N6akXjDHPmTZS4lLPfG7k8Nk=\", false, function () {\n  return [useDispatch, useApi, useApi];\n});\n\n_c = AddMenuDataService;\nexport default AddMenuDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMenuDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/AddMenuDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","SetPageTitle","useDispatch","MenuLayout","AddMenuDataService","dispatch","selectedMenuId","setSelectedMenuId","useState","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","valueDataService","i18nController","handleMenuSelect","useCallback","id","selectedMenu","useMemo","items","menuCollection","find","menu","saveOrUpdateRecipe","post","addOrUpdateRecipe","method","then","component","config","isReadOnly","hasFilter","hasMenuList","componentKey","undefined","pageTitleAdd"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenu, IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport MenuLayout from './MenuLayout'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\nconst AddMenuDataService: React.FC= () =>{\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [selectedMenuId, setSelectedMenuId] = React.useState<number>(0)\r\n\r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const valueDataService = useApi<ICookingBookValues>({serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\", params: null}) \r\n    \r\n    const handleMenuSelect = React.useCallback((id: number | null) =>{\r\n        if(id !== null)\r\n        setSelectedMenuId(id)\r\n    },[setSelectedMenuId])\r\n\r\n    const selectedMenu = React.useMemo(() =>{\r\n        return menuDataService.items[0]?.menuCollection?.find(menu => menu.id === selectedMenuId) ?? {} as IMenu\r\n    },[selectedMenuId, menuDataService])\r\n    \r\n    const saveOrUpdateRecipe = React.useCallback(async (menu: IMenu) =>{\r\n        await menuDataService.post({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.addOrUpdateRecipe, method: 'POST', params: menu})\r\n        .then(() =>{\r\n            setSelectedMenuId(0)\r\n        })\r\n    },[menuDataService])\r\n\r\n    const component = React.useMemo(() =>{\r\n       \r\n        const config: IMenuLayoutConfig = {\r\n            isReadOnly: false, \r\n            hasFilter: false, \r\n            hasMenuList: false,\r\n            selectedMenuId: selectedMenuId, \r\n            componentKey: 'add'\r\n            }\r\n                \r\n        return <MenuLayout \r\n                    layoutConfig={config}\r\n                    menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                    values={valueDataService.items[0]}\r\n                    handleSelectMenu={handleMenuSelect}\r\n                    handleSave={saveOrUpdateRecipe} />\r\n         \r\n    },[menuDataService.items, valueDataService.items, selectedMenuId, handleMenuSelect, saveOrUpdateRecipe])\r\n\r\n    if(menuDataService.items[0] === null){\r\n\r\n        return null\r\n    }\r\n\r\n    if(valueDataService.items[0] === null || valueDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n\r\n    dispatch(SetMenuCollection(menuDataService.items[0]?.menuCollection))\r\n    dispatch(SetPageTitle(valueDataService.items[0].pageTitleAdd))\r\n    return component\r\n}\r\n\r\nexport default AddMenuDataService"]},"metadata":{},"sourceType":"module"}