{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\menuLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid, makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuList from './menuList';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport MenuContainer from './MenuContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginTop: '2vh'\n  }\n}));\n\nconst MenuLayout = props => {\n  _s();\n\n  const {\n    layoutConfig,\n    menuCollection,\n    selectedMenu,\n    handleSelectMenu\n  } = props;\n  const [menuType, setMenuType] = React.useState(MenuTypeEnum.None);\n  const useStyle = styles();\n  const onMenuTypeChange = React.useCallback(menuType => {\n    setMenuType(menuType);\n  }, [setMenuType]);\n  const filterItems = React.useMemo(() => {\n    return menuCollection.map(item => {\n      return {\n        id: item.id,\n        label: item.name\n      };\n    });\n  }, [menuCollection]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 2,\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          backgroundColor: '#f2f2ed',\n          margin: '2vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuFilter, {\n          items: filterItems,\n          selectedMenuType: menuType,\n          onMenuSelect: handleSelectMenu,\n          onMenuTypeChange: onMenuTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          className: useStyle.item,\n          item: true,\n          xs: 12,\n          xl: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(MenuList, {\n              menuCollection: menuCollection,\n              selectedMenuId: layoutConfig.selectedMenuId,\n              handleSelectMenu: handleSelectMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: useStyle.item,\n          item: true,\n          xs: 12,\n          xl: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(MenuContainer, {\n              isReadOnly: layoutConfig.isReadOnly,\n              selectedMenu: selectedMenu !== null && selectedMenu !== void 0 ? selectedMenu : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuLayout, \"c0bWiWLen5YjbKuT/8/eHCmVf+g=\");\n\n_c = MenuLayout;\nexport default MenuLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLayout\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/menuLayout.tsx"],"names":["Container","Grid","makeStyles","Paper","React","MenuFilter","MenuList","MenuTypeEnum","MenuContainer","styles","theme","item","display","justifyContent","paper","marginTop","MenuLayout","props","layoutConfig","menuCollection","selectedMenu","handleSelectMenu","menuType","setMenuType","useState","None","useStyle","onMenuTypeChange","useCallback","filterItems","useMemo","map","id","label","name","backgroundColor","margin","selectedMenuId","isReadOnly"],"mappings":"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","sourcesContent":["import { Container, Grid, makeStyles, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuList from './menuList'\r\nimport {MenuTypeEnum} from '../../_enums/menuEnums'\r\nimport MenuContainer from './MenuContainer'\r\nimport { IAutocompleteItem } from '../../_interfaces/IAutocompleteItem'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   selectedMenu: IMenu\r\n   menuCollection: IMenu[]\r\n   handleSelectMenu: (id: number | null) => void\r\n}\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    item:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    paper:{\r\n        marginTop:'2vh'\r\n    }\r\n    \r\n}))\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, selectedMenu, handleSelectMenu} = props\r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n    \r\n    const useStyle = styles();\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filterItems = React.useMemo((): IAutocompleteItem[] =>{\r\n       \r\n        return menuCollection.map((item) =>{\r\n            return(\r\n                {id: item.id, label: item.name}\r\n            )\r\n        })\r\n            \r\n    },[menuCollection])\r\n\r\n    return(\r\n        <Container>\r\n            <Grid\r\n                container\r\n                direction='row'\r\n                spacing={2}\r\n                justifyContent='center'\r\n                alignContent='center'>\r\n                    <Paper style={{backgroundColor: '#f2f2ed', margin: '2vh'}}>\r\n                        <MenuFilter\r\n                            items={filterItems}\r\n                            selectedMenuType={menuType}\r\n                            onMenuSelect={handleSelectMenu}\r\n                            onMenuTypeChange={onMenuTypeChange}/>\r\n                    </Paper>\r\n                    <Grid\r\n                        container\r\n                        spacing={3}\r\n                        justifyContent='center'\r\n                        alignContent='center'\r\n                        direction='row'>\r\n                            <Grid\r\n                                className={useStyle.item}\r\n                                item\r\n                                xs={12}\r\n                                xl={4}>\r\n                                <Paper>\r\n                                    <MenuList \r\n                                        menuCollection={menuCollection} \r\n                                        selectedMenuId={layoutConfig.selectedMenuId} \r\n                                        handleSelectMenu={handleSelectMenu}/>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid\r\n                                className={useStyle.item}\r\n                                item\r\n                                xs={12}\r\n                                xl={8}>\r\n                                <Paper>\r\n                                    <MenuContainer isReadOnly={layoutConfig.isReadOnly} selectedMenu={selectedMenu ?? {} as IMenu}/>\r\n                                </Paper>\r\n                            </Grid>\r\n                    </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MenuLayout\r\n"]},"metadata":{},"sourceType":"module"}