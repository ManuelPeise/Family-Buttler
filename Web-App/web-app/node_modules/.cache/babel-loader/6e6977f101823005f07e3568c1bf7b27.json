{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport apiConfig from '../_config/apiConfig.json';\nexport const useImageUpload = src => {\n  _s();\n\n  const [image, setImage] = React.useState(src);\n\n  const callBack = buffer => {\n    setImage(buffer);\n  };\n\n  const fetchData = async form => {\n    await fetch(apiConfig.baseUrl + apiConfig.cookingBook.image, {\n      method: 'POST',\n      mode: 'cors',\n      body: form\n    }); // headers: {\"Content-Type\":\"application/json\"}})\n  };\n\n  const loadData = async file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n\n      reader.onerror = () => {\n        reject(\"Could not load image!\");\n      };\n    });\n  };\n\n  const getBase64 = React.useCallback(async file => {\n    const data = new FormData();\n    data.append(\"image\", file); // await loadData(file)\n\n    console.log(data);\n    await fetchData(data);\n  }, []);\n  return {\n    buffer: image,\n    getBase64\n  };\n};\n\n_s(useImageUpload, \"+8TuHkRJy96As8b+0epnYDFUfnQ=\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_hooks/useImageUpload.ts"],"names":["React","apiConfig","useImageUpload","src","image","setImage","useState","callBack","buffer","fetchData","form","fetch","baseUrl","cookingBook","method","mode","body","loadData","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64","useCallback","data","FormData","append","console","log"],"mappings":";;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAOA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAAkD;AAAA;;AAE5E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAmCH,GAAnC,CAA1B;;AAEA,QAAMI,QAAQ,GAAIC,MAAD,IAAwB;AACrCH,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAOC,IAAP,IAAoB;AAClC,UAAMC,KAAK,CAACV,SAAS,CAACW,OAAV,GAAoBX,SAAS,CAACY,WAAV,CAAsBT,KAA3C,EAAkD;AAACU,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAE,MAAvB;AAA+BC,MAAAA,IAAI,EAAEN;AAArC,KAAlD,CAAX,CADkC,CACuE;AAC5G,GAFD;;AAIA,QAAMO,QAAQ,GAAG,MAAOC,IAAP,IAAsB;AACnC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACnC,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AAEAI,MAAAA,MAAM,CAACG,MAAP,GAAgB,MAAK;AACjBL,QAAAA,OAAO,CAACE,MAAM,CAACI,MAAR,CAAP;AACH,OAFD;;AAIAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,MAAM;AACnBN,QAAAA,MAAM,CAAC,uBAAD,CAAN;AACH,OAFD;AAGH,KAXM,CAAP;AAYH,GAbD;;AAeA,QAAMO,SAAS,GAAG5B,KAAK,CAAC6B,WAAN,CAAkB,MAAOX,IAAP,IAAsB;AAEtD,UAAMY,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBd,IAArB,EAHsD,CAG3B;;AAC3Be,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMrB,SAAS,CAACqB,IAAD,CAAf;AAEH,GAPiB,EAOhB,EAPgB,CAAlB;AASA,SAAO;AACHtB,IAAAA,MAAM,EAAEJ,KADL;AAEHwB,IAAAA;AAFG,GAAP;AAIH,CAxCM;;GAAM1B,c","sourcesContent":["import { rejects } from \"assert\";\r\nimport { resolve } from \"path/posix\";\r\nimport React from \"react\";\r\nimport apiConfig from '../_config/apiConfig.json'\r\n\r\nexport interface IImageUploadResult{\r\n    buffer: string | ArrayBuffer | null\r\n    getBase64: (file: File) => void\r\n}\r\n\r\nexport const useImageUpload = (src: ArrayBuffer | string): IImageUploadResult =>{\r\n\r\n    const [image, setImage] = React.useState<ArrayBuffer|string>(src);    \r\n\r\n    const callBack = (buffer: ArrayBuffer) =>{\r\n        setImage(buffer)\r\n    }\r\n\r\n    const fetchData = async (form: any) =>{\r\n        await fetch(apiConfig.baseUrl + apiConfig.cookingBook.image, {method: 'POST', mode: 'cors', body: form}) // headers: {\"Content-Type\":\"application/json\"}})\r\n    }\r\n\r\n    const loadData = async (file: File) => {\r\n        return new Promise((resolve, reject) =>{\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n\r\n            reader.onload = () =>{\r\n                resolve(reader.result)\r\n            }\r\n\r\n            reader.onerror = () => {\r\n                reject(\"Could not load image!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const getBase64 = React.useCallback(async (file: File) => {\r\n        \r\n        const data = new FormData()\r\n        data.append(\"image\", file) // await loadData(file)\r\n        console.log(data)\r\n        await fetchData(data)\r\n        \r\n    },[])\r\n\r\n    return {\r\n        buffer: image,\r\n        getBase64\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}