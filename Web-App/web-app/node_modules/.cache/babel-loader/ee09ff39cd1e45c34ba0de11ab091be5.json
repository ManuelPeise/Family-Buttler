{"ast":null,"code":"import{Grid,MenuItem}from'@material-ui/core';import React from'react';import AutocompleteInput from'../../_components/_inputs/autocompleteInput';import InputTextField from'../../_components/_inputs/InputTextField';import{MenuTypeEnum}from'../../_enums/menuEnums';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MenuFilter=function MenuFilter(props){var selectedMenuType=props.selectedMenuType,items=props.items,values=props.values,onMenuSelect=props.onMenuSelect,onMenuTypeChange=props.onMenuTypeChange;var menuTypeItems=React.useMemo(function(){var items=[];items.push(/*#__PURE__*/_jsx(MenuItem,{id:\"-1\",value:-1,selected:selectedMenuType===MenuTypeEnum.None,children:values.select},-1));items.push(/*#__PURE__*/_jsx(MenuItem,{id:\"0\",value:0,selected:selectedMenuType===MenuTypeEnum.Pasta,children:values.recipePasta},0));items.push(/*#__PURE__*/_jsx(MenuItem,{id:\"1\",value:1,selected:selectedMenuType===MenuTypeEnum.Meat,children:values.recipeMeat},1));items.push(/*#__PURE__*/_jsx(MenuItem,{id:\"2\",value:2,selected:selectedMenuType===MenuTypeEnum.Soup,children:values.recipeSoup},2));items.push(/*#__PURE__*/_jsx(MenuItem,{id:\"3\",value:3,selected:selectedMenuType===MenuTypeEnum.Pastries,children:values.recipePastries},3));return items;},[selectedMenuType,values]);return/*#__PURE__*/_jsxs(Grid,{container:true,style:{display:'flex',justifyContent:'center'},direction:\"row\",children:[/*#__PURE__*/_jsx(Grid,{style:{padding:'2vw'},item:true,xs:7,xl:7,children:/*#__PURE__*/_jsx(AutocompleteInput,{title:values.filter,items:items,handleChange:onMenuSelect})}),/*#__PURE__*/_jsx(Grid,{style:{padding:'2vw',paddingRight:'2vw'},item:true,xs:4,xl:4,children:/*#__PURE__*/_jsx(InputTextField,{label:values.menuType,value:selectedMenuType!==null&&selectedMenuType!==void 0?selectedMenuType:-1,fullWidth:true,hasSelect:true,selectElements:menuTypeItems,onSelect:onMenuTypeChange})})]});};export default MenuFilter;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuFilter.tsx"],"names":["Grid","MenuItem","React","AutocompleteInput","InputTextField","MenuTypeEnum","MenuFilter","props","selectedMenuType","items","values","onMenuSelect","onMenuTypeChange","menuTypeItems","useMemo","push","None","select","Pasta","recipePasta","Meat","recipeMeat","Soup","recipeSoup","Pastries","recipePastries","display","justifyContent","padding","filter","paddingRight","menuType"],"mappings":"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","sourcesContent":["import { Grid, MenuItem } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AutocompleteInput from '../../_components/_inputs/autocompleteInput'\r\nimport InputTextField from '../../_components/_inputs/InputTextField'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { IAutocompleteItem } from '../../_interfaces/IAutocompleteItem'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\ninterface IProps{\r\n    selectedMenuType: MenuTypeEnum\r\n    items: IAutocompleteItem[]\r\n    values: ICookingBookValues\r\n    onMenuSelect: (id: number | null) => void\r\n    onMenuTypeChange: (menuType: number) => void\r\n}\r\n\r\nconst MenuFilter: React.FC<IProps> = (props) => {\r\n\r\n    const { selectedMenuType, items, values, onMenuSelect, onMenuTypeChange} = props\r\n\r\n    const menuTypeItems = React.useMemo(() =>{\r\n        const items: JSX.Element[] = []\r\n\r\n        items.push(<MenuItem key={-1} id ='-1' value={-1} selected={selectedMenuType === MenuTypeEnum.None}>{values.select}</MenuItem>)\r\n        items.push(<MenuItem key={0} id = '0' value={0} selected={selectedMenuType === MenuTypeEnum.Pasta}>{values.recipePasta}</MenuItem>)\r\n        items.push(<MenuItem key={1} id = '1' value={1} selected={selectedMenuType === MenuTypeEnum.Meat}>{values.recipeMeat}</MenuItem>)\r\n        items.push(<MenuItem key={2} id = '2' value={2} selected={selectedMenuType === MenuTypeEnum.Soup}>{values.recipeSoup}</MenuItem>)\r\n        items.push(<MenuItem key={3} id = '3' value={3} selected={selectedMenuType === MenuTypeEnum.Pastries}>{values.recipePastries}</MenuItem>)\r\n\r\n        return items\r\n    },[selectedMenuType, values])\r\n\r\n    return (\r\n            <Grid\r\n                container\r\n                style={{display: 'flex', justifyContent: 'center' }}\r\n                direction='row'>\r\n                <Grid\r\n                    style={{padding:'2vw'}}\r\n                    item\r\n                    xs={7}\r\n                    xl={7}>\r\n                    <AutocompleteInput title={values.filter} items={items} handleChange={onMenuSelect} />\r\n                </Grid >\r\n                <Grid\r\n                    style={{padding:'2vw', paddingRight:'2vw'}}\r\n                    item\r\n                    xs={4}\r\n                    xl={4}>\r\n                    <InputTextField \r\n                        label={values.menuType}\r\n                        value={selectedMenuType ?? -1}\r\n                        fullWidth={true} \r\n                        hasSelect={true}\r\n                        selectElements={menuTypeItems}\r\n                        onSelect={onMenuTypeChange}/>\r\n                </Grid >\r\n        </Grid> \r\n    )\r\n}\r\n\r\nexport default MenuFilter"]},"metadata":{},"sourceType":"module"}