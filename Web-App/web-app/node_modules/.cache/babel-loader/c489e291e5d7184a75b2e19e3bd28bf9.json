{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_appBars\\\\sideMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, List, ListItem, ListItemText, makeStyles, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSideBarMenuConfig } from '../../_config/sideBarMenuConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {// marginTop: '.5vh'\n  },\n  menuItem: {\n    color: 'black',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  link: {\n    textDecoration: 'none',\n    paddingLeft: '2vw',\n    color: 'black',\n    fontSize: '2vh'\n  }\n});\n\nconst SideMenu = () => {\n  _s();\n\n  const useStyle = styles();\n  const sideBarConfig = useSideBarMenuConfig();\n  const sideBarMenu = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: sideBarConfig.map(config => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: useStyle.menuItem,\n            selected: config.expanded,\n            onClick: config.handleSelected.bind(null, config.key),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: config.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, config.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), config.expanded && config.items.map(item => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: useStyle.menuItem,\n              selected: item.selected,\n              disabled: item.disabled,\n              onClick: item.handleSelected.bind(null, item.key),\n              children: !item.disabled && /*#__PURE__*/_jsxDEV(Link, {\n                className: useStyle.link,\n                to: item.path,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: item.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }, [sideBarConfig]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.root,\n    container: true,\n    children: sideBarMenu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SideMenu, \"ZTqMzebhZiVMmt8eNUgQsYe4PMw=\", false, function () {\n  return [useSideBarMenuConfig];\n});\n\n_c = SideMenu;\nexport default SideMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideMenu\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_appBars/sideMenu.tsx"],"names":["React","Grid","List","ListItem","ListItemText","makeStyles","Typography","Link","useSideBarMenuConfig","styles","root","menuItem","color","cursor","link","textDecoration","paddingLeft","fontSize","SideMenu","useStyle","sideBarConfig","sideBarMenu","useMemo","map","config","expanded","handleSelected","bind","key","title","items","item","selected","disabled","path","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Grid, List, ListItem, ListItemText, makeStyles, Typography} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSideBarMenuConfig } from '../../_config/sideBarMenuConfig'\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        // marginTop: '.5vh'\r\n    },\r\n    menuItem:{\r\n        color: 'black',\r\n        '&:hover':{\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    link:{\r\n        textDecoration: 'none',\r\n        paddingLeft:'2vw',\r\n        color: 'black',\r\n        fontSize: '2vh'\r\n    }\r\n})\r\n\r\nconst SideMenu: React.FC = () =>{\r\n\r\n    const useStyle = styles()\r\n\r\n    const sideBarConfig = useSideBarMenuConfig()\r\n\r\n    const sideBarMenu = React.useMemo(() =>{\r\n\r\n        return(\r\n            <List>\r\n                {sideBarConfig.map((config) =>{\r\n                    return(\r\n                        <Grid\r\n                            container>\r\n                            <ListItem key={config.key} className={useStyle.menuItem} selected = {config.expanded} onClick = {config.handleSelected.bind(null, config.key)}>\r\n                                <ListItemText>\r\n                                    <Typography variant='h5'>\r\n                                        {config.title}\r\n                                    </Typography>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            {config.expanded && (\r\n                                config.items.map((item) =>{\r\n                                    return(\r\n                                        <ListItem \r\n                                            key={item.key} \r\n                                            className={useStyle.menuItem} \r\n                                            selected = {item.selected}\r\n                                            disabled = {item.disabled} \r\n                                            onClick = {item.handleSelected.bind(null, item.key)}>\r\n                                                {!item.disabled && (\r\n                                            <Link className = {useStyle.link} to = {item.path}>\r\n                                                <ListItemText>\r\n                                                    <Typography variant='h6'>\r\n                                                        {item.value}\r\n                                                    </Typography>\r\n                                                </ListItemText>\r\n                                            </Link>\r\n                                            )}\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Grid>\r\n                    )\r\n                })}\r\n\r\n            </List>\r\n        )\r\n    },[sideBarConfig]) \r\n\r\n    return(\r\n        <Grid\r\n            className = {useStyle.root}\r\n            container>\r\n                {sideBarMenu}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}