{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\ingredientList.tsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport SubHeaderBar from '../../_components/_appBars/subHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  }\n});\n\nconst IngrdientList = props => {\n  const {\n    menu,\n    isReadOnly\n  } = props;\n  const useStyle = styles();\n  return /*#__PURE__*/_jsxDEV(SubHeaderBar, {\n    title: \"Zutaten\",\n    variant: \"h3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this) // <List className={useStyle.list}>\n  // {menu?.ingredients?.length && menu?.ingredients?.map((ingredient, index) =>{\n  //     return(\n  //         <IngrdientListtem key={index} ingredient={ingredient} isReadOnly={isReadOnly}/>\n  //     )\n  // })}\n  // {!menu?.ingredients?.length && (\n  //      <List className={useStyle.list}>\n  //         <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\n  //         <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\n  //         <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\n  //      </List>\n  // )}\n  // </List>\n  ;\n};\n\n_c = IngrdientList;\nexport default IngrdientList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngrdientList\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/ingredientList.tsx"],"names":["React","makeStyles","SubHeaderBar","styles","list","display","flexDirection","overflow","IngrdientList","props","menu","isReadOnly","useStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAsBC,UAAtB,QAAgD,mBAAhD;AAEA,OAAOC,YAAP,MAAyB,sCAAzB;;AAEA,MAAMC,MAAM,GAAGF,UAAU,CAAC;AACtBG,EAAAA,IAAI,EAAC;AACDC,IAAAA,OAAO,EAAE,MADR;AAEDC,IAAAA,aAAa,EAAE,QAFd;AAGDC,IAAAA,QAAQ,EAAE;AAHT;AADiB,CAAD,CAAzB;;AAcA,MAAMC,aAA+B,GAAIC,KAAD,IAAW;AAE/C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAqBF,KAA3B;AACA,QAAMG,QAAQ,GAAGT,MAAM,EAAvB;AAEA,sBACO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,SAApB;AAA8B,IAAA,OAAO,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,UADP,CAEQ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBR;AAoBH,CAzBD;;KAAMK,a;AA2BN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport {IMenu} from '../../_interfaces/IMenu'\r\nimport {AppBar, List, makeStyles, Toolbar} from '@material-ui/core'\r\nimport IngrdientListtem from './IngredientListItem'\r\nimport SubHeaderBar from '../../_components/_appBars/subHeader'\r\n\r\nconst styles = makeStyles({\r\n    list:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    menu?: IMenu\r\n    isReadOnly?: boolean\r\n}\r\n\r\n\r\nconst IngrdientList: React.FC<IProps> = (props) => {\r\n\r\n    const {menu, isReadOnly} = props\r\n    const useStyle = styles()\r\n\r\n    return(\r\n           <SubHeaderBar title='Zutaten' variant='h3'/>\r\n            // <List className={useStyle.list}>\r\n            // {menu?.ingredients?.length && menu?.ingredients?.map((ingredient, index) =>{\r\n            //     return(\r\n            //         <IngrdientListtem key={index} ingredient={ingredient} isReadOnly={isReadOnly}/>\r\n            //     )\r\n            // })}\r\n            \r\n            // {!menu?.ingredients?.length && (\r\n            //      <List className={useStyle.list}>\r\n            //         <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\r\n            //         <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\r\n            //         <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\r\n            //      </List>\r\n            // )}\r\n            // </List>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default IngrdientList"]},"metadata":{},"sourceType":"module"}