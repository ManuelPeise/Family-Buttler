{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\nimport LogTable from '../../../_components/_virtualized/_table/Table';\nimport { AutoSizer } from 'react-virtualized';\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingPageContainer = props => {\n  _s();\n\n  const {\n    logmessages\n  } = props;\n  const dispatch = useDispatch();\n  dispatch(SetPageTitle(\"Administration - Logging\"));\n  const rowGetter = React.useCallback(row => {\n    return logmessages[row.index];\n  }, [logmessages]);\n  return /*#__PURE__*/_jsxDEV(AutoSizer, {\n    children: _ref => {\n      let {\n        width\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(LogTable, {\n        height: 800,\n        width: width,\n        rowHeight: 50,\n        rowCount: logmessages.length,\n        headerHeight: 100,\n        logmessages: logmessages,\n        getRow: rowGetter,\n        children: [TableColunm({\n          key: \"0\",\n          dataKey: 'id',\n          width: 150,\n          headerValue: \"ID\"\n        }), TableColunm({\n          key: \"1\",\n          dataKey: 'date',\n          width: 300,\n          headerValue: \"Date\"\n        }), TableColunm({\n          key: \"2\",\n          dataKey: 'logMessageType',\n          width: 300,\n          headerValue: \"Type\"\n        }), TableColunm({\n          key: \"3\",\n          dataKey: 'message',\n          width: 500,\n          headerValue: \"Message\"\n        }), TableColunm({\n          key: \"4\",\n          dataKey: 'exception',\n          width: 500,\n          headerValue: \"Exception\"\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoggingPageContainer, \"2brdTCyCfXLBj97TE26xYMuhG4A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoggingPageContainer;\nexport default LoggingPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingPageContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingPageContainer.tsx"],"names":["React","useDispatch","SetPageTitle","LogTable","AutoSizer","TableColunm","LoggingPageContainer","props","logmessages","dispatch","rowGetter","useCallback","row","index","width","length","key","dataKey","headerValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,iDAA7B;AAEA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,SAAT,QAAiC,mBAAjC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;;AAMA,MAAMC,oBAAsC,GAAIC,KAAD,IAAU;AAAA;;AAErD,QAAM;AAACC,IAAAA;AAAD,MAAgBD,KAAtB;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAQ,EAAAA,QAAQ,CAACP,YAAY,CAAC,0BAAD,CAAb,CAAR;AAEA,QAAMQ,SAAS,GAAGV,KAAK,CAACW,WAAN,CAAmBC,GAAD,IAAe;AAC/C,WAAOJ,WAAW,CAACI,GAAG,CAACC,KAAL,CAAlB;AACH,GAFiB,EAEhB,CAACL,WAAD,CAFgB,CAAlB;AAIA,sBACQ,QAAC,SAAD;AAAA,cACK;AAAA,UAAC;AAACM,QAAAA;AAAD,OAAD;AAAA,0BACD,QAAC,QAAD;AACI,QAAA,MAAM,EAAE,GADZ;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,SAAS,EAAE,EAHf;AAII,QAAA,QAAQ,EAAEN,WAAW,CAACO,MAJ1B;AAKI,QAAA,YAAY,EAAE,GALlB;AAMI,QAAA,WAAW,EAAEP,WANjB;AAOI,QAAA,MAAM,EAAEE,SAPZ;AAAA,mBASKL,WAAW,CAAC;AAACW,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,OAAO,EAAE,IAApB;AAA0BH,UAAAA,KAAK,EAAE,GAAjC;AAAsCI,UAAAA,WAAW,EAAC;AAAlD,SAAD,CAThB,EAUKb,WAAW,CAAC;AAACW,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,OAAO,EAAE,MAApB;AAA4BH,UAAAA,KAAK,EAAE,GAAnC;AAAwCI,UAAAA,WAAW,EAAE;AAArD,SAAD,CAVhB,EAWKb,WAAW,CAAC;AAACW,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,OAAO,EAAE,gBAApB;AAAsCH,UAAAA,KAAK,EAAE,GAA7C;AAAkDI,UAAAA,WAAW,EAAE;AAA/D,SAAD,CAXhB,EAYKb,WAAW,CAAC;AAACW,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,OAAO,EAAE,SAApB;AAA+BH,UAAAA,KAAK,EAAE,GAAtC;AAA2CI,UAAAA,WAAW,EAAE;AAAxD,SAAD,CAZhB,EAaKb,WAAW,CAAC;AAACW,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,OAAO,EAAE,WAApB;AAAiCH,UAAAA,KAAK,EAAE,GAAxC;AAA6CI,UAAAA,WAAW,EAAE;AAA1D,SAAD,CAbhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADR;AAqBH,CAhCD;;GAAMZ,oB;UAGeL,W;;;KAHfK,oB;AAkCN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\r\nimport { ILogmessage } from './interfaces/ILogmessage';\r\nimport LogTable from '../../../_components/_virtualized/_table/Table';\r\nimport { AutoSizer, Index } from 'react-virtualized';\r\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\r\n\r\ninterface IProps{\r\n    logmessages: ILogmessage[]\r\n}\r\n\r\nconst LoggingPageContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {logmessages} = props\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(SetPageTitle(\"Administration - Logging\"))\r\n  \r\n    const rowGetter = React.useCallback((row: Index) =>{\r\n        return logmessages[row.index]\r\n    },[logmessages])\r\n\r\n    return(\r\n            <AutoSizer>\r\n                {({width}) =>(\r\n                <LogTable \r\n                    height={800} \r\n                    width={width} \r\n                    rowHeight={50} \r\n                    rowCount={logmessages.length} \r\n                    headerHeight={100}\r\n                    logmessages={logmessages}\r\n                    getRow={rowGetter}\r\n                    >\r\n                    {TableColunm({key: \"0\", dataKey: 'id', width: 150, headerValue:\"ID\" })}\r\n                    {TableColunm({key: \"1\", dataKey: 'date', width: 300, headerValue: \"Date\"})}\r\n                    {TableColunm({key: \"2\", dataKey: 'logMessageType', width: 300, headerValue: \"Type\"})}\r\n                    {TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\"})}\r\n                    {TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Exception\"})}\r\n                </LogTable>\r\n                )}\r\n            </AutoSizer>\r\n    )\r\n}\r\n\r\nexport default LoggingPageContainer"]},"metadata":{},"sourceType":"module"}