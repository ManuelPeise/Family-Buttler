{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_virtualized\\\\_table\\\\TableCell.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  cell: {\n    '&:hover': {\n      cousor: 'pointer'\n    }\n  }\n});\n\nconst TableCell = props => {\n  _s();\n\n  const {\n    id,\n    hasCheckbox,\n    checked,\n    value,\n    handleSelect\n  } = props;\n  const useStyle = styles();\n  const cellComponent = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.cell,\n      container: true,\n      children: [hasCheckbox && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"delete\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checked !== null && checked !== void 0 ? checked : false,\n          onChange: handleSelect === null || handleSelect === void 0 ? void 0 : handleSelect.bind(null, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), !hasCheckbox && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: value,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }, []);\n  return cellComponent;\n};\n\n_s(TableCell, \"rE+iPgTMALw6W6+PGUyT0y7dbr0=\");\n\n_c = TableCell;\nexport default TableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCell\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableCell.tsx"],"names":["Checkbox","Grid","makeStyles","Tooltip","Typography","React","styles","cell","cousor","TableCell","props","id","hasCheckbox","checked","value","handleSelect","useStyle","cellComponent","useMemo","bind"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,OAArC,EAA8CC,UAA9C,QAAgE,mBAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGJ,UAAU,CAAC;AACtBK,EAAAA,IAAI,EAAC;AACD,eAAU;AACNC,MAAAA,MAAM,EAAE;AADF;AADT;AADiB,CAAD,CAAzB;;AAiBA,MAAMC,SAA2B,GAAIC,KAAD,IAAW;AAAA;;AAE3C,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA,WAAL;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAkDL,KAAxD;AAEA,QAAMM,QAAQ,GAAGV,MAAM,EAAvB;AAEA,QAAMW,aAAa,GAAGZ,KAAK,CAACa,OAAN,CAAc,MAAK;AACrC,wBACI,QAAC,IAAD;AACI,MAAA,SAAS,EAAEF,QAAQ,CAACT,IADxB;AAEI,MAAA,SAAS,MAFb;AAAA,iBAGKK,WAAW,iBACR,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEC,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAY,KAA7B;AAAoC,UAAA,QAAQ,EAAEE,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEI,IAAd,CAAmB,IAAnB,EAAyBR,EAAzB;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJR,EAQK,CAACC,WAAD,iBACD,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEE,KAAhB;AAAA,+BACI,QAAC,UAAD;AAAA,oBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBqB,EAiBpB,EAjBoB,CAAtB;AAmBA,SACIG,aADJ;AAGH,CA5BD;;GAAMR,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst styles = makeStyles({\r\n    cell:{\r\n        '&:hover':{\r\n            cousor: 'pointer'\r\n        }\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    id: number\r\n    hasCheckbox?: boolean\r\n    checked?: boolean\r\n    value: string\r\n    handleSelect?: (id: number) => void\r\n\r\n}\r\n\r\nconst TableCell: React.FC<IProps> = (props) => {\r\n\r\n    const {id, hasCheckbox, checked, value, handleSelect} = props\r\n\r\n    const useStyle = styles()\r\n\r\n    const cellComponent = React.useMemo(() =>{\r\n        return(\r\n            <Grid\r\n                className={useStyle.cell}\r\n                container>\r\n                {hasCheckbox && (\r\n                    <Tooltip title='delete'>\r\n                        <Checkbox checked={checked?? false} onChange={handleSelect?.bind(null, id)}/>\r\n                    </Tooltip>\r\n                )}\r\n                {!hasCheckbox &&(\r\n                <Tooltip title={value}>\r\n                    <Typography>{value}</Typography>\r\n                </Tooltip>\r\n                )}\r\n            </Grid>\r\n        )\r\n    },[])\r\n\r\n    return(\r\n        cellComponent\r\n    )\r\n}\r\n\r\nexport default TableCell"]},"metadata":{},"sourceType":"module"}