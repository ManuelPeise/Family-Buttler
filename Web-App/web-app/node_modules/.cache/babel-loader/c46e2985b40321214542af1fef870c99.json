{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_landingpage\\\\LandingPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\nimport { useImageUpload } from '../../_hooks/useImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingPage = () => {\n  _s();\n\n  const imageService = useImageUpload(\"\"); // const [buffer, setBuffer] = React.useState<Blob>()\n\n  const imgTag = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"data:image/png;base64,\" + imageService.image,\n      width: 200,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }, [imageService]);\n  console.log(imageService.image); // const handleChange = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) =>{\n  //     e.preventDefault()\n  //     if(e.target.files !== null && e.target.files[0]){\n  //         const file = e.target.files[0]\n  //         const buffer = await file.arrayBuffer()\n  //         const blob = new Blob([buffer])\n  //         console.log(blob)\n  //         setBuffer(blob)\n  //     }\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [imgTag, /*#__PURE__*/_jsxDEV(TextField, {\n      hidden: true,\n      type: \"file\",\n      onChange: imageService.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LandingPage, \"uNOKYjrSXRAYvtq0k+u+QPXvD1c=\", false, function () {\n  return [useImageUpload];\n});\n\n_c = LandingPage;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_landingpage/LandingPage.tsx"],"names":["Grid","TextField","React","useImageUpload","LandingPage","imageService","imgTag","useMemo","image","console","log","handleChange"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,6BAA/B;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAEhC,QAAMC,YAAY,GAAGF,cAAc,CAAC,EAAD,CAAnC,CAFgC,CAIhC;;AAEA,QAAMG,MAAM,GAAGJ,KAAK,CAACK,OAAN,CAAc,MAAK;AAE9B,wBACI;AAAK,MAAA,GAAG,EAAE,2BAA2BF,YAAY,CAACG,KAAlD;AAAyD,MAAA,KAAK,EAAE,GAAhE;AAAqE,MAAA,MAAM,EAAE;AAA7E;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAPc,EAOb,CAACH,YAAD,CAPa,CAAf;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACG,KAAzB,EAhBgC,CAkBhC;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,eACIF,MADJ,eAEI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE,IAAnB;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,QAAQ,EAAED,YAAY,CAACM;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCD;;GAAMP,W;UAEmBD,c;;;KAFnBC,W;AA0CN,eAAeA,WAAf","sourcesContent":["import { Grid, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useImageUpload } from '../../_hooks/useImageUpload'\r\n\r\nconst LandingPage: React.FC = () => {\r\n    \r\n    const imageService = useImageUpload(\"\")\r\n    \r\n    // const [buffer, setBuffer] = React.useState<Blob>()\r\n\r\n    const imgTag = React.useMemo(() =>{\r\n    \r\n        return(\r\n            <img src={\"data:image/png;base64,\" + imageService.image} width={200} height={200}>\r\n\r\n            </img>\r\n        )\r\n    },[imageService])\r\n\r\n\r\n    console.log(imageService.image)\r\n\r\n    // const handleChange = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) =>{\r\n    //     e.preventDefault()\r\n\r\n    //     if(e.target.files !== null && e.target.files[0]){\r\n\r\n    //         const file = e.target.files[0]\r\n\r\n    //         const buffer = await file.arrayBuffer()\r\n    //         const blob = new Blob([buffer])\r\n\r\n    //         console.log(blob)\r\n\r\n    //         setBuffer(blob)\r\n    //     }\r\n    // },[])\r\n\r\n    return(\r\n        <Grid container>\r\n           {imgTag}\r\n            <TextField hidden={true} type='file' onChange={imageService.handleChange}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LandingPage"]},"metadata":{},"sourceType":"module"}