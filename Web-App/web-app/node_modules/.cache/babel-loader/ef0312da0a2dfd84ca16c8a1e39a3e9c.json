{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper } from '@material-ui/core';\nimport React from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuContainer from './MenuContainer';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { useDispatch } from 'react-redux';\nimport { SetMenu, SetOriginalMenu, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuLayout = props => {\n  _s();\n\n  const {\n    layoutConfig,\n    menuCollection,\n    values,\n    handleSave\n  } = props;\n  const dispatch = useDispatch();\n\n  if (layoutConfig.componentKey === 'add') {\n    dispatch(SetPageTitle(values.pageTitleAdd));\n  }\n\n  if (layoutConfig.componentKey === 'edit') {\n    dispatch(SetPageTitle(values.pageTitleEdit));\n  }\n\n  if (layoutConfig.componentKey === 'view') {\n    dispatch(SetPageTitle(values.pageTitleView));\n  }\n\n  const [menuType, setMenuType] = React.useState(MenuTypeEnum.None);\n  const handleMenuSelect = React.useCallback(id => {\n    var _menuCollection$find, _menuCollection$find2;\n\n    if (id !== null) dispatch(SetMenu((_menuCollection$find = menuCollection === null || menuCollection === void 0 ? void 0 : menuCollection.find(menu => menu.id === id)) !== null && _menuCollection$find !== void 0 ? _menuCollection$find : {}));\n    dispatch(SetOriginalMenu((_menuCollection$find2 = menuCollection === null || menuCollection === void 0 ? void 0 : menuCollection.find(menu => menu.id === id)) !== null && _menuCollection$find2 !== void 0 ? _menuCollection$find2 : {}));\n  }, [menuCollection, dispatch]);\n  const onMenuTypeChange = React.useCallback(menuType => {\n    setMenuType(menuType);\n  }, [setMenuType]);\n  const filteredMenus = React.useMemo(() => {\n    if (menuType === MenuTypeEnum.None) {\n      return menuCollection;\n    }\n\n    return menuCollection.filter(menu => menu.menuType === menuType);\n  }, [menuType, menuCollection]);\n  const filterItems = React.useMemo(() => {\n    return filteredMenus.map(item => {\n      return {\n        id: item.id,\n        label: item.name\n      };\n    });\n  }, [filteredMenus]);\n  dispatch(SetMenu({}));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      overflow: 'auto'\n    },\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    children: [layoutConfig.hasFilter && /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        marginTop: '1.5vh'\n      },\n      item: true,\n      xs: 11,\n      xl: 11,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          backgroundColor: '#f2f2ed'\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuFilter, {\n          items: filterItems,\n          selectedMenuType: menuType,\n          values: values,\n          onMenuSelect: handleMenuSelect,\n          onMenuTypeChange: onMenuTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        marginTop: '1.5vh'\n      },\n      item: true,\n      xs: 11,\n      xl: 11,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          padding: '1vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuContainer, {\n          values: values,\n          config: layoutConfig,\n          menuCollection: filteredMenus,\n          handleSave: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MenuLayout, \"Q9ygVt9EN/A5Jz6rCygjH/tQq9k=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MenuLayout;\nexport default MenuLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLayout\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuLayout.tsx"],"names":["Grid","Paper","React","MenuFilter","MenuContainer","MenuTypeEnum","useDispatch","SetMenu","SetOriginalMenu","SetPageTitle","MenuLayout","props","layoutConfig","menuCollection","values","handleSave","dispatch","componentKey","pageTitleAdd","pageTitleEdit","pageTitleView","menuType","setMenuType","useState","None","handleMenuSelect","useCallback","id","find","menu","onMenuTypeChange","filteredMenus","useMemo","filter","filterItems","map","item","label","name","overflow","hasFilter","marginTop","backgroundColor","display","justifyContent","padding"],"mappings":"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","sourcesContent":["import {  Grid, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuContainer from './MenuContainer'\r\nimport { IAutocompleteItem } from '../../_interfaces/IAutocompleteItem'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SetMenu, SetOriginalMenu, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   menuCollection: IMenu[]\r\n   values: ICookingBookValues\r\n   handleSave:(menu: IMenu) => Promise<void>\r\n}\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, values, handleSave} = props\r\n    const dispatch = useDispatch();\r\n\r\n    if(layoutConfig.componentKey === 'add'){\r\n        dispatch(SetPageTitle(values.pageTitleAdd))\r\n    }\r\n\r\n    if(layoutConfig.componentKey === 'edit'){\r\n        dispatch(SetPageTitle(values.pageTitleEdit))\r\n    }\r\n\r\n    if(layoutConfig.componentKey === 'view'){\r\n        dispatch(SetPageTitle(values.pageTitleView))\r\n    }\r\n\r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n\r\n    const handleMenuSelect = React.useCallback((id: number | null) =>{\r\n        if(id !== null)\r\n        dispatch(SetMenu(menuCollection?.find(menu => menu.id === id) ?? {} as IMenu))\r\n        dispatch(SetOriginalMenu(menuCollection?.find(menu => menu.id === id) ?? {} as IMenu))\r\n    },[menuCollection, dispatch])\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filteredMenus = React.useMemo(() =>{\r\n\r\n        if(menuType === MenuTypeEnum.None){\r\n            return menuCollection\r\n        }\r\n\r\n        return menuCollection.filter(menu => menu.menuType === menuType)\r\n    },[menuType, menuCollection])\r\n\r\n    const filterItems = React.useMemo((): IAutocompleteItem[] =>{\r\n       \r\n        return filteredMenus.map((item) =>{\r\n            return(\r\n                {id: item.id, label: item.name}\r\n            )\r\n        })\r\n            \r\n    },[filteredMenus])\r\n\r\n    dispatch(SetMenu({} as IMenu))\r\n    \r\n    return(\r\n            <Grid\r\n                container\r\n                style={{overflow: 'auto'}}\r\n                direction='row'\r\n                justifyContent='center'\r\n                alignContent='center'>\r\n                    {layoutConfig.hasFilter && (\r\n                    <Grid\r\n                        style={{marginTop: '1.5vh'}}\r\n                        item\r\n                        xs={11}\r\n                        xl={11}>\r\n                        <Paper style={{backgroundColor: '#f2f2ed'}}>\r\n                            <MenuFilter\r\n                                items={filterItems}\r\n                                selectedMenuType={menuType}\r\n                                values={values}\r\n                                onMenuSelect={handleMenuSelect}\r\n                                onMenuTypeChange={onMenuTypeChange}/>\r\n                        </Paper>\r\n                    </Grid>\r\n                    )}\r\n                    <Grid\r\n                        style={{marginTop: '1.5vh'}}\r\n                        item\r\n                        xs={11}\r\n                        xl={11}>\r\n                        <Paper style={{display:'flex', justifyContent:'center', padding:'1vw'}}>\r\n                            <MenuContainer \r\n                                values={values}\r\n                                config={layoutConfig}\r\n                                menuCollection={filteredMenus}\r\n                                handleSave={handleSave}/>\r\n                        </Paper>\r\n                    </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuLayout\r\n"]},"metadata":{},"sourceType":"module"}