{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\nimport LogTable from '../../../_components/_virtualized/_table/Table';\nimport { AutoSizer } from 'react-virtualized';\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingPageContainer = props => {\n  _s();\n\n  const {\n    logmessages\n  } = props;\n  const dispatch = useDispatch();\n  dispatch(SetPageTitle(\"Administration - Logging\")); // const columns = React.useMemo(() =>{\n  //     const columns: any[] = []\n  //     // columns.push(TableColunm({key: \"0\", dataKey: 'id', width: 100, headerValue:\"ID\" }))\n  //     // columns.push(TableColunm({key: \"1\", dataKey: 'date', width: 300, headerValue: \"Date\"}))\n  //     // columns.push(TableColunm({key: \"2\", dataKey: 'logMessageType', width: 300, headerValue: \"Type\"}))\n  //     // columns.push(TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\"}))\n  //     // columns.push(TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Exception\"}))\n  //     return columns\n  // },[])\n\n  const rowGetter = React.useCallback(row => {\n    return logmessages[row.index];\n  }, [logmessages]);\n  return (\n    /*#__PURE__*/\n    // <Grid\n    //     // style={{padding:'2.5rem'}}\n    //     justifyContent='center'\n    //     container>\n    _jsxDEV(AutoSizer, {\n      children: _ref => {\n        let {\n          width,\n          height\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(LogTable, {\n          height: 600,\n          width: width,\n          rowHeight: 50,\n          rowCount: logmessages.length,\n          headerHeight: 100,\n          logmessages: logmessages,\n          getRow: rowGetter,\n          children: [TableColunm({\n            key: \"0\",\n            dataKey: 'id',\n            width: 100,\n            headerValue: \"ID\"\n          }), TableColunm({\n            key: \"1\",\n            dataKey: 'date',\n            width: 300,\n            headerValue: \"Date\"\n          }), TableColunm({\n            key: \"2\",\n            dataKey: 'logMessageType',\n            width: 300,\n            headerValue: \"Type\"\n          }), TableColunm({\n            key: \"3\",\n            dataKey: 'message',\n            width: 500,\n            headerValue: \"Message\"\n          }), TableColunm({\n            key: \"4\",\n            dataKey: 'exception',\n            width: 500,\n            headerValue: \"Exception\"\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) // </Grid>\n\n  );\n};\n\n_s(LoggingPageContainer, \"2brdTCyCfXLBj97TE26xYMuhG4A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoggingPageContainer;\nexport default LoggingPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingPageContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingPageContainer.tsx"],"names":["React","useDispatch","SetPageTitle","LogTable","AutoSizer","TableColunm","LoggingPageContainer","props","logmessages","dispatch","rowGetter","useCallback","row","index","width","height","length","key","dataKey","headerValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,iDAA7B;AAEA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,SAAT,QAAiC,mBAAjC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;;AAOA,MAAMC,oBAAsC,GAAIC,KAAD,IAAU;AAAA;;AAErD,QAAM;AAACC,IAAAA;AAAD,MAAgBD,KAAtB;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAQ,EAAAA,QAAQ,CAACP,YAAY,CAAC,0BAAD,CAAb,CAAR,CALqD,CAOrD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMQ,SAAS,GAAGV,KAAK,CAACW,WAAN,CAAmBC,GAAD,IAAe;AAC/C,WAAOJ,WAAW,CAACI,GAAG,CAACC,KAAL,CAAlB;AACH,GAFiB,EAEhB,CAACL,WAAD,CAFgB,CAAlB;AAIA;AAAA;AACI;AACA;AACA;AACA;AACI,YAAC,SAAD;AAAA,gBACK;AAAA,YAAC;AAACM,UAAAA,KAAD;AAAQC,UAAAA;AAAR,SAAD;AAAA,4BACD,QAAC,QAAD;AACI,UAAA,MAAM,EAAE,GADZ;AAEI,UAAA,KAAK,EAAED,KAFX;AAGI,UAAA,SAAS,EAAE,EAHf;AAII,UAAA,QAAQ,EAAEN,WAAW,CAACQ,MAJ1B;AAKI,UAAA,YAAY,EAAE,GALlB;AAMI,UAAA,WAAW,EAAER,WANjB;AAOI,UAAA,MAAM,EAAEE,SAPZ;AAAA,qBASKL,WAAW,CAAC;AAACY,YAAAA,GAAG,EAAE,GAAN;AAAWC,YAAAA,OAAO,EAAE,IAApB;AAA0BJ,YAAAA,KAAK,EAAE,GAAjC;AAAsCK,YAAAA,WAAW,EAAC;AAAlD,WAAD,CAThB,EAUKd,WAAW,CAAC;AAACY,YAAAA,GAAG,EAAE,GAAN;AAAWC,YAAAA,OAAO,EAAE,MAApB;AAA4BJ,YAAAA,KAAK,EAAE,GAAnC;AAAwCK,YAAAA,WAAW,EAAE;AAArD,WAAD,CAVhB,EAWKd,WAAW,CAAC;AAACY,YAAAA,GAAG,EAAE,GAAN;AAAWC,YAAAA,OAAO,EAAE,gBAApB;AAAsCJ,YAAAA,KAAK,EAAE,GAA7C;AAAkDK,YAAAA,WAAW,EAAE;AAA/D,WAAD,CAXhB,EAYKd,WAAW,CAAC;AAACY,YAAAA,GAAG,EAAE,GAAN;AAAWC,YAAAA,OAAO,EAAE,SAApB;AAA+BJ,YAAAA,KAAK,EAAE,GAAtC;AAA2CK,YAAAA,WAAW,EAAE;AAAxD,WAAD,CAZhB,EAaKd,WAAW,CAAC;AAACY,YAAAA,GAAG,EAAE,GAAN;AAAWC,YAAAA,OAAO,EAAE,WAApB;AAAiCJ,YAAAA,KAAK,EAAE,GAAxC;AAA6CK,YAAAA,WAAW,EAAE;AAA1D,WAAD,CAbhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YALR,CAwBI;;AAxBJ;AA0BH,CAjDD;;GAAMb,oB;UAGeL,W;;;KAHfK,oB;AAmDN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\r\nimport { ILogmessage } from './interfaces/ILogmessage';\r\nimport LogTable from '../../../_components/_virtualized/_table/Table';\r\nimport { AutoSizer, Index } from 'react-virtualized';\r\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\r\nimport { Grid } from '@material-ui/core';\r\n\r\ninterface IProps{\r\n    logmessages: ILogmessage[]\r\n}\r\n\r\nconst LoggingPageContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {logmessages} = props\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(SetPageTitle(\"Administration - Logging\"))\r\n  \r\n    // const columns = React.useMemo(() =>{\r\n    //     const columns: any[] = []\r\n        \r\n    //     // columns.push(TableColunm({key: \"0\", dataKey: 'id', width: 100, headerValue:\"ID\" }))\r\n    //     // columns.push(TableColunm({key: \"1\", dataKey: 'date', width: 300, headerValue: \"Date\"}))\r\n    //     // columns.push(TableColunm({key: \"2\", dataKey: 'logMessageType', width: 300, headerValue: \"Type\"}))\r\n    //     // columns.push(TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\"}))\r\n    //     // columns.push(TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Exception\"}))\r\n    \r\n    //     return columns\r\n    // },[])\r\n\r\n    const rowGetter = React.useCallback((row: Index) =>{\r\n        return logmessages[row.index]\r\n    },[logmessages])\r\n\r\n    return(\r\n        // <Grid\r\n        //     // style={{padding:'2.5rem'}}\r\n        //     justifyContent='center'\r\n        //     container>\r\n            <AutoSizer>\r\n                {({width, height}) =>(\r\n                <LogTable \r\n                    height={600} \r\n                    width={width} \r\n                    rowHeight={50} \r\n                    rowCount={logmessages.length} \r\n                    headerHeight={100}\r\n                    logmessages={logmessages}\r\n                    getRow={rowGetter}\r\n                    >\r\n                    {TableColunm({key: \"0\", dataKey: 'id', width: 100, headerValue:\"ID\" })}\r\n                    {TableColunm({key: \"1\", dataKey: 'date', width: 300, headerValue: \"Date\"})}\r\n                    {TableColunm({key: \"2\", dataKey: 'logMessageType', width: 300, headerValue: \"Type\"})}\r\n                    {TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\"})}\r\n                    {TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Exception\"})}\r\n                </LogTable>\r\n                )}\r\n            </AutoSizer>\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default LoggingPageContainer"]},"metadata":{},"sourceType":"module"}