{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\IngredientListItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport MenuInputComponent from './MenueInputComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  ingrdient_root: {\n    display: 'flex',\n    flexDirection: 'row',\n    maxWidth: '83vw',\n    overflow: 'hidden'\n  },\n  item: {}\n});\n\nconst IngrdientListtem = props => {\n  _s();\n\n  var _currentIngredient$am, _currentIngredient$na, _currentIngredient$un;\n\n  const {\n    ingredient,\n    isReadOnly,\n    values,\n    unitTypeItems,\n    onIngredientChanged\n  } = props;\n  const [currentIngredient, setCurrentIngredient] = React.useState(ingredient !== null && ingredient !== void 0 ? ingredient : {});\n  const useStyle = styles();\n  const handleUnitChanged = React.useCallback(value => {\n    const ingredient = { ...currentIngredient,\n      unit: value\n    };\n    setCurrentIngredient(ingredient);\n  }, [currentIngredient, setCurrentIngredient]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    className: useStyle.ingrdient_root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.item,\n      xs: 4,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.amount,\n        fullWidth: true,\n        value: (_currentIngredient$am = currentIngredient === null || currentIngredient === void 0 ? void 0 : currentIngredient.amount) !== null && _currentIngredient$am !== void 0 ? _currentIngredient$am : '',\n        isReadonly: isReadOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.item,\n      xs: 4,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.name,\n        fullWidth: true,\n        value: (_currentIngredient$na = currentIngredient === null || currentIngredient === void 0 ? void 0 : currentIngredient.name) !== null && _currentIngredient$na !== void 0 ? _currentIngredient$na : '',\n        isReadonly: isReadOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.item,\n      xs: 4,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.unit,\n        fullWidth: true,\n        value: (_currentIngredient$un = currentIngredient === null || currentIngredient === void 0 ? void 0 : currentIngredient.unit) !== null && _currentIngredient$un !== void 0 ? _currentIngredient$un : '',\n        isReadonly: isReadOnly,\n        hasSelect: true,\n        onSelectChanged: handleUnitChanged,\n        selectElements: unitTypeItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 8\n  }, this);\n};\n\n_s(IngrdientListtem, \"QazWyCBCfUJPRTXgXJe5xAfPGFU=\");\n\n_c = IngrdientListtem;\nexport default IngrdientListtem;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngrdientListtem\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/IngredientListItem.tsx"],"names":["React","Grid","makeStyles","MenuInputComponent","styles","ingrdient_root","display","flexDirection","maxWidth","overflow","item","IngrdientListtem","props","ingredient","isReadOnly","values","unitTypeItems","onIngredientChanged","currentIngredient","setCurrentIngredient","useState","useStyle","handleUnitChanged","useCallback","value","unit","amount","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAGA,MAAMC,MAAM,GAAGF,UAAU,CAAC;AACtBG,EAAAA,cAAc,EAAC;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,aAAa,EAAE,KAFJ;AAGXC,IAAAA,QAAQ,EAAE,MAHC;AAIXC,IAAAA,QAAQ,EAAC;AAJE,GADO;AAOtBC,EAAAA,IAAI,EAAC;AAPiB,CAAD,CAAzB;;AAoBA,MAAMC,gBAAkC,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAElD,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA,aAAjC;AAAgDC,IAAAA;AAAhD,MAAuEL,KAA7E;AAEA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CnB,KAAK,CAACoB,QAAN,CAA4BP,UAA5B,aAA4BA,UAA5B,cAA4BA,UAA5B,GAAyC,EAAzC,CAAlD;AACA,QAAMQ,QAAQ,GAAGjB,MAAM,EAAvB;AAEA,QAAMkB,iBAAiB,GAAGtB,KAAK,CAACuB,WAAN,CAAmBC,KAAD,IAAmB;AAC3D,UAAMX,UAAuB,GAAG,EAAC,GAAGK,iBAAJ;AAAuBO,MAAAA,IAAI,EAAED;AAA7B,KAAhC;AACAL,IAAAA,oBAAoB,CAACN,UAAD,CAApB;AAEH,GAJyB,EAIxB,CAACK,iBAAD,EAAoBC,oBAApB,CAJwB,CAA1B;AAMA,sBACG,QAAC,IAAD;AACK,IAAA,SAAS,MADd;AAEK,IAAA,cAAc,EAAC,QAFpB;AAGK,IAAA,SAAS,EAAEE,QAAQ,CAAChB,cAHzB;AAAA,4BAIS,QAAC,IAAD;AACI,MAAA,SAAS,EAAEgB,QAAQ,CAACX,IADxB;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,IAAI,MAHR;AAAA,6BAII,QAAC,kBAAD;AACI,QAAA,KAAK,EAAEK,MAAM,CAACW,MADlB;AAEI,QAAA,SAAS,EAAE,IAFf;AAGI,QAAA,KAAK,2BAAER,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEQ,MAArB,yEAA8B,EAHvC;AAII,QAAA,UAAU,EAAGZ;AAJjB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAJT,eAcS,QAAC,IAAD;AACI,MAAA,SAAS,EAAEO,QAAQ,CAACX,IADxB;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,IAAI,MAHR;AAAA,6BAIK,QAAC,kBAAD;AACG,QAAA,KAAK,EAAEK,MAAM,CAACY,IADjB;AAEG,QAAA,SAAS,EAAE,IAFd;AAGG,QAAA,KAAK,2BAAET,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAES,IAArB,yEAA4B,EAHpC;AAIG,QAAA,UAAU,EAAGb;AAJhB;AAAA;AAAA;AAAA;AAAA;AAJL;AAAA;AAAA;AAAA;AAAA,YAdT,eAwBS,QAAC,IAAD;AACI,MAAA,SAAS,EAAEO,QAAQ,CAACX,IADxB;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,IAAI,MAHR;AAAA,6BAIK,QAAC,kBAAD;AACG,QAAA,KAAK,EAAEK,MAAM,CAACU,IADjB;AAEG,QAAA,SAAS,EAAE,IAFd;AAGG,QAAA,KAAK,2BAAEP,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEO,IAArB,yEAA4B,EAHpC;AAIG,QAAA,UAAU,EAAGX,UAJhB;AAKG,QAAA,SAAS,EAAE,IALd;AAMG,QAAA,eAAe,EAAEQ,iBANpB;AAOG,QAAA,cAAc,EAAEN;AAPnB;AAAA;AAAA;AAAA;AAAA;AAJL;AAAA;AAAA;AAAA;AAAA,YAxBT;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAyCH,CAtDD;;GAAML,gB;;KAAAA,gB;AAwDN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport {IIngredient} from '../../_interfaces/IMenu'\r\nimport {Grid, makeStyles} from '@material-ui/core'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\nconst styles = makeStyles({\r\n    ingrdient_root:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        maxWidth: '83vw',\r\n        overflow:'hidden'\r\n    },\r\n    item:{\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    ingredient: IIngredient | null\r\n    isReadOnly: boolean\r\n    values: ICookingBookValues\r\n    unitTypeItems: JSX.Element[]\r\n    onIngredientChanged: (ingredient: IIngredient) => void\r\n}\r\n\r\n\r\nconst IngrdientListtem: React.FC<IProps> = (props) => {\r\n\r\n    const {ingredient, isReadOnly, values, unitTypeItems, onIngredientChanged} = props\r\n\r\n    const [currentIngredient, setCurrentIngredient] = React.useState<IIngredient>(ingredient?? {} as IIngredient)\r\n    const useStyle = styles()\r\n\r\n    const handleUnitChanged = React.useCallback((value: number) => {\r\n        const ingredient: IIngredient = {...currentIngredient, unit: value}\r\n        setCurrentIngredient(ingredient)\r\n\r\n    },[currentIngredient, setCurrentIngredient])\r\n\r\n    return(\r\n       <Grid \r\n            container\r\n            justifyContent='center'\r\n            className={useStyle.ingrdient_root}>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    xs={4}\r\n                    item>\r\n                    <MenuInputComponent\r\n                        label={values.amount}\r\n                        fullWidth={true}\r\n                        value={currentIngredient?.amount?? ''}\r\n                        isReadonly= {isReadOnly}/>\r\n                </Grid>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    xs={4}\r\n                    item>\r\n                     <MenuInputComponent\r\n                        label={values.name}\r\n                        fullWidth={true}\r\n                        value={currentIngredient?.name?? ''}\r\n                        isReadonly= {isReadOnly}/>\r\n                </Grid>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    xs={4}\r\n                    item>\r\n                     <MenuInputComponent\r\n                        label={values.unit}\r\n                        fullWidth={true}\r\n                        value={currentIngredient?.unit?? ''}\r\n                        isReadonly= {isReadOnly}\r\n                        hasSelect={true}\r\n                        onSelectChanged={handleUnitChanged}\r\n                        selectElements={unitTypeItems}\r\n                        />\r\n                </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IngrdientListtem"]},"metadata":{},"sourceType":"module"}