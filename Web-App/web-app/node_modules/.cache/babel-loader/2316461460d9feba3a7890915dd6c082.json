{"ast":null,"code":"import _objectSpread from\"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import React from'react';import{Grid,makeStyles}from'@material-ui/core';import MenuInputComponent from'./MenueInputComponent';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=makeStyles({ingrdient_root:{display:'flex',flexDirection:'row',maxWidth:'83vw',overflow:'hidden'},item:{}});var IngrdientListtem=function IngrdientListtem(props){var _ingredient$amount,_ingredient$unit,_ingredient$name;var ingredient=props.ingredient,isReadOnly=props.isReadOnly,values=props.values,unitTypeItems=props.unitTypeItems,onIngredientChanged=props.onIngredientChanged;var useStyle=styles();var handleAmountChanged=React.useCallback(function(value){onIngredientChanged(_objectSpread(_objectSpread({},ingredient),{},{amount:parseInt(value)}));},[ingredient,onIngredientChanged]);var handleNameChanged=React.useCallback(function(value){onIngredientChanged(_objectSpread(_objectSpread({},ingredient),{},{name:value}));},[ingredient,onIngredientChanged]);var handleUnitChanged=React.useCallback(function(value){onIngredientChanged(_objectSpread(_objectSpread({},ingredient),{},{unit:value}));},[ingredient,onIngredientChanged]);return/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"center\",className:useStyle.ingrdient_root,children:[/*#__PURE__*/_jsx(Grid,{className:useStyle.item,xs:2,item:true,children:/*#__PURE__*/_jsx(MenuInputComponent,{label:values.amount,fullWidth:true,type:\"number\",value:(_ingredient$amount=ingredient===null||ingredient===void 0?void 0:ingredient.amount)!==null&&_ingredient$amount!==void 0?_ingredient$amount:'',isReadonly:isReadOnly,onValueChanged:handleAmountChanged})}),/*#__PURE__*/_jsx(Grid,{className:useStyle.item,xs:6,item:true,children:/*#__PURE__*/_jsx(MenuInputComponent,{label:values.unit,fullWidth:true,value:(_ingredient$unit=ingredient===null||ingredient===void 0?void 0:ingredient.unit)!==null&&_ingredient$unit!==void 0?_ingredient$unit:'',isReadonly:isReadOnly,hasSelect:true,onSelectChanged:handleUnitChanged,selectElements:unitTypeItems})}),/*#__PURE__*/_jsx(Grid,{className:useStyle.item,xs:4,item:true,children:/*#__PURE__*/_jsx(MenuInputComponent,{label:values.name,fullWidth:true,value:(_ingredient$name=ingredient===null||ingredient===void 0?void 0:ingredient.name)!==null&&_ingredient$name!==void 0?_ingredient$name:'',isReadonly:isReadOnly,onValueChanged:handleNameChanged})})]});};export default IngrdientListtem;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/IngredientListItem.tsx"],"names":["React","Grid","makeStyles","MenuInputComponent","styles","ingrdient_root","display","flexDirection","maxWidth","overflow","item","IngrdientListtem","props","ingredient","isReadOnly","values","unitTypeItems","onIngredientChanged","useStyle","handleAmountChanged","useCallback","value","amount","parseInt","handleNameChanged","name","handleUnitChanged","unit"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {IIngredient} from '../../_interfaces/IMenu'\r\nimport {Grid, makeStyles} from '@material-ui/core'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\nconst styles = makeStyles({\r\n    ingrdient_root:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        maxWidth: '83vw',\r\n        overflow:'hidden'\r\n    },\r\n    item:{\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    ingredient: IIngredient\r\n    isReadOnly: boolean\r\n    values: ICookingBookValues\r\n    unitTypeItems: JSX.Element[]\r\n    onIngredientChanged: (ingredient: IIngredient) => void\r\n}\r\n\r\n\r\nconst IngrdientListtem: React.FC<IProps> = (props) => {\r\n\r\n    const {ingredient, isReadOnly, values, unitTypeItems, onIngredientChanged} = props\r\n\r\n    const useStyle = styles()\r\n\r\n    const handleAmountChanged = React.useCallback((value: string) => {\r\n       \r\n        onIngredientChanged({...ingredient, amount: parseInt(value)})\r\n    },[ingredient, onIngredientChanged])\r\n\r\n    const handleNameChanged = React.useCallback((value: string) => {\r\n        \r\n        onIngredientChanged({...ingredient, name: value})\r\n    },[ingredient, onIngredientChanged])\r\n\r\n    const handleUnitChanged = React.useCallback((value: number) => {\r\n       \r\n        onIngredientChanged({...ingredient, unit: value})\r\n    },[ingredient, onIngredientChanged])\r\n\r\n\r\n\r\n    return(\r\n       <Grid \r\n            container\r\n            justifyContent='center'\r\n            className={useStyle.ingrdient_root}>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    xs={2}\r\n                    item>\r\n                    <MenuInputComponent\r\n                        label={values.amount}\r\n                        fullWidth={true}\r\n                        type='number'\r\n                        value={ingredient?.amount?? ''}\r\n                        isReadonly= {isReadOnly}\r\n                        onValueChanged={handleAmountChanged}/>\r\n                </Grid>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    xs={6}\r\n                    item>\r\n                     <MenuInputComponent\r\n                        label={values.unit}\r\n                        fullWidth={true}\r\n                        value={ingredient?.unit?? ''}\r\n                        isReadonly= {isReadOnly}\r\n                        hasSelect={true}\r\n                        onSelectChanged={handleUnitChanged}\r\n                        selectElements={unitTypeItems}\r\n                        />\r\n                </Grid>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    xs={4}\r\n                    item>\r\n                    <MenuInputComponent\r\n                        label={values.name}\r\n                        fullWidth={true}\r\n                        value={ingredient?.name?? ''}\r\n                        isReadonly= {isReadOnly}\r\n                        onValueChanged={handleNameChanged}/>\r\n                </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IngrdientListtem"]},"metadata":{},"sourceType":"module"}