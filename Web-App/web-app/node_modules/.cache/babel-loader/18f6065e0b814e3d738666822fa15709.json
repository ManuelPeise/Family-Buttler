{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\cookingBookDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport MenuLayout from './menuLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CookingBookDataService = props => {\n  _s();\n\n  var _menuDataService$item;\n\n  const {\n    componentKey\n  } = props;\n  const dispatch = useDispatch();\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const component = React.useMemo(() => {\n    switch (componentKey) {\n      case 'view':\n        return /*#__PURE__*/_jsxDEV(MenuLayout, {\n          layoutConfig: {\n            isReadOnly: true,\n            hasFilter: true,\n            hasMenuList: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }, this);\n\n      case 'add':\n        return /*#__PURE__*/_jsxDEV(MenuLayout, {\n          layoutConfig: {\n            isReadOnly: false,\n            hasFilter: false,\n            hasMenuList: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n\n      case 'edit':\n        return /*#__PURE__*/_jsxDEV(MenuLayout, {\n          layoutConfig: {\n            isReadOnly: false,\n            hasFilter: true,\n            hasMenuList: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n    }\n  }, [componentKey]);\n\n  if (menuDataService.items[0] === null) {\n    return null;\n  }\n\n  dispatch(SetMenuCollection((_menuDataService$item = menuDataService.items[0]) === null || _menuDataService$item === void 0 ? void 0 : _menuDataService$item.menuCollection));\n  return component;\n};\n\n_s(CookingBookDataService, \"1X6/Icd3LY7REHEyrUrQQOrQzKs=\", false, function () {\n  return [useDispatch, useApi];\n});\n\n_c = CookingBookDataService;\nexport default CookingBookDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"CookingBookDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/cookingBookDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","useDispatch","MenuLayout","CookingBookDataService","props","componentKey","dispatch","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","component","useMemo","isReadOnly","hasFilter","hasMenuList","items","menuCollection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,iBAAT,QAAkC,8CAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAOA,MAAMC,sBAAwC,GAAIC,KAAD,IAAU;AAAA;;AAAA;;AAEvD,QAAM;AAACC,IAAAA;AAAD,MAAiBD,KAAvB;AAEA,QAAME,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,eAAe,GAAGT,MAAM,CAAgB;AAACU,IAAAA,UAAU,EAAET,SAAS,CAACU,OAAV,GAAoBV,SAAS,CAACW,WAAV,CAAsBC,iBAAvD;AAA0EC,IAAAA,MAAM,EAAE;AAAlF,GAAhB,CAA9B;AAEA,QAAMC,SAAS,GAAGhB,KAAK,CAACiB,OAAN,CAAc,MAAK;AAEjC,YAAOT,YAAP;AACI,WAAK,MAAL;AACI,4BAAO,QAAC,UAAD;AAAY,UAAA,YAAY,EAAE;AAACU,YAAAA,UAAU,EAAE,IAAb;AAAmBC,YAAAA,SAAS,EAAE,IAA9B;AAAoCC,YAAAA,WAAW,EAAE;AAAjD;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,KAAL;AACI,4BAAO,QAAC,UAAD;AAAY,UAAA,YAAY,EAAE;AAACF,YAAAA,UAAU,EAAE,KAAb;AAAoBC,YAAAA,SAAS,EAAE,KAA/B;AAAsCC,YAAAA,WAAW,EAAE;AAAnD;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,MAAL;AACI,4BAAO,QAAC,UAAD;AAAY,UAAA,YAAY,EAAE;AAACF,YAAAA,UAAU,EAAE,KAAb;AAAoBC,YAAAA,SAAS,EAAE,IAA/B;AAAqCC,YAAAA,WAAW,EAAE;AAAlD;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;AANR;AAQH,GAViB,EAUhB,CAACZ,YAAD,CAVgB,CAAlB;;AAYA,MAAGE,eAAe,CAACW,KAAhB,CAAsB,CAAtB,MAA6B,IAAhC,EAAqC;AAEjC,WAAO,IAAP;AACH;;AAEDZ,EAAAA,QAAQ,CAACN,iBAAiB,0BAACO,eAAe,CAACW,KAAhB,CAAsB,CAAtB,CAAD,0DAAC,sBAA0BC,cAA3B,CAAlB,CAAR;AAEA,SAAON,SAAP;AACH,CA5BD;;GAAMV,sB;UAIeF,W,EAEOH,M;;;KANtBK,sB;AA8BN,eAAeA,sBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport MenuLayout from './menuLayout'\r\n\r\n\r\ninterface IProps{\r\n    componentKey: 'view' | 'add' | 'edit'\r\n}\r\n\r\nconst CookingBookDataService: React.FC<IProps> = (props) =>{\r\n\r\n    const {componentKey} = props\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const component = React.useMemo(() =>{\r\n\r\n        switch(componentKey){\r\n            case 'view':\r\n                return <MenuLayout layoutConfig={{isReadOnly: true, hasFilter: true, hasMenuList: true}} />\r\n            case 'add':\r\n                return <MenuLayout layoutConfig={{isReadOnly: false, hasFilter: false, hasMenuList: false}}/>\r\n            case 'edit':\r\n                return <MenuLayout layoutConfig={{isReadOnly: false, hasFilter: true, hasMenuList: true}}/>\r\n        }\r\n    },[componentKey])\r\n\r\n    if(menuDataService.items[0] === null){\r\n\r\n        return null\r\n    }\r\n\r\n    dispatch(SetMenuCollection(menuDataService.items[0]?.menuCollection))\r\n    \r\n    return component\r\n}\r\n\r\nexport default CookingBookDataService"]},"metadata":{},"sourceType":"module"}