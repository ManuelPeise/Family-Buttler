{"ast":null,"code":"import{Checkbox,Grid,makeStyles,Tooltip,Typography}from'@material-ui/core';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=makeStyles({cell:{'&:hover':{cursor:'pointer'}}});var TableCell=function TableCell(props){var id=props.id,hasCheckbox=props.hasCheckbox,selectedItems=props.selectedItems,value=props.value,handleSelectedItems=props.handleSelectedItems;var useStyle=styles();var selectedIndex=selectedItems.findIndex(function(x){return x===id;});console.log(selectedIndex);var handleSelect=React.useCallback(function(id){if(selectedIndex===-1){var copy=selectedItems;copy.push(id);handleSelectedItems(copy);}else{var _copy=selectedItems;_copy.splice(selectedItems.findIndex(function(x){return x===id;}));handleSelectedItems(_copy);}},[selectedItems,selectedIndex,handleSelectedItems]);var cellComponent=React.useMemo(function(){return/*#__PURE__*/_jsxs(Grid,{className:useStyle.cell,container:true,children:[hasCheckbox&&/*#__PURE__*/_jsx(Tooltip,{title:\"delete\",children:/*#__PURE__*/_jsx(Checkbox,{checked:selectedIndex!==-1,onChange:handleSelect===null||handleSelect===void 0?void 0:handleSelect.bind(null,id)})}),!hasCheckbox&&/*#__PURE__*/_jsx(Tooltip,{title:value,children:/*#__PURE__*/_jsx(Typography,{children:value})})]});},[handleSelect,selectedIndex,hasCheckbox,id,useStyle,value]);return cellComponent;};export default TableCell;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableCell.tsx"],"names":["Checkbox","Grid","makeStyles","Tooltip","Typography","React","styles","cell","cursor","TableCell","props","id","hasCheckbox","selectedItems","value","handleSelectedItems","useStyle","selectedIndex","findIndex","x","console","log","handleSelect","useCallback","copy","push","splice","cellComponent","useMemo","bind"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,IAAnB,CAAyBC,UAAzB,CAAqCC,OAArC,CAA8CC,UAA9C,KAAgE,mBAAhE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGJ,UAAU,CAAC,CACtBK,IAAI,CAAC,CACD,UAAU,CACNC,MAAM,CAAE,SADF,CADT,CADiB,CAAD,CAAzB,CAiBA,GAAMC,CAAAA,SAA2B,CAAG,QAA9BA,CAAAA,SAA8B,CAACC,KAAD,CAAW,CAE3C,GAAOC,CAAAA,EAAP,CAAqED,KAArE,CAAOC,EAAP,CAAWC,WAAX,CAAqEF,KAArE,CAAWE,WAAX,CAAwBC,aAAxB,CAAqEH,KAArE,CAAwBG,aAAxB,CAAuCC,KAAvC,CAAqEJ,KAArE,CAAuCI,KAAvC,CAA8CC,mBAA9C,CAAqEL,KAArE,CAA8CK,mBAA9C,CAEA,GAAMC,CAAAA,QAAQ,CAAGV,MAAM,EAAvB,CAEA,GAAMW,CAAAA,aAAa,CAAGJ,aAAa,CAACK,SAAd,CAAwB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKR,EAAV,EAAzB,CAAtB,CAEAS,OAAO,CAACC,GAAR,CAAYJ,aAAZ,EAEA,GAAMK,CAAAA,YAAY,CAAGjB,KAAK,CAACkB,WAAN,CAAkB,SAACZ,EAAD,CAAe,CAClD,GAAGM,aAAa,GAAK,CAAC,CAAtB,CAAwB,CACpB,GAAMO,CAAAA,IAAI,CAAGX,aAAb,CACAW,IAAI,CAACC,IAAL,CAAUd,EAAV,EACAI,mBAAmB,CAACS,IAAD,CAAnB,CACH,CAJD,IAIK,CACD,GAAMA,CAAAA,KAAI,CAAGX,aAAb,CACAW,KAAI,CAACE,MAAL,CAAYb,aAAa,CAACK,SAAd,CAAwB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKR,EAAV,EAAzB,CAAZ,EACAI,mBAAmB,CAACS,KAAD,CAAnB,CACH,CACJ,CAVoB,CAUnB,CAACX,aAAD,CAAgBI,aAAhB,CAA+BF,mBAA/B,CAVmB,CAArB,CAYA,GAAMY,CAAAA,aAAa,CAAGtB,KAAK,CAACuB,OAAN,CAAc,UAAK,CACrC,mBACI,MAAC,IAAD,EACI,SAAS,CAAEZ,QAAQ,CAACT,IADxB,CAEI,SAAS,KAFb,WAGKK,WAAW,eACR,KAAC,OAAD,EAAS,KAAK,CAAC,QAAf,uBACI,KAAC,QAAD,EAAU,OAAO,CAAEK,aAAa,GAAK,CAAC,CAAtC,CAAyC,QAAQ,CAAEK,YAAF,SAAEA,YAAF,iBAAEA,YAAY,CAAEO,IAAd,CAAmB,IAAnB,CAAyBlB,EAAzB,CAAnD,EADJ,EAJR,CAQK,CAACC,WAAD,eACD,KAAC,OAAD,EAAS,KAAK,CAAEE,KAAhB,uBACI,KAAC,UAAD,WAAaA,KAAb,EADJ,EATJ,GADJ,CAgBH,CAjBqB,CAiBpB,CAACQ,YAAD,CAAeL,aAAf,CAA8BL,WAA9B,CAA2CD,EAA3C,CAA+CK,QAA/C,CAAyDF,KAAzD,CAjBoB,CAAtB,CAmBA,MACIa,CAAAA,aADJ,CAGH,CA5CD,CA8CA,cAAelB,CAAAA,SAAf","sourcesContent":["import { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst styles = makeStyles({\r\n    cell:{\r\n        '&:hover':{\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    id: number\r\n    hasCheckbox?: boolean\r\n    value: string\r\n    selectedItems: number[]\r\n    handleSelectedItems: (id: number[]) => void\r\n\r\n}\r\n\r\nconst TableCell: React.FC<IProps> = (props) => {\r\n\r\n    const {id, hasCheckbox, selectedItems, value, handleSelectedItems} = props\r\n\r\n    const useStyle = styles()\r\n\r\n    const selectedIndex = selectedItems.findIndex(x => x === id)\r\n\r\n    console.log(selectedIndex)\r\n\r\n    const handleSelect = React.useCallback((id: number) =>{\r\n        if(selectedIndex === -1){\r\n            const copy = selectedItems\r\n            copy.push(id)\r\n            handleSelectedItems(copy)\r\n        }else{\r\n            const copy = selectedItems\r\n            copy.splice(selectedItems.findIndex(x => x === id))\r\n            handleSelectedItems(copy)\r\n        }\r\n    },[selectedItems, selectedIndex, handleSelectedItems])\r\n\r\n    const cellComponent = React.useMemo(() =>{\r\n        return(\r\n            <Grid\r\n                className={useStyle.cell}\r\n                container>\r\n                {hasCheckbox && (\r\n                    <Tooltip title='delete'>\r\n                        <Checkbox checked={selectedIndex !== -1} onChange={handleSelect?.bind(null, id)}/>\r\n                    </Tooltip>\r\n                )}\r\n                {!hasCheckbox &&(\r\n                <Tooltip title={value}>\r\n                    <Typography>{value}</Typography>\r\n                </Tooltip>\r\n                )}\r\n            </Grid>\r\n        )\r\n    },[handleSelect, selectedIndex, hasCheckbox, id, useStyle, value])\r\n\r\n    return(\r\n        cellComponent\r\n    )\r\n}\r\n\r\nexport default TableCell"]},"metadata":{},"sourceType":"module"}