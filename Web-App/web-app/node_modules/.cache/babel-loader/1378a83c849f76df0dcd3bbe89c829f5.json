{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\EditMenuDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport MenuLayout from './MenuLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditMenuDataService = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const valueDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\",\n    params: null\n  });\n  const saveOrUpdateRecipe = React.useCallback(async menu => {\n    await menuDataService.post({\n      serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.addOrUpdateRecipe,\n      method: 'POST',\n      params: menu\n    }).then(() => {});\n  }, [menuDataService]);\n  const component = React.useMemo(() => {\n    var _menuDataService$item, _menuDataService$item2, _menuDataService$item3;\n\n    dispatch(SetMenuCollection((_menuDataService$item = menuDataService.items[0]) === null || _menuDataService$item === void 0 ? void 0 : _menuDataService$item.menuCollection));\n    dispatch(SetPageTitle(valueDataService.items[0].pageTitleEdit));\n    const config = {\n      isReadOnly: false,\n      hasFilter: true,\n      hasMenuList: true,\n      componentKey: 'edit'\n    };\n    return /*#__PURE__*/_jsxDEV(MenuLayout, {\n      layoutConfig: config,\n      menuCollection: (_menuDataService$item2 = (_menuDataService$item3 = menuDataService.items[0]) === null || _menuDataService$item3 === void 0 ? void 0 : _menuDataService$item3.menuCollection) !== null && _menuDataService$item2 !== void 0 ? _menuDataService$item2 : [],\n      values: valueDataService.items[0],\n      handleSave: saveOrUpdateRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }, [menuDataService.items, valueDataService.items, dispatch, saveOrUpdateRecipe]);\n\n  if (menuDataService.items[0] === null) {\n    return null;\n  }\n\n  if (valueDataService.items[0] === null || valueDataService.items[0] === undefined) {\n    return null;\n  }\n\n  return component;\n};\n\n_s(EditMenuDataService, \"XulgI9dKUhY9giUX4r2SIMGX4aI=\", false, function () {\n  return [useDispatch, useApi, useApi];\n});\n\n_c = EditMenuDataService;\nexport default EditMenuDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMenuDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/EditMenuDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","SetPageTitle","useDispatch","MenuLayout","EditMenuDataService","dispatch","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","valueDataService","i18nController","saveOrUpdateRecipe","useCallback","menu","post","addOrUpdateRecipe","method","then","component","useMemo","items","menuCollection","pageTitleEdit","config","isReadOnly","hasFilter","hasMenuList","componentKey","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,8CAAhD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAKA,MAAMC,mBAA6B,GAAE,MAAK;AAAA;;AAEtC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,eAAe,GAAGR,MAAM,CAAgB;AAACS,IAAAA,UAAU,EAAER,SAAS,CAACS,OAAV,GAAoBT,SAAS,CAACU,WAAV,CAAsBC,iBAAvD;AAA0EC,IAAAA,MAAM,EAAE;AAAlF,GAAhB,CAA9B;AAEA,QAAMC,gBAAgB,GAAGd,MAAM,CAAqB;AAACS,IAAAA,UAAU,EAAER,SAAS,CAACS,OAAV,GAAoBT,SAAS,CAACc,cAA9B,GAA+C,2BAA5D;AAAyFF,IAAAA,MAAM,EAAE;AAAjG,GAArB,CAA/B;AAEA,QAAMG,kBAAkB,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,MAAOC,IAAP,IAAsB;AAC/D,UAAMV,eAAe,CAACW,IAAhB,CAAqB;AAACV,MAAAA,UAAU,EAAER,SAAS,CAACS,OAAV,GAAoBT,SAAS,CAACU,WAAV,CAAsBS,iBAAvD;AAA0EC,MAAAA,MAAM,EAAE,MAAlF;AAA0FR,MAAAA,MAAM,EAAEK;AAAlG,KAArB,EACLI,IADK,CACA,MAAK,CAEV,CAHK,CAAN;AAIH,GAL0B,EAKzB,CAACd,eAAD,CALyB,CAA3B;AAOA,QAAMe,SAAS,GAAGxB,KAAK,CAACyB,OAAN,CAAc,MAAK;AAAA;;AAEjCjB,IAAAA,QAAQ,CAACL,iBAAiB,0BAACM,eAAe,CAACiB,KAAhB,CAAsB,CAAtB,CAAD,0DAAC,sBAA0BC,cAA3B,CAAlB,CAAR;AACAnB,IAAAA,QAAQ,CAACJ,YAAY,CAACW,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,EAA0BE,aAA3B,CAAb,CAAR;AAEA,UAAMC,MAAyB,GAAG;AAC9BC,MAAAA,UAAU,EAAE,KADkB;AAE9BC,MAAAA,SAAS,EAAE,IAFmB;AAG9BC,MAAAA,WAAW,EAAE,IAHiB;AAI9BC,MAAAA,YAAY,EAAE;AAJgB,KAAlC;AAOA,wBAAO,QAAC,UAAD;AACK,MAAA,YAAY,EAAEJ,MADnB;AAEK,MAAA,cAAc,sDAAEpB,eAAe,CAACiB,KAAhB,CAAsB,CAAtB,CAAF,2DAAE,uBAA0BC,cAA5B,2EAA6C,EAFhE;AAGK,MAAA,MAAM,EAAEZ,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,CAHb;AAIK,MAAA,UAAU,EAAET;AAJjB;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAlBiB,EAkBhB,CAACR,eAAe,CAACiB,KAAjB,EAAwBX,gBAAgB,CAACW,KAAzC,EAAgDlB,QAAhD,EAA0DS,kBAA1D,CAlBgB,CAAlB;;AAoBA,MAAGR,eAAe,CAACiB,KAAhB,CAAsB,CAAtB,MAA6B,IAAhC,EAAqC;AAEjC,WAAO,IAAP;AACH;;AAED,MAAGX,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,MAA8B,IAA9B,IAAsCX,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,MAA8BQ,SAAvE,EAAiF;AAC7E,WAAO,IAAP;AACH;;AAID,SAAOV,SAAP;AACH,CA/CD;;GAAMjB,mB;UAEeF,W,EAEOJ,M,EAECA,M;;;KANvBM,mB;AAiDN,eAAeA,mBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenu, IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport MenuLayout from './MenuLayout'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\n\r\nconst EditMenuDataService: React.FC= () =>{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const valueDataService = useApi<ICookingBookValues>({serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\", params: null}) \r\n    \r\n    const saveOrUpdateRecipe = React.useCallback(async (menu: IMenu) =>{\r\n        await menuDataService.post({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.addOrUpdateRecipe, method: 'POST', params: menu})\r\n        .then(() =>{\r\n          \r\n        })\r\n    },[menuDataService])\r\n\r\n    const component = React.useMemo(() =>{\r\n       \r\n        dispatch(SetMenuCollection(menuDataService.items[0]?.menuCollection))\r\n        dispatch(SetPageTitle(valueDataService.items[0].pageTitleEdit))\r\n\r\n        const config: IMenuLayoutConfig = {\r\n            isReadOnly: false, \r\n            hasFilter: true, \r\n            hasMenuList: true,\r\n            componentKey: 'edit'\r\n            }\r\n                \r\n        return <MenuLayout \r\n                    layoutConfig={config} \r\n                    menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                    values={valueDataService.items[0]}\r\n                    handleSave={saveOrUpdateRecipe}/>\r\n         \r\n    },[menuDataService.items, valueDataService.items, dispatch, saveOrUpdateRecipe])\r\n\r\n    if(menuDataService.items[0] === null){\r\n\r\n        return null\r\n    }\r\n\r\n    if(valueDataService.items[0] === null || valueDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n\r\n   \r\n    \r\n    return component\r\n}\r\n\r\nexport default EditMenuDataService\r\n"]},"metadata":{},"sourceType":"module"}