{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../../_hooks/useApi';\nimport LoggingPageContainer from './loggingPageContainer';\nimport apiConfig from '../../../_config/apiConfig.json';\nimport { getLogMessageRow } from '../mapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingDataservice = props => {\n  _s();\n\n  const logDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.administration.logging,\n    params: null\n  });\n  const [selectedItems, setSelectedItems] = React.useState([]);\n  const handleSelectedItemsChanged = React.useCallback(items => {\n    console.log(items);\n    setSelectedItems(items);\n  }, []);\n  const logMessageRows = React.useMemo(() => {\n    return logDataService.items.map(item => {\n      return getLogMessageRow(item);\n    });\n  }, [logDataService]);\n\n  if (logDataService.items[0] === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoggingPageContainer, {\n    logmessages: logMessageRows,\n    selectedItems: selectedItems,\n    handleSelectedItems: handleSelectedItemsChanged\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggingDataservice, \"m38JJ+iOeV4/1osH+O9AIoiGdRs=\", false, function () {\n  return [useApi];\n});\n\n_c = LoggingDataservice;\nexport default LoggingDataservice;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingDataservice\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingDataService.tsx"],"names":["React","useApi","LoggingPageContainer","apiConfig","getLogMessageRow","LoggingDataservice","props","logDataService","serviceUri","baseUrl","administration","logging","params","selectedItems","setSelectedItems","useState","handleSelectedItemsChanged","useCallback","items","console","log","logMessageRows","useMemo","map","item","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAMA,MAAMC,kBAAoC,GAAIC,KAAD,IAAU;AAAA;;AAEnD,QAAMC,cAAc,GAAGN,MAAM,CAAc;AACvCO,IAAAA,UAAU,EAAEL,SAAS,CAACM,OAAV,GAAoBN,SAAS,CAACO,cAAV,CAAyBC,OADlB;AAEvCC,IAAAA,MAAM,EAAE;AAF+B,GAAd,CAA7B;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,KAAK,CAACe,QAAN,CAAyB,EAAzB,CAA1C;AAEA,QAAMC,0BAA0B,GAAGhB,KAAK,CAACiB,WAAN,CAAmBC,KAAD,IAAoB;AACrEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACDJ,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACF,GAHkC,EAGjC,EAHiC,CAAnC;AAKA,QAAMG,cAAc,GAAGrB,KAAK,CAACsB,OAAN,CAAc,MAAK;AACtC,WAAOf,cAAc,CAACW,KAAf,CAAqBK,GAArB,CAA0BC,IAAD,IAAS;AACrC,aAAOpB,gBAAgB,CAACoB,IAAD,CAAvB;AACH,KAFM,CAAP;AAGH,GAJsB,EAIrB,CAACjB,cAAD,CAJqB,CAAvB;;AAMA,MAAGA,cAAc,CAACW,KAAf,CAAqB,CAArB,MAA4BO,SAA/B,EAAyC;AACrC,WAAO,IAAP;AACH;;AAED,sBACI,QAAC,oBAAD;AACI,IAAA,WAAW,EAAEJ,cADjB;AAEI,IAAA,aAAa,EAAER,aAFnB;AAGI,IAAA,mBAAmB,EAAEG;AAHzB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA9BD;;GAAMX,kB;UAEqBJ,M;;;KAFrBI,kB;AAgCN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../../_hooks/useApi'\r\nimport { ILogmessage } from './interfaces/ILogmessage'\r\nimport LoggingPageContainer from './loggingPageContainer'\r\nimport apiConfig from '../../../_config/apiConfig.json'\r\nimport { getLogMessageRow } from '../mapper'\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nconst LoggingDataservice: React.FC<IProps> = (props) =>{\r\n   \r\n    const logDataService = useApi<ILogmessage>({\r\n        serviceUri: apiConfig.baseUrl + apiConfig.administration.logging,\r\n        params: null\r\n    })\r\n\r\n    const [selectedItems, setSelectedItems] = React.useState<number[]>([])\r\n\r\n    const handleSelectedItemsChanged = React.useCallback((items: number[]) =>{\r\n        console.log(items)\r\n       setSelectedItems(items)\r\n    },[])\r\n\r\n    const logMessageRows = React.useMemo(() =>{\r\n        return logDataService.items.map((item) =>{\r\n            return getLogMessageRow(item)\r\n        })\r\n    },[logDataService])\r\n\r\n    if(logDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n    \r\n    return(\r\n        <LoggingPageContainer\r\n            logmessages={logMessageRows}\r\n            selectedItems={selectedItems}\r\n            handleSelectedItems={handleSelectedItemsChanged}/>\r\n    )\r\n}\r\n\r\nexport default LoggingDataservice\r\n"]},"metadata":{},"sourceType":"module"}