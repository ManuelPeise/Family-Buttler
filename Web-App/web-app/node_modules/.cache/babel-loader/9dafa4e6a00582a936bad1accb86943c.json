{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_virtualized\\\\_table\\\\TableColunm.tsx\";\nimport React from \"react\";\nimport { Column } from 'react-virtualized';\nimport HeaderCell from \"./HeaderCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableColunm = props => {\n  const {\n    key,\n    dataKey,\n    width,\n    headerValue,\n    style\n  } = props; // const cellRenderer = React.useCallback((cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number) =>{\n  //     return(rowData[dataKey])\n  // },[])\n\n  return (\n    /*#__PURE__*/\n    // <AutoSizer disableHeight>\n    //     {({width}) =>(\n    _jsxDEV(Column, {\n      style: style,\n      dataKey: dataKey,\n      width: width // cellRenderer={(data) =>cellRenderer(data.cellData, data.columnData, data.dataKey, data.rowData, data.rowIndex)}\n      ,\n      headerRenderer: () => /*#__PURE__*/_jsxDEV(HeaderCell, {\n        value: headerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 40\n      }, this),\n      cellDataGetter: _ref => {\n        let {\n          dataKey,\n          rowData\n        } = _ref;\n        return rowData[dataKey];\n      }\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) //     )}\n    // </AutoSizer>\n\n  );\n};\n\n_c = TableColunm;\nexport default TableColunm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableColunm\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableColunm.tsx"],"names":["React","Column","HeaderCell","TableColunm","props","key","dataKey","width","headerValue","style","rowData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAmBC,MAAnB,QAA6C,mBAA7C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AASA,MAAMC,WAA6B,GAAIC,KAAD,IAAU;AAE5C,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,OAAN;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA4CL,KAAlD,CAF4C,CAI5C;AACA;AACA;;AAEA;AAAA;AACI;AACA;AACI,YAAC,MAAD;AAEI,MAAA,KAAK,EAAEK,KAFX;AAGI,MAAA,OAAO,EAAEH,OAHb;AAII,MAAA,KAAK,EAAEC,KAJX,CAKI;AALJ;AAMI,MAAA,cAAc,EAAE,mBAAO,QAAC,UAAD;AAAY,QAAA,KAAK,EAAIC;AAArB;AAAA;AAAA;AAAA;AAAA,cAN3B;AAOI,MAAA,cAAc,EAAE;AAAA,YAAC;AAACF,UAAAA,OAAD;AAAUI,UAAAA;AAAV,SAAD;AAAA,eAAwBA,OAAO,CAACJ,OAAD,CAA/B;AAAA;AAPpB,OACSD,GADT;AAAA;AAAA;AAAA;AAAA,YAHR,CAYA;AACA;;AAbA;AAeH,CAvBD;;KAAMF,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {AutoSizer, Column, ColumnProps} from 'react-virtualized'\r\nimport HeaderCell from \"./HeaderCell\";\r\n\r\n\r\ninterface IProps extends ColumnProps{\r\n    key: string\r\n    dataKey: string\r\n    headerValue: string\r\n}\r\n\r\nconst TableColunm: React.FC<IProps> = (props) =>{\r\n\r\n    const {key, dataKey, width, headerValue, style} = props\r\n\r\n    // const cellRenderer = React.useCallback((cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number) =>{\r\n    //     return(rowData[dataKey])\r\n    // },[])\r\n\r\n    return(\r\n        // <AutoSizer disableHeight>\r\n        //     {({width}) =>(\r\n            <Column\r\n                key={key}\r\n                style={style}\r\n                dataKey={dataKey} \r\n                width={width}\r\n                // cellRenderer={(data) =>cellRenderer(data.cellData, data.columnData, data.dataKey, data.rowData, data.rowIndex)}\r\n                headerRenderer={() => (<HeaderCell value = {headerValue}/>)}\r\n                cellDataGetter={({dataKey, rowData}) => rowData[dataKey]}\r\n            />\r\n    //     )}\r\n    // </AutoSizer>\r\n    )\r\n} \r\n\r\nexport default TableColunm"]},"metadata":{},"sourceType":"module"}