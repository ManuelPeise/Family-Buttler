{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_landingpage\\\\LandingPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\nimport { useImageUpload } from '../../_hooks/useImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingPage = () => {\n  _s();\n\n  const imageService = useImageUpload(\"\");\n  const [buffer, setBuffer] = React.useState();\n  const imgTag = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(buffer !== null && buffer !== void 0 ? buffer : {}),\n      width: 200,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }, [imageService.image]);\n  console.log(imageService.image);\n  const handleChange = React.useCallback(async e => {\n    e.preventDefault();\n\n    if (e.target.files !== null && e.target.files[0]) {\n      const file = e.target.files[0];\n      const buffer = await file.arrayBuffer();\n      const blob = new Blob([buffer]);\n      console.log(blob);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [imgTag, /*#__PURE__*/_jsxDEV(TextField, {\n      hidden: true,\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LandingPage, \"6Uhbe20zBU9iM0kdyC+d55pUX7c=\", false, function () {\n  return [useImageUpload];\n});\n\n_c = LandingPage;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_landingpage/LandingPage.tsx"],"names":["Grid","TextField","React","useImageUpload","LandingPage","imageService","buffer","setBuffer","useState","imgTag","useMemo","URL","createObjectURL","image","console","log","handleChange","useCallback","e","preventDefault","target","files","file","arrayBuffer","blob","Blob"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,6BAA/B;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAEhC,QAAMC,YAAY,GAAGF,cAAc,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,EAA5B;AAEA,QAAMC,MAAM,GAAGP,KAAK,CAACQ,OAAN,CAAc,MAAK;AAG9B,wBACI;AAAK,MAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBN,MAApB,aAAoBA,MAApB,cAAoBA,MAApB,GAA6B,EAA7B,CAAV;AAAoD,MAAA,KAAK,EAAE,GAA3D;AAAgE,MAAA,MAAM,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GARc,EAQb,CAACD,YAAY,CAACQ,KAAd,CARa,CAAf;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAACQ,KAAzB;AAEA,QAAMG,YAAY,GAAGd,KAAK,CAACe,WAAN,CAAkB,MAAOC,CAAP,IAAiD;AACpFA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,IAAnB,IAA2BH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAA9B,EAAgD;AAE5C,YAAMC,IAAI,GAAGJ,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEA,YAAMf,MAAM,GAAG,MAAMgB,IAAI,CAACC,WAAL,EAArB;AACA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACnB,MAAD,CAAT,CAAb;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACH;AACJ,GAZoB,EAYnB,EAZmB,CAArB;AAcA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,eACIf,MADJ,eAEI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE,IAAnB;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,QAAQ,EAAEO;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvCD;;GAAMZ,W;UAEmBD,c;;;KAFnBC,W;AAyCN,eAAeA,WAAf","sourcesContent":["import { Grid, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useImageUpload } from '../../_hooks/useImageUpload'\r\n\r\nconst LandingPage: React.FC = () => {\r\n    \r\n    const imageService = useImageUpload(\"\")\r\n    \r\n    const [buffer, setBuffer] = React.useState<Blob>()\r\n\r\n    const imgTag = React.useMemo(() =>{\r\n    \r\n        \r\n        return(\r\n            <img src={URL.createObjectURL(buffer?? {} as Blob)} width={200} height={200}>\r\n\r\n            </img>\r\n        )\r\n    },[imageService.image])\r\n\r\n\r\n    console.log(imageService.image)\r\n\r\n    const handleChange = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) =>{\r\n        e.preventDefault()\r\n\r\n        if(e.target.files !== null && e.target.files[0]){\r\n\r\n            const file = e.target.files[0]\r\n\r\n            const buffer = await file.arrayBuffer()\r\n            const blob = new Blob([buffer])\r\n\r\n            console.log(blob)\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <Grid container>\r\n           {imgTag}\r\n            <TextField hidden={true} type='file' onChange={handleChange}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LandingPage"]},"metadata":{},"sourceType":"module"}