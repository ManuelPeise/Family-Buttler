{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\AddMenuDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport MenuLayout from './MenuLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMenuDataService = () => {\n  _s();\n\n  var _menuDataService$item3;\n\n  const dispatch = useDispatch();\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const valueDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\",\n    params: null\n  });\n  const saveOrUpdateRecipe = React.useCallback(async menu => {\n    await menuDataService.post({\n      serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.addOrUpdateRecipe,\n      method: 'POST',\n      params: menu\n    }).then(() => {});\n  }, [menuDataService]);\n  const component = React.useMemo(() => {\n    var _menuDataService$item, _menuDataService$item2;\n\n    const config = {\n      isReadOnly: false,\n      hasFilter: false,\n      hasMenuList: false,\n      componentKey: 'add'\n    };\n    return /*#__PURE__*/_jsxDEV(MenuLayout, {\n      layoutConfig: config,\n      menuCollection: (_menuDataService$item = (_menuDataService$item2 = menuDataService.items[0]) === null || _menuDataService$item2 === void 0 ? void 0 : _menuDataService$item2.menuCollection) !== null && _menuDataService$item !== void 0 ? _menuDataService$item : [],\n      values: valueDataService.items[0],\n      handleSave: saveOrUpdateRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }, [menuDataService.items, valueDataService.items, saveOrUpdateRecipe]);\n\n  if (menuDataService.items[0] === null) {\n    return null;\n  }\n\n  if (valueDataService.items[0] === null || valueDataService.items[0] === undefined) {\n    return null;\n  }\n\n  dispatch(SetMenuCollection((_menuDataService$item3 = menuDataService.items[0]) === null || _menuDataService$item3 === void 0 ? void 0 : _menuDataService$item3.menuCollection)); // dispatch(SetPageTitle(valueDataService.items[0].pageTitleAdd))\n\n  return component;\n};\n\n_s(AddMenuDataService, \"XulgI9dKUhY9giUX4r2SIMGX4aI=\", false, function () {\n  return [useDispatch, useApi, useApi];\n});\n\n_c = AddMenuDataService;\nexport default AddMenuDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMenuDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/AddMenuDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","useDispatch","MenuLayout","AddMenuDataService","dispatch","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","valueDataService","i18nController","saveOrUpdateRecipe","useCallback","menu","post","addOrUpdateRecipe","method","then","component","useMemo","config","isReadOnly","hasFilter","hasMenuList","componentKey","items","menuCollection","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,iBAAT,QAAgD,8CAAhD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,kBAA4B,GAAE,MAAK;AAAA;;AAAA;;AAErC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,eAAe,GAAGP,MAAM,CAAgB;AAACQ,IAAAA,UAAU,EAAEP,SAAS,CAACQ,OAAV,GAAoBR,SAAS,CAACS,WAAV,CAAsBC,iBAAvD;AAA0EC,IAAAA,MAAM,EAAE;AAAlF,GAAhB,CAA9B;AAEA,QAAMC,gBAAgB,GAAGb,MAAM,CAAqB;AAACQ,IAAAA,UAAU,EAAEP,SAAS,CAACQ,OAAV,GAAoBR,SAAS,CAACa,cAA9B,GAA+C,2BAA5D;AAAyFF,IAAAA,MAAM,EAAE;AAAjG,GAArB,CAA/B;AAEA,QAAMG,kBAAkB,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,MAAOC,IAAP,IAAsB;AAC/D,UAAMV,eAAe,CAACW,IAAhB,CAAqB;AAACV,MAAAA,UAAU,EAAEP,SAAS,CAACQ,OAAV,GAAoBR,SAAS,CAACS,WAAV,CAAsBS,iBAAvD;AAA0EC,MAAAA,MAAM,EAAE,MAAlF;AAA0FR,MAAAA,MAAM,EAAEK;AAAlG,KAArB,EACLI,IADK,CACA,MAAK,CAEV,CAHK,CAAN;AAIH,GAL0B,EAKzB,CAACd,eAAD,CALyB,CAA3B;AAOA,QAAMe,SAAS,GAAGvB,KAAK,CAACwB,OAAN,CAAc,MAAK;AAAA;;AAEjC,UAAMC,MAAyB,GAAG;AAC9BC,MAAAA,UAAU,EAAE,KADkB;AAE9BC,MAAAA,SAAS,EAAE,KAFmB;AAG9BC,MAAAA,WAAW,EAAE,KAHiB;AAI9BC,MAAAA,YAAY,EAAE;AAJgB,KAAlC;AAOA,wBAAO,QAAC,UAAD;AACK,MAAA,YAAY,EAAEJ,MADnB;AAEK,MAAA,cAAc,qDAAEjB,eAAe,CAACsB,KAAhB,CAAsB,CAAtB,CAAF,2DAAE,uBAA0BC,cAA5B,yEAA6C,EAFhE;AAGK,MAAA,MAAM,EAAEjB,gBAAgB,CAACgB,KAAjB,CAAuB,CAAvB,CAHb;AAIK,MAAA,UAAU,EAAEd;AAJjB;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAfiB,EAehB,CAACR,eAAe,CAACsB,KAAjB,EAAwBhB,gBAAgB,CAACgB,KAAzC,EAAgDd,kBAAhD,CAfgB,CAAlB;;AAiBA,MAAGR,eAAe,CAACsB,KAAhB,CAAsB,CAAtB,MAA6B,IAAhC,EAAqC;AAEjC,WAAO,IAAP;AACH;;AAED,MAAGhB,gBAAgB,CAACgB,KAAjB,CAAuB,CAAvB,MAA8B,IAA9B,IAAsChB,gBAAgB,CAACgB,KAAjB,CAAuB,CAAvB,MAA8BE,SAAvE,EAAiF;AAC7E,WAAO,IAAP;AACH;;AAEDzB,EAAAA,QAAQ,CAACJ,iBAAiB,2BAACK,eAAe,CAACsB,KAAhB,CAAsB,CAAtB,CAAD,2DAAC,uBAA0BC,cAA3B,CAAlB,CAAR,CAzCqC,CA0CrC;;AACA,SAAOR,SAAP;AACH,CA5CD;;GAAMjB,kB;UAEeF,W,EAEOH,M,EAECA,M;;;KANvBK,kB;AA8CN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenu, IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection, SetPageTitle } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport MenuLayout from './MenuLayout'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\nconst AddMenuDataService: React.FC= () =>{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const valueDataService = useApi<ICookingBookValues>({serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\", params: null}) \r\n    \r\n    const saveOrUpdateRecipe = React.useCallback(async (menu: IMenu) =>{\r\n        await menuDataService.post({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.addOrUpdateRecipe, method: 'POST', params: menu})\r\n        .then(() =>{\r\n        \r\n        })\r\n    },[menuDataService])\r\n\r\n    const component = React.useMemo(() =>{\r\n       \r\n        const config: IMenuLayoutConfig = {\r\n            isReadOnly: false, \r\n            hasFilter: false, \r\n            hasMenuList: false,\r\n            componentKey: 'add'\r\n            }\r\n                \r\n        return <MenuLayout \r\n                    layoutConfig={config}\r\n                    menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                    values={valueDataService.items[0]}\r\n                    handleSave={saveOrUpdateRecipe} />\r\n         \r\n    },[menuDataService.items, valueDataService.items, saveOrUpdateRecipe])\r\n\r\n    if(menuDataService.items[0] === null){\r\n\r\n        return null\r\n    }\r\n\r\n    if(valueDataService.items[0] === null || valueDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n\r\n    dispatch(SetMenuCollection(menuDataService.items[0]?.menuCollection))\r\n    // dispatch(SetPageTitle(valueDataService.items[0].pageTitleAdd))\r\n    return component\r\n}\r\n\r\nexport default AddMenuDataService"]},"metadata":{},"sourceType":"module"}