{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\CookingBookDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport MenuLayout from './MenuLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CookingBookDataService = props => {\n  _s();\n\n  var _menuDataService$item10;\n\n  const {\n    componentKey\n  } = props;\n  const dispatch = useDispatch();\n  const [selectedMenuId, setSelectedMenuId] = React.useState(0);\n  React.useEffect(() => {\n    setSelectedMenuId(0);\n  }, [setSelectedMenuId]);\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const valueDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\",\n    params: null\n  });\n  const handleMenuSelect = React.useCallback(id => {\n    if (id !== null) setSelectedMenuId(id);\n  }, [setSelectedMenuId]);\n  const handleSave = React.useCallback(async menu => {}, []);\n  const selectedMenu = React.useMemo(() => {\n    var _menuDataService$item, _menuDataService$item2, _menuDataService$item3;\n\n    return (_menuDataService$item = (_menuDataService$item2 = menuDataService.items[0]) === null || _menuDataService$item2 === void 0 ? void 0 : (_menuDataService$item3 = _menuDataService$item2.menuCollection) === null || _menuDataService$item3 === void 0 ? void 0 : _menuDataService$item3.find(menu => menu.id === selectedMenuId)) !== null && _menuDataService$item !== void 0 ? _menuDataService$item : {};\n  }, [selectedMenuId, menuDataService]);\n  const component = React.useMemo(() => {\n    var _menuDataService$item4, _menuDataService$item5, _menuDataService$item6, _menuDataService$item7, _menuDataService$item8, _menuDataService$item9;\n\n    let config;\n\n    switch (componentKey) {\n      case 'view':\n        config = {\n          isReadOnly: true,\n          hasFilter: true,\n          hasMenuList: true,\n          selectedMenuId: selectedMenuId,\n          componentKey: 'view'\n        };\n        return /*#__PURE__*/_jsxDEV(MenuLayout, {\n          layoutConfig: config,\n          selectedMenu: selectedMenu,\n          menuCollection: (_menuDataService$item4 = (_menuDataService$item5 = menuDataService.items[0]) === null || _menuDataService$item5 === void 0 ? void 0 : _menuDataService$item5.menuCollection) !== null && _menuDataService$item4 !== void 0 ? _menuDataService$item4 : [],\n          values: valueDataService.items[0],\n          handleSelectMenu: handleMenuSelect,\n          handleSave: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this);\n\n      case 'add':\n        config = {\n          isReadOnly: false,\n          hasFilter: false,\n          hasMenuList: false,\n          selectedMenuId: selectedMenuId,\n          componentKey: 'add'\n        };\n        return /*#__PURE__*/_jsxDEV(MenuLayout, {\n          layoutConfig: config,\n          selectedMenu: {},\n          menuCollection: (_menuDataService$item6 = (_menuDataService$item7 = menuDataService.items[0]) === null || _menuDataService$item7 === void 0 ? void 0 : _menuDataService$item7.menuCollection) !== null && _menuDataService$item6 !== void 0 ? _menuDataService$item6 : [],\n          values: valueDataService.items[0],\n          handleSelectMenu: handleMenuSelect,\n          handleSave: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }, this);\n\n      case 'edit':\n        config = {\n          isReadOnly: false,\n          hasFilter: true,\n          hasMenuList: true,\n          selectedMenuId: selectedMenuId,\n          componentKey: 'edit'\n        };\n        return /*#__PURE__*/_jsxDEV(MenuLayout, {\n          layoutConfig: config,\n          selectedMenu: selectedMenu,\n          menuCollection: (_menuDataService$item8 = (_menuDataService$item9 = menuDataService.items[0]) === null || _menuDataService$item9 === void 0 ? void 0 : _menuDataService$item9.menuCollection) !== null && _menuDataService$item8 !== void 0 ? _menuDataService$item8 : [],\n          values: valueDataService.items[0],\n          handleSelectMenu: handleMenuSelect,\n          handleSave: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this);\n    }\n  }, [componentKey, menuDataService.items, valueDataService.items, selectedMenuId, selectedMenu, handleMenuSelect, handleSave]);\n\n  if (menuDataService.items[0] === null) {\n    return null;\n  }\n\n  if (valueDataService.items[0] === null || valueDataService.items[0] === undefined) {\n    return null;\n  }\n\n  dispatch(SetMenuCollection((_menuDataService$item10 = menuDataService.items[0]) === null || _menuDataService$item10 === void 0 ? void 0 : _menuDataService$item10.menuCollection));\n  return component;\n};\n\n_s(CookingBookDataService, \"NjM0iLagfwwxBwAwAYLDkYXC4bg=\", false, function () {\n  return [useDispatch, useApi, useApi];\n});\n\n_c = CookingBookDataService;\nexport default CookingBookDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"CookingBookDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/CookingBookDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","useDispatch","MenuLayout","CookingBookDataService","props","componentKey","dispatch","selectedMenuId","setSelectedMenuId","useState","useEffect","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","valueDataService","i18nController","handleMenuSelect","useCallback","id","handleSave","menu","selectedMenu","useMemo","items","menuCollection","find","component","config","isReadOnly","hasFilter","hasMenuList","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenu, IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport MenuLayout from './MenuLayout'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\ninterface IProps{\r\n    componentKey: 'view' | 'add' | 'edit'\r\n}\r\n\r\nconst CookingBookDataService: React.FC<IProps> = (props) =>{\r\n\r\n    const {componentKey} = props\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [selectedMenuId, setSelectedMenuId] = React.useState<number>(0)\r\n    \r\n    React.useEffect(()=>{\r\n        setSelectedMenuId(0)\r\n    },[setSelectedMenuId])\r\n    \r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const valueDataService = useApi<ICookingBookValues>({serviceUri: apiConfig.baseUrl + apiConfig.i18nController + \"cookingbook_cookingbookEn\", params: null}) \r\n    \r\n    const handleMenuSelect = React.useCallback((id: number | null) =>{\r\n        if(id !== null)\r\n        setSelectedMenuId(id)\r\n    },[setSelectedMenuId])\r\n\r\n    const handleSave = React.useCallback(async (menu: IMenu) =>{\r\n\r\n    },[])\r\n\r\n    const selectedMenu = React.useMemo(() =>{\r\n        return menuDataService.items[0]?.menuCollection?.find(menu => menu.id === selectedMenuId) ?? {} as IMenu\r\n    },[selectedMenuId, menuDataService])\r\n    \r\n    const component = React.useMemo(() =>{\r\n        let config: IMenuLayoutConfig\r\n       \r\n        switch(componentKey){\r\n            case 'view':\r\n                config = {\r\n                    isReadOnly: true, \r\n                    hasFilter: true, \r\n                    hasMenuList: true,\r\n                    selectedMenuId: selectedMenuId,\r\n                    componentKey: 'view'\r\n                }\r\n                return <MenuLayout \r\n                            layoutConfig={config}\r\n                            selectedMenu={selectedMenu}\r\n                            menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                            values={valueDataService.items[0]}\r\n                            handleSelectMenu={handleMenuSelect}\r\n                            handleSave={handleSave} />\r\n            case 'add':\r\n                config = {\r\n                    isReadOnly: false, \r\n                    hasFilter: false, \r\n                    hasMenuList: false,\r\n                    selectedMenuId: selectedMenuId,\r\n                    componentKey: 'add'\r\n                }\r\n                return <MenuLayout \r\n                            layoutConfig={config} \r\n                            selectedMenu={{} as IMenu}\r\n                            menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                            values={valueDataService.items[0]}\r\n                            handleSelectMenu={handleMenuSelect} \r\n                            handleSave={handleSave}/>\r\n            case 'edit':\r\n                config = {\r\n                    isReadOnly: false, \r\n                    hasFilter: true, \r\n                    hasMenuList: true,\r\n                    selectedMenuId: selectedMenuId,\r\n                    componentKey:'edit'\r\n                }\r\n                return <MenuLayout \r\n                            layoutConfig={config} \r\n                            selectedMenu={selectedMenu}\r\n                            menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                            values={valueDataService.items[0]}\r\n                            handleSelectMenu={handleMenuSelect} \r\n                            handleSave={handleSave}/>\r\n        }\r\n    },[componentKey, menuDataService.items, valueDataService.items, selectedMenuId, selectedMenu, handleMenuSelect, handleSave])\r\n\r\n    if(menuDataService.items[0] === null){\r\n\r\n        return null\r\n    }\r\n\r\n    if(valueDataService.items[0] === null || valueDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n\r\n    dispatch(SetMenuCollection(menuDataService.items[0]?.menuCollection))\r\n    \r\n    return component\r\n}\r\n\r\nexport default CookingBookDataService"]},"metadata":{},"sourceType":"module"}