{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../../_hooks/useApi';\nimport LoggingPageContainer from './loggingPageContainer';\nimport apiConfig from '../../../_config/apiConfig.json';\nimport { getLogMessageRow } from '../mapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingDataservice = props => {\n  _s();\n\n  const logDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.administration.logging,\n    params: null\n  });\n  const [selectedItems, setSelectedItems] = React.useState([false, []]);\n  const logMessageRows = React.useMemo(() => {\n    return logDataService.items.map(item => {\n      return getLogMessageRow(item);\n    });\n  }, [logDataService]);\n  const handleSelectedItemsChanged = React.useCallback(items => {\n    const state = [logMessageRows.length === items.length, items];\n    setSelectedItems(state);\n  }, [selectedItems]);\n  const handleSelectAll = React.useCallback(() => {\n    if (selectedItems.length === logMessageRows.length) {\n      const state = [true, []];\n      setSelectedItems(state);\n    } else {\n      const ids = logMessageRows.map(msg => {\n        return msg.id;\n      });\n      const state = [false, ids];\n      setSelectedItems(state);\n    }\n  }, [logMessageRows, selectedItems.length]);\n\n  if (logDataService.items[0] === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoggingPageContainer, {\n    logmessages: logMessageRows,\n    selectedItems: selectedItems,\n    handleSelectedItems: handleSelectedItemsChanged,\n    handleSelectAll: handleSelectAll\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggingDataservice, \"t37nF6i5ofrL6cWvf2rVAgyrQOk=\", false, function () {\n  return [useApi];\n});\n\n_c = LoggingDataservice;\nexport default LoggingDataservice;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingDataservice\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingDataService.tsx"],"names":["React","useApi","LoggingPageContainer","apiConfig","getLogMessageRow","LoggingDataservice","props","logDataService","serviceUri","baseUrl","administration","logging","params","selectedItems","setSelectedItems","useState","logMessageRows","useMemo","items","map","item","handleSelectedItemsChanged","useCallback","state","length","handleSelectAll","ids","msg","id","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAOA,MAAMC,kBAAoC,GAAIC,KAAD,IAAU;AAAA;;AAEnD,QAAMC,cAAc,GAAGN,MAAM,CAAc;AACvCO,IAAAA,UAAU,EAAEL,SAAS,CAACM,OAAV,GAAoBN,SAAS,CAACO,cAAV,CAAyBC,OADlB;AAEvCC,IAAAA,MAAM,EAAE;AAF+B,GAAd,CAA7B;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,KAAK,CAACe,QAAN,CAAe,CAAC,KAAD,EAAQ,EAAR,CAAf,CAA1C;AAEA,QAAMC,cAAc,GAAGhB,KAAK,CAACiB,OAAN,CAAc,MAAK;AACtC,WAAOV,cAAc,CAACW,KAAf,CAAqBC,GAArB,CAA0BC,IAAD,IAAS;AACrC,aAAOhB,gBAAgB,CAACgB,IAAD,CAAvB;AACH,KAFM,CAAP;AAGH,GAJsB,EAIrB,CAACb,cAAD,CAJqB,CAAvB;AAMA,QAAMc,0BAA0B,GAAGrB,KAAK,CAACsB,WAAN,CAAmBJ,KAAD,IAAoB;AACrE,UAAMK,KAAK,GAAG,CAACP,cAAc,CAACQ,MAAf,KAA0BN,KAAK,CAACM,MAAjC,EAAyCN,KAAzC,CAAd;AACDJ,IAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACF,GAHkC,EAGjC,CAACV,aAAD,CAHiC,CAAnC;AAKA,QAAMY,eAAe,GAAGzB,KAAK,CAACsB,WAAN,CAAkB,MAAM;AAC5C,QAAGT,aAAa,CAACW,MAAd,KAAyBR,cAAc,CAACQ,MAA3C,EAAkD;AAC9C,YAAMD,KAAK,GAAG,CAAC,IAAD,EAAO,EAAP,CAAd;AACAT,MAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACH,KAHD,MAGK;AACD,YAAMG,GAAG,GAAGV,cAAc,CAACG,GAAf,CAAoBQ,GAAD,IAAQ;AACnC,eAAOA,GAAG,CAACC,EAAX;AACH,OAFW,CAAZ;AAGA,YAAML,KAAK,GAAG,CAAC,KAAD,EAAQG,GAAR,CAAd;AACAZ,MAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACH;AACJ,GAXuB,EAWtB,CAACP,cAAD,EAAiBH,aAAa,CAACW,MAA/B,CAXsB,CAAxB;;AAaA,MAAGjB,cAAc,CAACW,KAAf,CAAqB,CAArB,MAA4BW,SAA/B,EAAyC;AACrC,WAAO,IAAP;AACH;;AAED,sBACI,QAAC,oBAAD;AACI,IAAA,WAAW,EAAEb,cADjB;AAEI,IAAA,aAAa,EAAEH,aAFnB;AAGI,IAAA,mBAAmB,EAAEQ,0BAHzB;AAII,IAAA,eAAe,EAAEI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA7CD;;GAAMpB,kB;UAEqBJ,M;;;KAFrBI,kB;AA+CN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../../_hooks/useApi'\r\nimport { ILogmessage } from './interfaces/ILogmessage'\r\nimport LoggingPageContainer from './loggingPageContainer'\r\nimport apiConfig from '../../../_config/apiConfig.json'\r\nimport { getLogMessageRow } from '../mapper'\r\nimport { PermPhoneMsg } from '@material-ui/icons'\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nconst LoggingDataservice: React.FC<IProps> = (props) =>{\r\n   \r\n    const logDataService = useApi<ILogmessage>({\r\n        serviceUri: apiConfig.baseUrl + apiConfig.administration.logging,\r\n        params: null\r\n    })\r\n\r\n    const [selectedItems, setSelectedItems] = React.useState([false, []as number[]])\r\n\r\n    const logMessageRows = React.useMemo(() =>{\r\n        return logDataService.items.map((item) =>{\r\n            return getLogMessageRow(item)\r\n        })\r\n    },[logDataService])\r\n\r\n    const handleSelectedItemsChanged = React.useCallback((items: number[]) =>{\r\n        const state = [logMessageRows.length === items.length, items]\r\n       setSelectedItems(state)\r\n    },[selectedItems])\r\n\r\n    const handleSelectAll = React.useCallback(() => {\r\n        if(selectedItems.length === logMessageRows.length){\r\n            const state = [true, []]\r\n            setSelectedItems(state)\r\n        }else{\r\n            const ids = logMessageRows.map((msg) =>{\r\n                return msg.id\r\n            })\r\n            const state = [false, ids]\r\n            setSelectedItems(state)\r\n        }\r\n    },[logMessageRows, selectedItems.length])\r\n   \r\n    if(logDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n    \r\n    return(\r\n        <LoggingPageContainer\r\n            logmessages={logMessageRows}\r\n            selectedItems={selectedItems}\r\n            handleSelectedItems={handleSelectedItemsChanged}\r\n            handleSelectAll={handleSelectAll}\r\n            />\r\n    )\r\n}\r\n\r\nexport default LoggingDataservice\r\n"]},"metadata":{},"sourceType":"module"}