{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\menuLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuList from './menuList';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  item: {// marginTop:'1vh'\n  }\n}));\n\nconst MenuLayout = props => {\n  _s();\n\n  const {\n    layoutConfig,\n    menuCollection,\n    selectedMenu,\n    handleSelectMenu\n  } = props;\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [menuType, setMenuType] = React.useState(MenuTypeEnum.None);\n  const useStyle = styles();\n  const onFilterTextChange = React.useCallback(filterText => {\n    setFilterText(filterText);\n  }, [setFilterText]);\n  const onMenuTypeChange = React.useCallback(menuType => {\n    setMenuType(menuType);\n  }, [setMenuType]);\n  const filteredMenuItems = React.useMemo(() => {\n    if (filterText === '' && menuType === MenuTypeEnum.None) {\n      return menuCollection;\n    }\n\n    const menusByFiltertext = menuCollection.filter(item => filterText.length > 0 ? item.name.toLocaleLowerCase().startsWith(filterText.toLocaleLowerCase()) : item);\n\n    if (menuType === MenuTypeEnum.None) {\n      return menusByFiltertext;\n    }\n\n    return menusByFiltertext.filter(item => item.menuType === menuType);\n  }, [menuCollection, filterText, menuType]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    direction: \"row\",\n    spacing: 2,\n    justifyContent: \"center\",\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 11,\n      sm: 11,\n      md: 11,\n      lg: 11,\n      xl: 11,\n      children: /*#__PURE__*/_jsxDEV(MenuFilter, {\n        filterText: filterText,\n        selectedMenuType: menuType,\n        onFilterTextChange: onFilterTextChange,\n        onMenuTypeChange: onMenuTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.item,\n      item: true,\n      xs: 11,\n      sm: 3,\n      md: 3,\n      lg: 3,\n      xl: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(MenuList, {\n          menuCollection: filteredMenuItems,\n          selectedMenuId: layoutConfig.selectedMenuId,\n          handleSelectMenu: handleSelectMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.item,\n      style: {\n        backgroundColor: 'red'\n      },\n      item: true,\n      xs: 11,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      xl: 8,\n      children: \"T3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MenuLayout, \"Zhs+qawnDk5T6x9CFDrL2gRqwwI=\");\n\n_c = MenuLayout;\nexport default MenuLayout; //    {/* {layoutConfig.hasFilter &&( */}\n//             //             <MenuFilter \n//             //                 filterText={filterText}\n//             //                 selectedMenuType={menuType}\n//             //                 onFilterTextChange={onFilterTextChange}\n//             //                 onMenuTypeChange={onMenuTypeChange}/>\n//                 //     {layoutConfig.hasMenuList && (\n//                 //     <Grid item xs={12} xl = {6}>\n//                 //         <MenuList \n//                 //             menuCollection={filteredMenuItems} \n//                 //             selectedMenuId={layoutConfig.selectedMenuId} \n//                 //             handleSelectMenu={handleSelectMenu}/>\n//                 //     </Grid>\n//                 //     )}\n//                 //     <Grid item xs = {12} xl = {6}>\n//                 //         <MenuContainer isReadOnly={layoutConfig.isReadOnly} selectedMenu={selectedMenu ?? {} as IMenu}/>\n//                 //     </Grid>\n//                 // </Grid> */} */} */}\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLayout\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/menuLayout.tsx"],"names":["Grid","makeStyles","Paper","React","MenuFilter","MenuList","MenuTypeEnum","styles","theme","item","MenuLayout","props","layoutConfig","menuCollection","selectedMenu","handleSelectMenu","filterText","setFilterText","useState","menuType","setMenuType","None","useStyle","onFilterTextChange","useCallback","onMenuTypeChange","filteredMenuItems","useMemo","menusByFiltertext","filter","length","name","toLocaleLowerCase","startsWith","selectedMenuId","backgroundColor"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuList from './menuList'\r\nimport {MenuTypeEnum} from '../../_enums/menuEnums'\r\nimport MenuContainer from './MenuContainer'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   selectedMenu: IMenu\r\n   menuCollection: IMenu[]\r\n   handleSelectMenu: (id: number) => void\r\n}\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    item:{\r\n        // marginTop:'1vh'\r\n    }\r\n    \r\n}))\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, selectedMenu, handleSelectMenu} = props\r\n    const [filterText, setFilterText] = React.useState<string>(\"\")\r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n    \r\n    const useStyle = styles();\r\n\r\n    const onFilterTextChange = React.useCallback((filterText: string) =>{\r\n        setFilterText(filterText)\r\n    }, [setFilterText])\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filteredMenuItems = React.useMemo(() =>{\r\n        \r\n        if(filterText === '' && menuType === MenuTypeEnum.None){\r\n            return menuCollection\r\n        }\r\n\r\n        const menusByFiltertext = menuCollection.filter(item => filterText.length > 0 ? item.name.toLocaleLowerCase().startsWith(filterText.toLocaleLowerCase()) : item)\r\n        \r\n        if(menuType === MenuTypeEnum.None){\r\n            return menusByFiltertext\r\n        }\r\n\r\n        return menusByFiltertext.filter(item => item.menuType === menuType)\r\n\r\n    },[menuCollection, filterText, menuType])\r\n\r\n    return(\r\n            <Grid\r\n                direction='row'\r\n                spacing={2}\r\n                justifyContent='center'\r\n                container>\r\n                <Grid\r\n                    item\r\n                    xs={11}\r\n                    sm={11}\r\n                    md={11}\r\n                    lg={11}\r\n                    xl={11}>\r\n                    <MenuFilter \r\n                        filterText={filterText}\r\n                        selectedMenuType={menuType}\r\n                        onFilterTextChange={onFilterTextChange}\r\n                        onMenuTypeChange={onMenuTypeChange}/>\r\n                </Grid>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    item\r\n                    xs={11}\r\n                    sm={3}\r\n                    md={3}\r\n                    lg={3}\r\n                    xl={3}>\r\n                    <Paper>\r\n                        <MenuList \r\n                            menuCollection={filteredMenuItems} \r\n                            selectedMenuId={layoutConfig.selectedMenuId} \r\n                            handleSelectMenu={handleSelectMenu}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid\r\n                    className={useStyle.item}\r\n                    style={{backgroundColor: 'red'}}\r\n                    item\r\n                    xs={11}\r\n                    sm={8}\r\n                    md={8}\r\n                    lg={8}\r\n                    xl={8}>\r\n                            T3\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuLayout\r\n\r\n//    {/* {layoutConfig.hasFilter &&( */}\r\n           \r\n//             //             <MenuFilter \r\n//             //                 filterText={filterText}\r\n//             //                 selectedMenuType={menuType}\r\n//             //                 onFilterTextChange={onFilterTextChange}\r\n//             //                 onMenuTypeChange={onMenuTypeChange}/>\r\n          \r\n//                 //     {layoutConfig.hasMenuList && (\r\n//                 //     <Grid item xs={12} xl = {6}>\r\n//                 //         <MenuList \r\n//                 //             menuCollection={filteredMenuItems} \r\n//                 //             selectedMenuId={layoutConfig.selectedMenuId} \r\n//                 //             handleSelectMenu={handleSelectMenu}/>\r\n//                 //     </Grid>\r\n//                 //     )}\r\n//                 //     <Grid item xs = {12} xl = {6}>\r\n//                 //         <MenuContainer isReadOnly={layoutConfig.isReadOnly} selectedMenu={selectedMenu ?? {} as IMenu}/>\r\n//                 //     </Grid>\r\n//                 // </Grid> */} */} */}"]},"metadata":{},"sourceType":"module"}