{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_virtualized\\\\_table\\\\TableColunm.tsx\";\nimport React from \"react\";\nimport { Column } from 'react-virtualized';\nimport HeaderCell from \"./HeaderCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableColunm = props => {\n  const {\n    key,\n    dataKey,\n    width,\n    headerValue,\n    style,\n    state,\n    customCellRenderer,\n    handleSelectAll\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Column, {\n    style: style,\n    dataKey: dataKey,\n    width: width,\n    cellRenderer: cell => customCellRenderer(cell.cellData, cell.dataKey, cell.rowIndex),\n    headerRenderer: () => /*#__PURE__*/_jsxDEV(HeaderCell, {\n      value: headerValue,\n      hasCheckbox: dataKey === 'id',\n      state: state,\n      handleSelectAll: handleSelectAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }, this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n};\n\n_c = TableColunm;\nexport default TableColunm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableColunm\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableColunm.tsx"],"names":["React","Column","HeaderCell","TableColunm","props","key","dataKey","width","headerValue","style","state","customCellRenderer","handleSelectAll","cell","cellData","rowIndex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAkC,mBAAlC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;AAYA,MAAMC,WAA6B,GAAIC,KAAD,IAAU;AAE5C,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,OAAN;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA,KAA1C;AAAiDC,IAAAA,kBAAjD;AAAqEC,IAAAA;AAArE,MAAwFR,KAA9F;AAEA,sBAEQ,QAAC,MAAD;AAEI,IAAA,KAAK,EAAEK,KAFX;AAGI,IAAA,OAAO,EAAEH,OAHb;AAII,IAAA,KAAK,EAAEC,KAJX;AAKI,IAAA,YAAY,EAAGM,IAAD,IAAUF,kBAAkB,CAACE,IAAI,CAACC,QAAN,EAAgBD,IAAI,CAACP,OAArB,EAA8BO,IAAI,CAACE,QAAnC,CAL9C;AAMI,IAAA,cAAc,EAAE,mBAAO,QAAC,UAAD;AAAY,MAAA,KAAK,EAAIP,WAArB;AAAkC,MAAA,WAAW,EAAEF,OAAO,KAAK,IAA3D;AAAiE,MAAA,KAAK,EAAEI,KAAxE;AAA+E,MAAA,eAAe,EAAEE;AAAhG;AAAA;AAAA;AAAA;AAAA;AAN3B,KACSP,GADT;AAAA;AAAA;AAAA;AAAA,UAFR;AAWH,CAfD;;KAAMF,W;AAiBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {Column, ColumnProps} from 'react-virtualized'\r\nimport { ILogMessageTableState } from \"../../../_pages/_administartion/_logging/loggingDataService\";\r\nimport HeaderCell from \"./HeaderCell\";\r\n\r\n\r\ninterface IProps extends ColumnProps{\r\n    key: string\r\n    dataKey: string\r\n    headerValue: string\r\n    state: ILogMessageTableState\r\n    customCellRenderer: (cellData: any, dataKey: string, index: number) => JSX.Element\r\n    handleSelectAll: () => void\r\n}\r\n\r\nconst TableColunm: React.FC<IProps> = (props) =>{\r\n\r\n    const {key, dataKey, width, headerValue, style, state, customCellRenderer, handleSelectAll} = props\r\n\r\n    return(\r\n      \r\n            <Column\r\n                key={key}\r\n                style={style}\r\n                dataKey={dataKey} \r\n                width={width}\r\n                cellRenderer={(cell) => customCellRenderer(cell.cellData, cell.dataKey, cell.rowIndex)}\r\n                headerRenderer={() => (<HeaderCell value = {headerValue} hasCheckbox={dataKey === 'id'} state={state} handleSelectAll={handleSelectAll}/>)}\r\n            />\r\n    )\r\n} \r\n\r\nexport default TableColunm"]},"metadata":{},"sourceType":"module"}