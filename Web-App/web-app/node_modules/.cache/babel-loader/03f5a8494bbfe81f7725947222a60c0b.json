{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport apiConfig from '../_config/apiConfig.json';\nexport const useImageConverter = src => {\n  _s();\n\n  const [image, setImage] = React.useState();\n\n  const resolveResponse = async res => {\n    Promise.resolve(res.json()).then(data => {\n      var image = JSON.parse(JSON.stringify(data));\n      setImage(image);\n    });\n  };\n\n  const fetchData = React.useCallback(async form => {\n    await fetch(apiConfig.baseUrl + apiConfig.cookingBook.imageConverter, {\n      method: 'POST',\n      mode: 'cors',\n      body: form\n    }).then(async res => {\n      if (res.status === 200) {\n        resolveResponse(res);\n      }\n    });\n  }, []);\n\n  const getFormData = file => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    return formData;\n  };\n\n  const getBase64Image = React.useCallback(async file => {\n    const formData = getFormData(file);\n    await fetchData(formData);\n  }, [fetchData]);\n  const handleChange = React.useCallback(async e => {\n    e.preventDefault();\n\n    if (e.target.files !== null && e.target.files[0]) {\n      const file = e.target.files[0];\n      await getBase64Image(file);\n    }\n  }, [getBase64Image]);\n  const imageSrc = React.useMemo(() => {\n    if (image !== undefined) {\n      return \"data:image/png;base64,\" + image;\n    }\n\n    return \"\";\n  }, [image]);\n  return {\n    image,\n    imageSrc,\n    handleChange\n  };\n};\n\n_s(useImageConverter, \"hSzcmDFzZChAPubdJRRhjnieXZY=\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_hooks/useImageConverter.ts"],"names":["React","apiConfig","useImageConverter","src","image","setImage","useState","resolveResponse","res","Promise","resolve","json","then","data","JSON","parse","stringify","fetchData","useCallback","form","fetch","baseUrl","cookingBook","imageConverter","method","mode","body","status","getFormData","file","formData","FormData","append","getBase64Image","handleChange","e","preventDefault","target","files","imageSrc","useMemo","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAQA,OAAO,MAAMC,iBAAiB,GAAIC,GAAD,IAAkD;AAAA;;AAE/E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,EAA1B;;AAEA,QAAMC,eAAe,GAAG,MAAOC,GAAP,IAAwB;AAE5CC,IAAAA,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAAJ,EAAhB,EACCC,IADD,CACOC,IAAD,IAAS;AAEX,UAAIT,KAAW,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAlB;AAEAR,MAAAA,QAAQ,CAACD,KAAD,CAAR;AAEH,KAPD;AAQH,GAVD;;AAWA,QAAMa,SAAS,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,MAAOC,IAAP,IAAoB;AACpD,UAAMC,KAAK,CAACnB,SAAS,CAACoB,OAAV,GAAoBpB,SAAS,CAACqB,WAAV,CAAsBC,cAA3C,EAA2D;AAACC,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAE,MAAvB;AAA+BC,MAAAA,IAAI,EAAEP;AAArC,KAA3D,CAAL,CACLP,IADK,CACA,MAAOJ,GAAP,IAAe;AACjB,UAAGA,GAAG,CAACmB,MAAJ,KAAe,GAAlB,EAAsB;AAClBpB,QAAAA,eAAe,CAACC,GAAD,CAAf;AACH;AACJ,KALK,CAAN;AAMH,GAPiB,EAOhB,EAPgB,CAAlB;;AASA,QAAMoB,WAAW,GAAIC,IAAD,IAAe;AAC/B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,IAAzB;AAEA,WAAOC,QAAP;AACH,GALD;;AAOA,QAAMG,cAAc,GAAGjC,KAAK,CAACkB,WAAN,CAAkB,MAAOW,IAAP,IAAsB;AAE3D,UAAMC,QAAQ,GAAGF,WAAW,CAACC,IAAD,CAA5B;AAEA,UAAMZ,SAAS,CAACa,QAAD,CAAf;AAEH,GANsB,EAMrB,CAACb,SAAD,CANqB,CAAvB;AAQA,QAAMiB,YAAY,GAAGlC,KAAK,CAACkB,WAAN,CAAkB,MAAOiB,CAAP,IAAiD;AACpFA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,IAAnB,IAA2BH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAA9B,EAAgD;AAE5C,YAAMT,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEA,YAAML,cAAc,CAACJ,IAAD,CAApB;AACH;AACJ,GARoB,EAQnB,CAACI,cAAD,CARmB,CAArB;AAUA,QAAMM,QAAQ,GAAGvC,KAAK,CAACwC,OAAN,CAAc,MAAK;AAChC,QAAGpC,KAAK,KAAKqC,SAAb,EAAuB;AACnB,aAAO,2BAA2BrC,KAAlC;AACH;;AACD,WAAO,EAAP;AACH,GALgB,EAKf,CAACA,KAAD,CALe,CAAjB;AAOA,SAAO;AACHA,IAAAA,KADG;AAEHmC,IAAAA,QAFG;AAGHL,IAAAA;AAHG,GAAP;AAKH,CA7DM;;GAAMhC,iB","sourcesContent":["import React from \"react\";\r\nimport apiConfig from '../_config/apiConfig.json'\r\n\r\nexport interface IImageUploadResult{\r\n    image: Blob | undefined\r\n    imageSrc: string\r\n    handleChange: (e: React.ChangeEvent<HTMLInputElement>) => Promise<void>\r\n}\r\n\r\nexport const useImageConverter = (src: ArrayBuffer | string): IImageUploadResult =>{\r\n\r\n    const [image, setImage] = React.useState<Blob>();    \r\n    \r\n    const resolveResponse = async (res: Response) =>{\r\n\r\n        Promise.resolve(res.json())\r\n        .then((data) =>{\r\n\r\n            var image: Blob = JSON.parse(JSON.stringify(data))\r\n\r\n            setImage(image)\r\n           \r\n        });\r\n    }\r\n    const fetchData = React.useCallback(async (form: any) =>{\r\n        await fetch(apiConfig.baseUrl + apiConfig.cookingBook.imageConverter, {method: 'POST', mode: 'cors', body: form})\r\n        .then(async (res) => {\r\n            if(res.status === 200){\r\n                resolveResponse(res)\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const getFormData = (file: File) =>{\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        \r\n        return formData\r\n    }\r\n\r\n    const getBase64Image = React.useCallback(async (file: File) => {\r\n        \r\n        const formData = getFormData(file)\r\n        \r\n        await fetchData(formData)\r\n       \r\n    },[fetchData])\r\n\r\n    const handleChange = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) =>{\r\n        e.preventDefault()\r\n        if(e.target.files !== null && e.target.files[0]){\r\n\r\n            const file = e.target.files[0]\r\n\r\n            await getBase64Image(file)  \r\n        }\r\n    },[getBase64Image])\r\n\r\n    const imageSrc = React.useMemo(() =>{\r\n        if(image !== undefined){\r\n            return \"data:image/png;base64,\" + image\r\n        }\r\n        return \"\"\r\n    },[image])\r\n\r\n    return {\r\n        image,\r\n        imageSrc,    \r\n        handleChange\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}