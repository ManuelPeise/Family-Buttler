{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_inputs\\\\ImageInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport { useImageConverter } from '../../_hooks/useImageConverter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageInput = props => {\n  _s();\n\n  const {\n    isReadOnly,\n    width,\n    height,\n    isLoading,\n    noImageSrc,\n    menu,\n    onImageChanged\n  } = props;\n  const imageService = useImageConverter(menu);\n  const src = React.useMemo(() => {\n    if ((menu === null || menu === void 0 ? void 0 : menu.image) === undefined || (menu === null || menu === void 0 ? void 0 : menu.image) === \"\") {\n      return noImageSrc;\n    }\n\n    return menu.image;\n  }, [menu, noImageSrc]);\n  const handleChange = React.useCallback(async e => {\n    await imageService.handleChange(e);\n  }, [imageService]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyItems: 'center',\n      alignItems: 'center'\n    },\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 4,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: width,\n        height: height,\n        src: src,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 4,\n      item: true,\n      children: !isReadOnly && /*#__PURE__*/_jsxDEV(TextField, {\n        hidden: true,\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageInput, \"1wLgYd5Alqj/cOppIEsnSHissT0=\", false, function () {\n  return [useImageConverter];\n});\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_inputs/ImageInput.tsx"],"names":["Grid","TextField","CircularProgress","React","useImageConverter","ImageInput","props","isReadOnly","width","height","isLoading","noImageSrc","menu","onImageChanged","imageService","src","useMemo","image","undefined","handleChange","useCallback","e","display","flexDirection","justifyItems","alignItems"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,gBAA1B,QAAkD,mBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAaA,MAAMC,UAA4B,GAAIC,KAAD,IAAU;AAAA;;AAE3C,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,UAAvC;AAAmDC,IAAAA,IAAnD;AAAyDC,IAAAA;AAAzD,MAA2EP,KAAjF;AAEA,QAAMQ,YAAY,GAAGV,iBAAiB,CAACQ,IAAD,CAAtC;AAEA,QAAMG,GAAG,GAAGZ,KAAK,CAACa,OAAN,CAAc,MAAM;AAC5B,QAAG,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,KAAN,MAAgBC,SAAhB,IAA6B,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,KAAN,MAAgB,EAAhD,EAAmD;AAC/C,aAAON,UAAP;AACH;;AAED,WAAOC,IAAI,CAACK,KAAZ;AACH,GANW,EAMV,CAACL,IAAD,EAAOD,UAAP,CANU,CAAZ;AAQA,QAAMQ,YAAY,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,MAAOC,CAAP,IAAkD;AAErF,UAAMP,YAAY,CAACK,YAAb,CAA0BE,CAA1B,CAAN;AAEH,GAJoB,EAInB,CAACP,YAAD,CAJmB,CAArB;AAOA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,QAA/B;AAAyCC,MAAAA,YAAY,EAAC,QAAtD;AAAgEC,MAAAA,UAAU,EAAC;AAA3E,KADX;AAEI,IAAA,IAAI,MAFR;AAAA,4BAGI,QAAC,IAAD;AACK,MAAA,EAAE,EAAE,EADT;AAEK,MAAA,EAAE,EAAE,CAFT;AAGI,MAAA,IAAI,MAHR;AAAA,6BAII;AAAK,QAAA,KAAK,EAAEjB,KAAZ;AAAmB,QAAA,MAAM,EAAEC,MAA3B;AAAmC,QAAA,GAAG,EAAEM,GAAxC;AAA6C,QAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,IAAD;AACI,MAAA,EAAE,EAAE,EADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,IAAI,MAHR;AAAA,gBAIK,CAACR,UAAD,iBACG,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,IAAnB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,QAAQ,EAAEY;AAA/C;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YATJ,EAiBKT,SAAS,iBACN,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA5CD;;GAAML,U;UAImBD,iB;;;KAJnBC,U;AA8CN,eAAeA,UAAf","sourcesContent":["import { Grid, TextField, CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useImageConverter } from '../../_hooks/useImageConverter'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\n\r\ninterface IProps{\r\n    isReadOnly: boolean\r\n    width: number\r\n    height: number\r\n    isLoading: boolean\r\n    noImageSrc: string\r\n    menu: IMenu\r\n    onImageChanged: (image: string) => void\r\n}\r\n\r\nconst ImageInput: React.FC<IProps> = (props) =>{\r\n\r\n    const {isReadOnly, width, height, isLoading, noImageSrc, menu, onImageChanged} = props\r\n    \r\n    const imageService = useImageConverter(menu)\r\n    \r\n    const src = React.useMemo(() => {\r\n        if(menu?.image === undefined || menu?.image === \"\"){\r\n            return noImageSrc\r\n        }\r\n\r\n        return menu.image\r\n    },[menu, noImageSrc])\r\n\r\n    const handleChange = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    \r\n        await imageService.handleChange(e)\r\n       \r\n    },[imageService])\r\n\r\n\r\n    return(\r\n        <Grid\r\n            style={{display:'flex', flexDirection:'column', justifyItems:'center', alignItems:'center' }}\r\n            item>\r\n            <Grid\r\n                 xs={12}\r\n                 sm={4}\r\n                item>\r\n                <img width={width} height={height} src={src} alt=''/>\r\n            </Grid>\r\n            <Grid\r\n                xs={12}\r\n                sm={4}\r\n                item>\r\n                {!isReadOnly && (\r\n                    <TextField hidden={true} type='file' onChange={handleChange}/>\r\n                )}\r\n            </Grid>\r\n            {isLoading && (\r\n                <CircularProgress/>\r\n            )}    \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ImageInput"]},"metadata":{},"sourceType":"module"}