{"ast":null,"code":"import{Checkbox,Grid,makeStyles,Tooltip,Typography}from'@material-ui/core';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=makeStyles({col:{display:'flex',flexDirection:'row',justifyContent:'space-between',fontSize:'1.5rem',padding:'1rem'},cell:{'&:hover':{cursor:'pointer'}}});var HeaderCell=function HeaderCell(props){var value=props.value,hasCheckbox=props.hasCheckbox,state=props.state,itemCount=props.itemCount,handleSelectAll=props.handleSelectAll;var useStyle=styles();var handleSelect=React.useCallback(function(){handleSelectAll();},[handleSelectAll]);var cellComponent=React.useMemo(function(){return/*#__PURE__*/_jsxs(Grid,{className:useStyle.cell,container:true,children:[hasCheckbox&&/*#__PURE__*/_jsx(Tooltip,{title:\"delete all\",children:/*#__PURE__*/_jsx(Checkbox,{disabled:itemCount===0,checked:state.allSelected,indeterminate:state.ids.length!==itemCount&&state.allSelected,onChange:handleSelect})}),!hasCheckbox&&/*#__PURE__*/_jsx(Tooltip,{title:value,children:/*#__PURE__*/_jsx(Typography,{children:value})})]});},[state,hasCheckbox,useStyle,value,itemCount,handleSelect]);return cellComponent;};export default HeaderCell;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/HeaderCell.tsx"],"names":["Checkbox","Grid","makeStyles","Tooltip","Typography","React","styles","col","display","flexDirection","justifyContent","fontSize","padding","cell","cursor","HeaderCell","props","value","hasCheckbox","state","itemCount","handleSelectAll","useStyle","handleSelect","useCallback","cellComponent","useMemo","allSelected","ids","length"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,IAAnB,CAAyBC,UAAzB,CAAqCC,OAArC,CAA8CC,UAA9C,KAAgE,mBAAhE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAGA,GAAMC,CAAAA,MAAM,CAAGJ,UAAU,CAAC,CACtBK,GAAG,CAAC,CACAC,OAAO,CAAC,MADR,CAEAC,aAAa,CAAC,KAFd,CAGAC,cAAc,CAAC,eAHf,CAIAC,QAAQ,CAAE,QAJV,CAKAC,OAAO,CAAE,MALT,CADkB,CAStBC,IAAI,CAAC,CACD,UAAU,CACNC,MAAM,CAAE,SADF,CADT,CATiB,CAAD,CAAzB,CAwBA,GAAMC,CAAAA,UAA4B,CAAG,QAA/BA,CAAAA,UAA+B,CAACC,KAAD,CAAU,CAE3C,GAAOC,CAAAA,KAAP,CAAgED,KAAhE,CAAOC,KAAP,CAAcC,WAAd,CAAgEF,KAAhE,CAAcE,WAAd,CAA2BC,KAA3B,CAAgEH,KAAhE,CAA2BG,KAA3B,CAAkCC,SAAlC,CAAgEJ,KAAhE,CAAkCI,SAAlC,CAA6CC,eAA7C,CAAgEL,KAAhE,CAA6CK,eAA7C,CACA,GAAMC,CAAAA,QAAQ,CAAGhB,MAAM,EAAvB,CAEA,GAAMiB,CAAAA,YAAY,CAAGlB,KAAK,CAACmB,WAAN,CAAkB,UAAK,CAExCH,eAAe,GAClB,CAHoB,CAGnB,CAACA,eAAD,CAHmB,CAArB,CAKA,GAAMI,CAAAA,aAAa,CAAGpB,KAAK,CAACqB,OAAN,CAAc,UAAK,CACrC,mBACI,MAAC,IAAD,EACI,SAAS,CAAEJ,QAAQ,CAACT,IADxB,CAEI,SAAS,KAFb,WAGHK,WAAW,eACR,KAAC,OAAD,EAAS,KAAK,CAAC,YAAf,uBACI,KAAC,QAAD,EACI,QAAQ,CAAEE,SAAS,GAAK,CAD5B,CAEI,OAAO,CAAED,KAAK,CAACQ,WAFnB,CAGI,aAAa,CAAER,KAAK,CAACS,GAAN,CAAUC,MAAV,GAAqBT,SAArB,EAAkCD,KAAK,CAACQ,WAH3D,CAII,QAAQ,CAAEJ,YAJd,EADJ,EAJA,CAYH,CAACL,WAAD,eACD,KAAC,OAAD,EAAS,KAAK,CAAED,KAAhB,uBACI,KAAC,UAAD,WAAaA,KAAb,EADJ,EAbI,GADJ,CAmBH,CApBqB,CAoBpB,CAACE,KAAD,CAAQD,WAAR,CAAqBI,QAArB,CAA+BL,KAA/B,CAAsCG,SAAtC,CAAiDG,YAAjD,CApBoB,CAAtB,CAsBA,MAAOE,CAAAA,aAAP,CACH,CAjCD,CAmCA,cAAeV,CAAAA,UAAf","sourcesContent":["import { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { ILogMessageTableState } from '../../../_pages/_administartion/_logging/loggingDataService'\r\n\r\nconst styles = makeStyles({\r\n    col:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        fontSize: '1.5rem',\r\n        padding: '1rem',\r\n        \r\n    },\r\n    cell:{\r\n        '&:hover':{\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    value: string\r\n    state: ILogMessageTableState\r\n    hasCheckbox: boolean\r\n    itemCount: number\r\n    handleSelectAll: () => void\r\n}\r\n\r\nconst HeaderCell: React.FC<IProps> = (props) =>{\r\n\r\n    const {value, hasCheckbox, state, itemCount, handleSelectAll} = props\r\n    const useStyle = styles()\r\n\r\n    const handleSelect = React.useCallback(() =>{\r\n       \r\n        handleSelectAll()\r\n    },[handleSelectAll])\r\n\r\n    const cellComponent = React.useMemo(() =>{\r\n        return(\r\n            <Grid\r\n                className={useStyle.cell}\r\n                container>\r\n        {hasCheckbox && (\r\n            <Tooltip title='delete all'>\r\n                <Checkbox\r\n                    disabled={itemCount === 0} \r\n                    checked={state.allSelected} \r\n                    indeterminate={state.ids.length !== itemCount && state.allSelected} \r\n                    onChange={handleSelect}/>\r\n            </Tooltip>\r\n        )}\r\n        {!hasCheckbox &&(\r\n        <Tooltip title={value}>\r\n            <Typography>{value}</Typography>\r\n        </Tooltip>\r\n        )}\r\n    </Grid>)\r\n    },[state, hasCheckbox, useStyle, value, itemCount, handleSelect])\r\n\r\n    return(cellComponent)\r\n}\r\n\r\nexport default HeaderCell"]},"metadata":{},"sourceType":"module"}