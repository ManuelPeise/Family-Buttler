{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuInputComponent from './MenueInputComponent';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { Grid, MenuItem, Button } from '@material-ui/core';\nimport IngrdientList from './IngredientList';\nimport SubHeaderBar from '../../_components/_appBars/subHeader';\nimport MenuAutocompleteInput from './MenuAutoComplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$name2, _menu$description, _menu$howTo, _menu$menuType;\n\n  const {\n    selectedMenu,\n    isReadOnly,\n    values,\n    config,\n    menuCollection,\n    handleSave\n  } = props;\n  const [menu, setMenu] = React.useState(selectedMenu);\n  React.useEffect(() => {\n    setMenu(selectedMenu);\n  }, [setMenu, selectedMenu]);\n  const original = React.useMemo(() => {\n    return selectedMenu;\n  }, [selectedMenu]);\n  const ingredientsEqual = React.useMemo(() => {\n    var _menu$ingredients, _menu$ingredients2;\n\n    let isEqual = false;\n\n    if ((menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) === 0) {\n      return true;\n    }\n\n    menu === null || menu === void 0 ? void 0 : (_menu$ingredients2 = menu.ingredients) === null || _menu$ingredients2 === void 0 ? void 0 : _menu$ingredients2.forEach(x => {\n      var _original$ingredients;\n\n      const index = (_original$ingredients = original.ingredients.findIndex(item => item.id === x.id)) !== null && _original$ingredients !== void 0 ? _original$ingredients : -1;\n\n      if (index === -1 || original.ingredients[index] !== x) {\n        return false;\n      }\n\n      isEqual = true;\n    });\n    return isEqual;\n  }, [menu === null || menu === void 0 ? void 0 : menu.ingredients, original === null || original === void 0 ? void 0 : original.ingredients]);\n  const disabled = React.useMemo(() => {\n    return menu.name === selectedMenu.name && menu.description === selectedMenu.description && menu.howTo === selectedMenu.howTo && menu.menuType === selectedMenu.menuType;\n  }, [menu, selectedMenu]);\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const onIngredientChanged = React.useCallback(ingredients => {\n    setMenu({ ...menu,\n      ...ingredients\n    });\n  }, [menu, setMenu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: values.select\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"0\",\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: values.recipePasta\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"1\",\n      value: 1,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: values.recipeMeat\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"2\",\n      value: 2,\n      selected: menu.menuType === MenuTypeEnum.Soup,\n      children: values.recipeSoup\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"3\",\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Pastries,\n      children: values.recipePastries\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType, values]);\n  const unitTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      children: values.select\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"3\",\n      value: 3,\n      children: values.unitGram\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"2\",\n      value: 2,\n      children: values.unitKilo\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"0\",\n      value: 0,\n      children: values.unitLiter\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"1\",\n      value: 1,\n      children: values.unitMilliliters\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"7\",\n      value: 7,\n      children: values.unitPiece\n    }, 7, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"4\",\n      value: 4,\n      children: values.unitTablespoon\n    }, 4, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"5\",\n      value: 5,\n      children: values.unitTeaspoon\n    }, 5, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [values]);\n  const handleAddIngredient = React.useCallback(() => {\n    const update = { ...menu\n    };\n    update.ingredients.push({});\n    setMenu(update);\n  }, [menu, setMenu]);\n  const onCancel = React.useCallback(() => {\n    setMenu(original);\n  }, [original, setMenu]);\n  const onSave = React.useCallback(async () => {\n    await handleSave(menu);\n  }, [menu, handleSave]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    justifyContent: \"center\",\n    xs: 11,\n    xl: 11,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(SubHeaderBar, {\n        title: values.recipe,\n        variant: \"h5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), !config.isReadOnly && /*#__PURE__*/_jsxDEV(MenuAutocompleteInput, {\n        title: values.name,\n        value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n        menuCollection: menuCollection,\n        handleChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.name,\n        value: (_menu$name2 = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name2 !== void 0 ? _menu$name2 : \"\",\n        fullWidth: true,\n        isReadonly: isReadOnly,\n        onValueChanged: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.description,\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onDescriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.hoTo,\n        isMultiRow: true,\n        maxRows: 20,\n        fullWidth: true,\n        value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onHowToChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: values.menuType,\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n        isReadonly: isReadOnly,\n        hasSelect: true,\n        selectElements: menuTypes,\n        onSelectChanged: onMenuTypeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(IngrdientList, {\n        values: values,\n        ingredients: menu.ingredients,\n        unitTypes: unitTypes,\n        isReadOnly: isReadOnly,\n        onIngredientsChanged: onIngredientChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), !isReadOnly && /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"flex-end\",\n      style: {\n        margin: '2vw'\n      },\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuContainer, \"MPkja3+poS/cCPagnOJVS3GsybA=\");\n\n_c = MenuContainer;\nexport default MenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuContainer.tsx"],"names":["React","MenuInputComponent","MenuTypeEnum","Grid","MenuItem","Button","IngrdientList","SubHeaderBar","MenuAutocompleteInput","MenuContainer","props","selectedMenu","isReadOnly","values","config","menuCollection","handleSave","menu","setMenu","useState","useEffect","original","useMemo","ingredientsEqual","isEqual","ingredients","length","forEach","x","index","findIndex","item","id","disabled","name","description","howTo","menuType","onTitleChanged","useCallback","data","onDescriptionChanged","onHowToChanged","onMenuTypeChanged","value","onIngredientChanged","menuTypes","elements","push","None","select","Pasta","recipePasta","Meat","recipeMeat","Soup","recipeSoup","Pastries","recipePastries","unitTypes","unitGram","unitKilo","unitLiter","unitMilliliters","unitPiece","unitTablespoon","unitTeaspoon","handleAddIngredient","update","onCancel","onSave","recipe","hoTo","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport {IIngredient, IMenu} from '../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { Grid, MenuItem, Button } from '@material-ui/core'\r\nimport IngrdientList from './IngredientList'\r\nimport SubHeaderBar from '../../_components/_appBars/subHeader'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport AutocompleteInput from '../../_components/_inputs/autocompleteInput'\r\nimport MenuAutocompleteInput from './MenuAutoComplete'\r\n\r\ninterface IProps{\r\n    selectedMenu: IMenu\r\n    isReadOnly: boolean\r\n    values: ICookingBookValues\r\n    config: IMenuLayoutConfig\r\n    menuCollection: IMenu[]\r\n    handleSave: (menu: IMenu) => Promise<void>\r\n}\r\n\r\nconst MenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {selectedMenu, isReadOnly, values, config, menuCollection, handleSave} = props\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>(selectedMenu)\r\n   \r\n    React.useEffect(() =>{\r\n        setMenu(selectedMenu)\r\n    },[setMenu, selectedMenu])\r\n\r\n    const original = React.useMemo(() =>{\r\n        return selectedMenu\r\n    },[selectedMenu])\r\n\r\n    const ingredientsEqual = React.useMemo(() =>{\r\n        \r\n        let isEqual = false\r\n\r\n        if(menu?.ingredients?.length === 0){\r\n           return true\r\n        }\r\n        \r\n        menu?.ingredients?.forEach(x => {\r\n            const index = original.ingredients.findIndex(item => item.id === x.id)?? -1\r\n\r\n            if(index === -1 ||  original.ingredients[index] !== x){\r\n               return false\r\n            }\r\n            \r\n            isEqual = true\r\n        }) \r\n\r\n        return isEqual\r\n    },[menu?.ingredients, original?.ingredients])\r\n\r\n    const disabled = React.useMemo(() =>{\r\n        return (menu.name === selectedMenu.name\r\n            && menu.description === selectedMenu.description\r\n            && menu.howTo === selectedMenu.howTo\r\n            && menu.menuType === selectedMenu.menuType)\r\n    },[menu, selectedMenu])\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onIngredientChanged = React.useCallback((ingredients: IIngredient[]) =>{\r\n        setMenu({...menu, ...ingredients})\r\n    },[menu, setMenu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key={-1} id ='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>{values.select}</MenuItem>)\r\n        elements.push(<MenuItem key={0} id = '0' value={0} selected={menu.menuType === MenuTypeEnum.Pasta}>{values.recipePasta}</MenuItem>)\r\n        elements.push(<MenuItem key={1} id = '1' value={1} selected={menu.menuType === MenuTypeEnum.Meat}>{values.recipeMeat}</MenuItem>)\r\n        elements.push(<MenuItem key={2} id = '2' value={2} selected={menu.menuType === MenuTypeEnum.Soup}>{values.recipeSoup}</MenuItem>)\r\n        elements.push(<MenuItem key={3} id = '3' value={3} selected={menu.menuType === MenuTypeEnum.Pastries}>{values.recipePastries}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType, values])\r\n\r\n    const unitTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key={-1} id ='-1' value={-1}>{values.select}</MenuItem>)\r\n        elements.push(<MenuItem key={3} id = '3' value={3}>{values.unitGram}</MenuItem>)\r\n        elements.push(<MenuItem key={2} id = '2' value={2}>{values.unitKilo}</MenuItem>)\r\n        elements.push(<MenuItem key={0} id = '0' value={0}>{values.unitLiter}</MenuItem>)\r\n        elements.push(<MenuItem key={1} id = '1' value={1}>{values.unitMilliliters}</MenuItem>)\r\n        elements.push(<MenuItem key={7} id = '7' value={7}>{values.unitPiece}</MenuItem>)\r\n        elements.push(<MenuItem key={4} id = '4' value={4}>{values.unitTablespoon}</MenuItem>)\r\n        elements.push(<MenuItem key={5} id = '5' value={5}>{values.unitTeaspoon}</MenuItem>)\r\n\r\n        return elements\r\n    },[values])\r\n\r\n    const handleAddIngredient = React.useCallback(() => {\r\n        const update: IMenu = {...menu}\r\n        update.ingredients.push({} as IIngredient)\r\n        setMenu(update)\r\n\r\n    },[menu, setMenu])\r\n\r\n    const onCancel = React.useCallback(() =>{\r\n        setMenu(original)\r\n    },[original, setMenu])\r\n\r\n    const onSave = React.useCallback(async () => {\r\n        await handleSave(menu)\r\n    },[menu, handleSave])\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            item\r\n            justifyContent='center'\r\n            xs={11}\r\n            xl={11}>\r\n            <Grid\r\n                container>\r\n                    <SubHeaderBar title={values.recipe} variant='h5'/>\r\n                    {!config.isReadOnly && (\r\n                    <MenuAutocompleteInput \r\n                        title={values.name} \r\n                        value={menu?.name?? \"\"} \r\n                        menuCollection={menuCollection} \r\n                        handleChange={onTitleChanged}/>\r\n                    )}\r\n                    <MenuInputComponent\r\n                                label={values.name}\r\n                                value={menu?.name?? \"\"}\r\n                                fullWidth={true} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onTitleChanged} />\r\n                    <MenuInputComponent\r\n                                label={values.description}\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.description?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onDescriptionChanged}/>\r\n                    <MenuInputComponent\r\n                                label={values.hoTo}\r\n                                isMultiRow={true}\r\n                                maxRows={20}\r\n                                fullWidth={true} \r\n                                value={menu?.howTo?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onHowToChanged}/>\r\n                    <MenuInputComponent\r\n                                label={values.menuType}\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu.menuType ?? -1} \r\n                                isReadonly={isReadOnly}\r\n                                hasSelect={true}\r\n                                selectElements={menuTypes}\r\n                                onSelectChanged={onMenuTypeChanged}/>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                    <IngrdientList \r\n                        values={values} \r\n                        ingredients={menu.ingredients}\r\n                        unitTypes={unitTypes}\r\n                        isReadOnly= {isReadOnly}\r\n                        onIngredientsChanged={onIngredientChanged}/>\r\n            </Grid>\r\n            {!isReadOnly && (\r\n            <Grid\r\n                justifyContent='flex-end'\r\n                style={{margin: '2vw'}}\r\n                container>\r\n                    <Button disabled={disabled} onClick={onCancel}>Cancel</Button>\r\n                    <Button disabled={disabled} onClick={onSave}>Save</Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuContainer  "]},"metadata":{},"sourceType":"module"}