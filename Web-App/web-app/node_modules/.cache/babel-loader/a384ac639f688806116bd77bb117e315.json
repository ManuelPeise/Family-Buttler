{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\cookingBookDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport AddMenuContainer from './_add/AddMenuContainer';\nimport EditMenuContainer from './_edit/EditMenuContainer';\nimport ViewMenuContainer from './_view/ViewMenuContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CookingBookDataService = props => {\n  _s();\n\n  const {\n    isEditMode,\n    page\n  } = props;\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const dispatch = useDispatch(); // if(!menuDataService.dataBound){\n  //     return null\n  // }\n\n  const container = React.useMemo(() => {\n    switch (page) {\n      case 'add':\n        return /*#__PURE__*/_jsxDEV(AddMenuContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n\n      case 'edit':\n        return /*#__PURE__*/_jsxDEV(EditMenuContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n\n      case 'view':\n        return /*#__PURE__*/_jsxDEV(ViewMenuContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n    }\n  }, [page]);\n  dispatch(SetMenuCollection(menuDataService.items[0].menuCollection));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CookingBookDataService, \"lKAow/327QJISYiGdDrcro4RCF4=\", false, function () {\n  return [useApi, useDispatch];\n});\n\n_c = CookingBookDataService;\nexport default CookingBookDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"CookingBookDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/cookingBookDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","useDispatch","AddMenuContainer","EditMenuContainer","ViewMenuContainer","CookingBookDataService","props","isEditMode","page","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","dispatch","container","useMemo","items","menuCollection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,iBAAT,QAAkC,8CAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;AAQA,MAAMC,sBAAwC,GAAIC,KAAD,IAAU;AAAA;;AAEvD,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAqBF,KAA3B;AAEA,QAAMG,eAAe,GAAGX,MAAM,CAAgB;AAACY,IAAAA,UAAU,EAAEX,SAAS,CAACY,OAAV,GAAoBZ,SAAS,CAACa,WAAV,CAAsBC,iBAAvD;AAA0EC,IAAAA,MAAM,EAAE;AAAlF,GAAhB,CAA9B;AAEA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B,CANuD,CAQvD;AAEA;AACA;;AAEA,QAAMe,SAAS,GAAGnB,KAAK,CAACoB,OAAN,CAAc,MAAK;AACjC,YAAOT,IAAP;AACI,WAAK,KAAL;AACI,4BAAQ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAAR;;AACJ,WAAK,MAAL;AACI,4BAAQ,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAAR;;AACJ,WAAK,MAAL;AACI,4BAAQ,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAAR;AANR;AAQH,GATiB,EAShB,CAACA,IAAD,CATgB,CAAlB;AAYAO,EAAAA,QAAQ,CAACf,iBAAiB,CAACS,eAAe,CAACS,KAAhB,CAAsB,CAAtB,EAAyBC,cAA1B,CAAlB,CAAR;AAIA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBH;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CA9BD;;GAAMX,sB;UAIsBP,M,EAEPG,W;;;KANfI,sB;AAgCN,eAAeA,sBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport AddMenuContainer from './_add/AddMenuContainer'\r\nimport EditMenuContainer from './_edit/EditMenuContainer'\r\nimport ViewMenuContainer from './_view/ViewMenuContainer'\r\n\r\n\r\ninterface IProps{\r\n    isEditMode?: boolean\r\n    page: 'add' | 'edit' | 'view'\r\n}\r\n\r\nconst CookingBookDataService: React.FC<IProps> = (props) =>{\r\n\r\n    const {isEditMode, page} = props\r\n\r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    // if(!menuDataService.dataBound){\r\n\r\n    //     return null\r\n    // }\r\n\r\n    const container = React.useMemo(() =>{\r\n        switch(page){\r\n            case 'add':\r\n                return (<AddMenuContainer/>)\r\n            case 'edit':\r\n                return (<EditMenuContainer/>)\r\n            case 'view':\r\n                return (<ViewMenuContainer/>)\r\n        }\r\n    },[page])\r\n\r\n\r\n    dispatch(SetMenuCollection(menuDataService.items[0].menuCollection))\r\n   \r\n   \r\n    \r\n    return (<React.Fragment>{container}</React.Fragment>)\r\n}\r\n\r\nexport default CookingBookDataService"]},"metadata":{},"sourceType":"module"}