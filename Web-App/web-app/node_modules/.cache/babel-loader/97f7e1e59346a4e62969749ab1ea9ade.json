{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_inputs\\\\ImageInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\nimport { useImageUpload } from '../../_hooks/useImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageInput = props => {\n  _s();\n\n  const {\n    isReadOnly,\n    width,\n    height,\n    src,\n    handleImageChanged\n  } = props;\n  const imageService = useImageUpload(src);\n  const imageSrc = React.useMemo(() => {\n    if (imageService.image === undefined) {\n      return \"\";\n    }\n\n    return \"data:image/png;base64,\" + imageService.image;\n  }, [imageService.image]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: width,\n        height: height,\n        src: imageSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: !isReadOnly && /*#__PURE__*/_jsxDEV(TextField, {\n        hidden: true,\n        type: \"file\",\n        onChange: imageService.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageInput, \"IQEK/GxppE/Ad658H29LzDVyocQ=\", false, function () {\n  return [useImageUpload];\n});\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_inputs/ImageInput.tsx"],"names":["Grid","TextField","React","useImageUpload","ImageInput","props","isReadOnly","width","height","src","handleImageChanged","imageService","imageSrc","useMemo","image","undefined","display","flexDirection","justifyContent","alignContent","handleChange"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,6BAA7B;;;AAUA,MAAMC,UAA4B,GAAIC,KAAD,IAAU;AAAA;;AAE3C,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,GAA5B;AAAiCC,IAAAA;AAAjC,MAAuDL,KAA7D;AAEA,QAAMM,YAAY,GAAGR,cAAc,CAACM,GAAD,CAAnC;AAEA,QAAMG,QAAQ,GAAGV,KAAK,CAACW,OAAN,CAAc,MAAK;AAChC,QAAGF,YAAY,CAACG,KAAb,KAAuBC,SAA1B,EAAoC;AAChC,aAAO,EAAP;AACH;;AAED,WAAO,2BAA2BJ,YAAY,CAACG,KAA/C;AACH,GANgB,EAMf,CAACH,YAAY,CAACG,KAAd,CANe,CAAjB;AAQA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,QAA/B;AAAyCC,MAAAA,cAAc,EAAC,QAAxD;AAAkEC,MAAAA,YAAY,EAAC;AAA/E,KADX;AAEI,IAAA,SAAS,MAFb;AAAA,4BAGI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAAA,6BAEI;AAAK,QAAA,KAAK,EAAEZ,KAAZ;AAAmB,QAAA,MAAM,EAAEC,MAA3B;AAAmC,QAAA,GAAG,EAAEI;AAAxC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAAA,gBAEK,CAACN,UAAD,iBACG,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,IAAnB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,QAAQ,EAAEK,YAAY,CAACS;AAA5D;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA9BD;;GAAMhB,U;UAImBD,c;;;KAJnBC,U;AAgCN,eAAeA,UAAf","sourcesContent":["import { Grid, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {useImageUpload} from '../../_hooks/useImageUpload'\r\n\r\ninterface IProps{\r\n    isReadOnly: boolean\r\n    width: number\r\n    height: number\r\n    src: string\r\n    handleImageChanged: (image: string) => void\r\n}\r\n\r\nconst ImageInput: React.FC<IProps> = (props) =>{\r\n\r\n    const {isReadOnly, width, height, src, handleImageChanged} = props\r\n\r\n    const imageService = useImageUpload(src)\r\n  \r\n    const imageSrc = React.useMemo(() =>{\r\n        if(imageService.image === undefined){\r\n            return \"\"\r\n        }\r\n\r\n        return \"data:image/png;base64,\" + imageService.image\r\n    },[imageService.image])\r\n\r\n    return(\r\n        <Grid\r\n            style={{display:'flex', flexDirection:'column', justifyContent:'center', alignContent:'center' }}\r\n            container>\r\n            <Grid\r\n                item>\r\n                <img width={width} height={height} src={imageSrc}/>\r\n            </Grid>\r\n            <Grid\r\n                item>\r\n                {!isReadOnly && (\r\n                    <TextField hidden={true} type='file' onChange={imageService.handleChange}/>\r\n                )}\r\n            </Grid>    \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ImageInput"]},"metadata":{},"sourceType":"module"}