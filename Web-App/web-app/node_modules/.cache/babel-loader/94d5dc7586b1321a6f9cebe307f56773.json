{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\_add\\\\AddMenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PageBodyLayout from '../../../_layout/pageBodyLayout';\nimport MenuInputComponent from '../MenueInputComponent';\nimport { MenuTypeEnum } from '../../../_enums/menuEnums';\nimport { MenuItem } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$description, _menu$howTo;\n\n  const [menu, setMenu] = React.useState({\n    menuType: -1\n  });\n  console.log(menu);\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: \"Select Menu Type\"\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '0',\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: MenuTypeEnum[MenuTypeEnum.Pasta]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '4',\n      value: 4,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: MenuTypeEnum[MenuTypeEnum.Meat]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '3',\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Other,\n      children: MenuTypeEnum[MenuTypeEnum.Other]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType]);\n  return /*#__PURE__*/_jsxDEV(PageBodyLayout, {\n    hasCancelBtn: true,\n    hasSaveBtn: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n      label: \"Name\",\n      value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n      isReadonly: false,\n      onValueChanged: onTitleChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n      label: \"Description\",\n      isMultiRow: true,\n      maxRows: 5,\n      fullWidth: true,\n      value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n      isReadonly: false,\n      onValueChanged: onDescriptionChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n      label: \"How To\",\n      isMultiRow: true,\n      maxRows: 5,\n      fullWidth: true,\n      value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n      isReadonly: false,\n      onValueChanged: onHowToChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n      label: \"MenuType\",\n      isMultiRow: true,\n      maxRows: 5,\n      fullWidth: true,\n      value: menu.menuType,\n      isReadonly: false,\n      hasSelect: true,\n      selectElements: menuTypes,\n      onSelectChanged: onMenuTypeChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddMenuContainer, \"PcWm4iNQ6EIxcuBrUAQ/ytGLZMM=\");\n\n_c = AddMenuContainer;\nexport default AddMenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/_add/AddMenuContainer.tsx"],"names":["React","PageBodyLayout","MenuInputComponent","MenuTypeEnum","MenuItem","AddMenuContainer","props","menu","setMenu","useState","menuType","console","log","onTitleChanged","useCallback","name","data","onDescriptionChanged","description","onHowToChanged","howTo","onMenuTypeChanged","value","menuTypes","useMemo","elements","push","None","Pasta","Meat","Other"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;;AAMA,MAAMC,gBAAkC,GAAIC,KAAD,IAAU;AAAA;;AAAA;;AAEjD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAsB;AAACC,IAAAA,QAAQ,EAAE,CAAC;AAAZ,GAAtB,CAAxB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,QAAMM,cAAc,GAAGb,KAAK,CAACc,WAAN,CAAmBC,IAAD,IAAiB;AACtD,UAAMC,IAAW,GAAG,EAAC,GAAGT,IAAJ;AAAUQ,MAAAA;AAAV,KAApB;AACAP,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACH,GAHsB,EAGrB,CAACT,IAAD,CAHqB,CAAvB;AAKA,QAAMU,oBAAoB,GAAGjB,KAAK,CAACc,WAAN,CAAmBI,WAAD,IAAwB;AACnE,UAAMF,IAAW,GAAG,EAAC,GAAGT,IAAJ;AAAUW,MAAAA;AAAV,KAApB;AACAV,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACH,GAH4B,EAG3B,CAACT,IAAD,CAH2B,CAA7B;AAKA,QAAMY,cAAc,GAAGnB,KAAK,CAACc,WAAN,CAAmBM,KAAD,IAAkB;AACvD,UAAMJ,IAAW,GAAG,EAAC,GAAGT,IAAJ;AAAUa,MAAAA;AAAV,KAApB;AACAZ,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACH,GAHsB,EAGrB,CAACT,IAAD,CAHqB,CAAvB;AAKA,QAAMc,iBAAiB,GAAGrB,KAAK,CAACc,WAAN,CAAmBQ,KAAD,IAAkB;AAC1D,UAAMN,IAAW,GAAG,EAAC,GAAGT,IAAJ;AAAUG,MAAAA,QAAQ,EAAEY;AAApB,KAApB;AACAd,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACH,GAHyB,EAGxB,CAACT,IAAD,CAHwB,CAA1B;AAKA,QAAMgB,SAAS,GAAGvB,KAAK,CAACwB,OAAN,CAAc,MAAM;AAClC,UAAMC,QAAQ,GAAG,EAAjB;AAEAA,IAAAA,QAAQ,CAACC,IAAT,eAAc,QAAC,QAAD;AAAqB,MAAA,EAAE,EAAC,IAAxB;AAA6B,MAAA,KAAK,EAAE,CAAC,CAArC;AAAwC,MAAA,QAAQ,EAAEnB,IAAI,CAACG,QAAL,KAAkBP,YAAY,CAACwB,IAAjF;AAAA;AAAA,OAAiB,CAAC,CAAlB;AAAA;AAAA;AAAA;AAAA,YAAd;AACAF,IAAAA,QAAQ,CAACC,IAAT,eAAc,QAAC,QAAD;AAAoB,MAAA,EAAE,EAAE,GAAxB;AAA6B,MAAA,KAAK,EAAI,CAAtC;AAAyC,MAAA,QAAQ,EAAEnB,IAAI,CAACG,QAAL,KAAkBP,YAAY,CAACyB,KAAlF;AAAA,gBAA2FzB,YAAY,CAACA,YAAY,CAACyB,KAAd;AAAvG,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YAAd;AACAH,IAAAA,QAAQ,CAACC,IAAT,eAAc,QAAC,QAAD;AAAoB,MAAA,EAAE,EAAE,GAAxB;AAA6B,MAAA,KAAK,EAAE,CAApC;AAAuC,MAAA,QAAQ,EAAEnB,IAAI,CAACG,QAAL,KAAkBP,YAAY,CAAC0B,IAAhF;AAAA,gBAAwF1B,YAAY,CAACA,YAAY,CAAC0B,IAAd;AAApG,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YAAd;AACAJ,IAAAA,QAAQ,CAACC,IAAT,eAAc,QAAC,QAAD;AAAoB,MAAA,EAAE,EAAE,GAAxB;AAA6B,MAAA,KAAK,EAAE,CAApC;AAAuC,MAAA,QAAQ,EAAEnB,IAAI,CAACG,QAAL,KAAkBP,YAAY,CAAC2B,KAAhF;AAAA,gBAAyF3B,YAAY,CAACA,YAAY,CAAC2B,KAAd;AAArG,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YAAd;AAEA,WAAOL,QAAP;AACH,GATiB,EAShB,CAAClB,IAAI,CAACG,QAAN,CATgB,CAAlB;AAWA,sBACI,QAAC,cAAD;AACI,IAAA,YAAY,EAAI,IADpB;AAEI,IAAA,UAAU,EAAI,IAFlB;AAAA,4BAGO,QAAC,kBAAD;AACK,MAAA,KAAK,EAAC,MADX;AAEK,MAAA,KAAK,gBAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,IAAR,mDAAe,EAFzB;AAGK,MAAA,UAAU,EAAE,KAHjB;AAIK,MAAA,cAAc,EAAEF;AAJrB;AAAA;AAAA;AAAA;AAAA,YAHP,eAQO,QAAC,kBAAD;AACK,MAAA,KAAK,EAAC,aADX;AAEK,MAAA,UAAU,EAAE,IAFjB;AAGK,MAAA,OAAO,EAAE,CAHd;AAIK,MAAA,SAAS,EAAE,IAJhB;AAKK,MAAA,KAAK,uBAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEW,WAAR,iEAAsB,EALhC;AAMK,MAAA,UAAU,EAAE,KANjB;AAOK,MAAA,cAAc,EAAED;AAPrB;AAAA;AAAA;AAAA;AAAA,YARP,eAgBQ,QAAC,kBAAD;AACI,MAAA,KAAK,EAAC,QADV;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,OAAO,EAAE,CAHb;AAII,MAAA,SAAS,EAAE,IAJf;AAKI,MAAA,KAAK,iBAAEV,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEa,KAAR,qDAAgB,EALzB;AAMI,MAAA,UAAU,EAAE,KANhB;AAOI,MAAA,cAAc,EAAED;AAPpB;AAAA;AAAA;AAAA;AAAA,YAhBR,eAwBS,QAAC,kBAAD;AACG,MAAA,KAAK,EAAC,UADT;AAEG,MAAA,UAAU,EAAE,IAFf;AAGG,MAAA,OAAO,EAAE,CAHZ;AAIG,MAAA,SAAS,EAAE,IAJd;AAKG,MAAA,KAAK,EAAEZ,IAAI,CAACG,QALf;AAMG,MAAA,UAAU,EAAE,KANf;AAOG,MAAA,SAAS,EAAE,IAPd;AAQG,MAAA,cAAc,EAAEa,SARnB;AASG,MAAA,eAAe,EAAEF;AATpB;AAAA;AAAA;AAAA;AAAA,YAxBT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAzED;;GAAMhB,gB;;KAAAA,gB;AA2EN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport PageBodyLayout from '../../../_layout/pageBodyLayout'\r\nimport MenuInputComponent from '../MenueInputComponent'\r\nimport {IMenu} from '../../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../../_enums/menuEnums'\r\nimport { MenuItem } from '@material-ui/core'\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nconst AddMenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>({menuType: -1} as IMenu)\r\n\r\n    console.log(menu)\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key = {-1} id='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>Select Menu Type</MenuItem>)\r\n        elements.push(<MenuItem key = {0} id={'0'} value = {0} selected={menu.menuType === MenuTypeEnum.Pasta} >{MenuTypeEnum[MenuTypeEnum.Pasta]}</MenuItem>)\r\n        elements.push(<MenuItem key = {1} id={'4'} value={4} selected={menu.menuType === MenuTypeEnum.Meat} >{MenuTypeEnum[MenuTypeEnum.Meat]}</MenuItem>)\r\n        elements.push(<MenuItem key = {2} id={'3'} value={3} selected={menu.menuType === MenuTypeEnum.Other} >{MenuTypeEnum[MenuTypeEnum.Other]}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType])\r\n\r\n    return(\r\n        <PageBodyLayout\r\n            hasCancelBtn = {true}\r\n            hasSaveBtn = {true}>\r\n               <MenuInputComponent\r\n                    label='Name'\r\n                    value={menu?.name?? \"\"} \r\n                    isReadonly={false}\r\n                    onValueChanged={onTitleChanged} />\r\n               <MenuInputComponent\r\n                    label='Description'\r\n                    isMultiRow={true}\r\n                    maxRows={5}\r\n                    fullWidth={true} \r\n                    value={menu?.description?? \"\"} \r\n                    isReadonly={false}\r\n                    onValueChanged={onDescriptionChanged}/>\r\n                <MenuInputComponent\r\n                    label='How To'\r\n                    isMultiRow={true}\r\n                    maxRows={5}\r\n                    fullWidth={true} \r\n                    value={menu?.howTo?? \"\"} \r\n                    isReadonly={false}\r\n                    onValueChanged={onHowToChanged}/>\r\n                 <MenuInputComponent\r\n                    label='MenuType'\r\n                    isMultiRow={true}\r\n                    maxRows={5}\r\n                    fullWidth={true} \r\n                    value={menu.menuType} \r\n                    isReadonly={false}\r\n                    hasSelect={true}\r\n                    selectElements={menuTypes}\r\n                    onSelectChanged={onMenuTypeChanged}/>\r\n        </PageBodyLayout>\r\n    )\r\n}\r\n\r\nexport default AddMenuContainer  "]},"metadata":{},"sourceType":"module"}