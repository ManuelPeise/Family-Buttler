{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_landingpage\\\\LandingPageButtlerConfiguratuinDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Typography } from '@material-ui/core';\nimport React from 'react';\nimport InputTextField from '../../_components/_inputs/InputTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingpageButtlerConfigurationDialog = props => {\n  _s();\n\n  const {\n    dialogOpen,\n    values,\n    handleClose,\n    setButtlerConfiguration\n  } = props;\n  const [config, setConfig] = React.useState({});\n  const selectElements = React.useMemo(() => {\n    const items = [];\n    items.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: 0\n    }, 'en', false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this));\n    items.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: 1\n    }, 'de', false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this));\n  }, []);\n  const handleButtlerNameChanged = React.useCallback(name => {\n    setConfig({ ...config,\n      name: name\n    });\n  }, [config]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: dialogOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'blue',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontSize: '1rem'\n        },\n        children: values.buttlerConfiguration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(InputTextField, {\n        label: values.buttlerName,\n        value: config.name,\n        onValueChange: handleButtlerNameChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: values.cancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: values.save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LandingpageButtlerConfigurationDialog, \"XEjgbYomn2vKqh0lH6P1fRDyrVs=\");\n\n_c = LandingpageButtlerConfigurationDialog;\nexport default LandingpageButtlerConfigurationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingpageButtlerConfigurationDialog\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_landingpage/LandingPageButtlerConfiguratuinDialog.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","Typography","React","InputTextField","LandingpageButtlerConfigurationDialog","props","dialogOpen","values","handleClose","setButtlerConfiguration","config","setConfig","useState","selectElements","useMemo","items","push","handleButtlerNameChanged","useCallback","name","backgroundColor","color","fontSize","buttlerConfiguration","buttlerName","cancel","save"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,WAAvD,EAAoEC,QAApE,EAA8EC,UAA9E,QAAgG,mBAAhG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;;AAWA,MAAMC,qCAAuD,GAAIC,KAAD,IAAU;AAAA;;AAEtE,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA;AAAlC,MAA6DJ,KAAnE;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAsC,EAAtC,CAA5B;AAEA,QAAMC,cAAc,GAAGX,KAAK,CAACY,OAAN,CAAc,MAAK;AACtC,UAAMC,KAAoB,GAAG,EAA7B;AAEAA,IAAAA,KAAK,CAACC,IAAN,eAAW,QAAC,QAAD;AAAmB,MAAA,KAAK,EAAE;AAA1B,OAAc,IAAd;AAAA;AAAA;AAAA;AAAA,YAAX;AACAD,IAAAA,KAAK,CAACC,IAAN,eAAW,QAAC,QAAD;AAAmB,MAAA,KAAK,EAAE;AAA1B,OAAc,IAAd;AAAA;AAAA;AAAA;AAAA,YAAX;AACH,GALsB,EAKrB,EALqB,CAAvB;AAMA,QAAMC,wBAAwB,GAAGf,KAAK,CAACgB,WAAN,CAAmBC,IAAD,IAAiB;AAChER,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYS,MAAAA,IAAI,EAAEA;AAAlB,KAAD,CAAT;AACH,GAFgC,EAE/B,CAACT,MAAD,CAF+B,CAAjC;AAMA,sBACI,QAAC,MAAD;AACI,IAAA,IAAI,EAAIJ,UADZ;AAAA,4BAEI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAACc,QAAAA,eAAe,EAAC,MAAjB;AAAyBC,QAAAA,KAAK,EAAC;AAA/B,OAApB;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAG;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAA,kBAA0Cf,MAAM,CAACgB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,aAAD;AAAA,6BACI,QAAC,cAAD;AACI,QAAA,KAAK,EAAEhB,MAAM,CAACiB,WADlB;AAEI,QAAA,KAAK,EAAEd,MAAM,CAACS,IAFlB;AAGI,QAAA,aAAa,EAAEF;AAHnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAET,WAAjB;AAAA,kBAA+BD,MAAM,CAACkB;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEjB,WAAjB;AAAA,kBAA+BD,MAAM,CAACmB;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CApCD;;GAAMtB,qC;;KAAAA,qC;AAsCN,eAAeA,qCAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport InputTextField from '../../_components/_inputs/InputTextField'\r\nimport { IButtlerConfiguration } from '../../_interfaces/IButtlerConfiguration'\r\nimport { ILandingpageValues } from '../../_interfaces/ILandingpageValues'\r\n\r\ninterface IProps{\r\n    dialogOpen: boolean\r\n    values: ILandingpageValues\r\n    handleClose: () => void\r\n    setButtlerConfiguration: (config: IButtlerConfiguration) => void\r\n}\r\n\r\nconst LandingpageButtlerConfigurationDialog: React.FC<IProps> = (props) =>{\r\n\r\n    const {dialogOpen, values, handleClose, setButtlerConfiguration} = props\r\n\r\n    const [config, setConfig] = React.useState<IButtlerConfiguration>({} as IButtlerConfiguration)\r\n\r\n    const selectElements = React.useMemo(() =>{\r\n        const items: JSX.Element[] = []\r\n\r\n        items.push(<MenuItem key='en' value={0}></MenuItem>)\r\n        items.push(<MenuItem key='de' value={1}></MenuItem>)\r\n    },[])\r\n    const handleButtlerNameChanged = React.useCallback((name: string) =>{\r\n        setConfig({...config, name: name})\r\n    },[config])\r\n\r\n\r\n\r\n    return(\r\n        <Dialog \r\n            open = {dialogOpen}>\r\n            <DialogTitle style={{backgroundColor:'blue', color:'white'}}>\r\n                <Typography style ={{ fontSize: '1rem'}}>{values.buttlerConfiguration}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <InputTextField \r\n                    label={values.buttlerName} \r\n                    value={config.name}\r\n                    onValueChange={handleButtlerNameChanged}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>{values.cancel}</Button>\r\n                <Button onClick={handleClose}>{values.save}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default LandingpageButtlerConfigurationDialog"]},"metadata":{},"sourceType":"module"}