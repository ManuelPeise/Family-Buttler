{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuInputComponent from './MenueInputComponent';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { Grid, MenuItem, Button } from '@material-ui/core';\nimport IngrdientList from './IngredientList';\nimport SubHeaderBar from '../../_components/_appBars/subHeader';\nimport ImageInput from '../../_components/_inputs/ImageInput';\nimport noImg from '../../img/no-pic.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetMenu } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuContainer = props => {\n  _s();\n\n  var _menu$name2, _menu$description, _menu$howTo, _menu$menuType;\n\n  const {\n    values,\n    config,\n    menuCollection,\n    handleSave\n  } = props;\n  const menu = useSelector(state => state.menu);\n  const dispatch = useDispatch();\n  const original = React.useMemo(() => {\n    return menu;\n  }, [menu]);\n  const existingMenuNames = React.useMemo(() => {\n    return menuCollection.map(menu => {\n      return menu.name.toLocaleLowerCase();\n    });\n  }, [menuCollection]);\n  const menuNameAlreadyExists = React.useMemo(() => {\n    return existingMenuNames.findIndex(x => {\n      var _menu$name;\n\n      return x.normalize() === (menu === null || menu === void 0 ? void 0 : (_menu$name = menu.name) === null || _menu$name === void 0 ? void 0 : _menu$name.toLocaleLowerCase().normalize());\n    }) !== -1;\n  }, [menu.name, existingMenuNames]);\n  const isValidMenu = React.useMemo(() => {\n    var _menu$ingredients;\n\n    return menu.name !== \"\" && menuNameAlreadyExists === false && menu.description !== \"\" && menu.menuType !== MenuTypeEnum.None && (menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) > 0;\n  }, [menu, menuNameAlreadyExists]);\n\n  const isEqualIngrdient = (original, modified) => {\n    return (original === null || original === void 0 ? void 0 : original.amount) === (modified === null || modified === void 0 ? void 0 : modified.amount) && (original === null || original === void 0 ? void 0 : original.name) === (modified === null || modified === void 0 ? void 0 : modified.name) && (original === null || original === void 0 ? void 0 : original.unit) === (modified === null || modified === void 0 ? void 0 : modified.unit);\n  };\n\n  const ingredientsEqual = React.useCallback(() => {\n    var _original$ingredients, _equal$filter, _original$ingredients2;\n\n    const equal = original === null || original === void 0 ? void 0 : (_original$ingredients = original.ingredients) === null || _original$ingredients === void 0 ? void 0 : _original$ingredients.map((ingredient, index) => {\n      return isEqualIngrdient(ingredient, menu === null || menu === void 0 ? void 0 : menu.ingredients[index]);\n    });\n    return (equal === null || equal === void 0 ? void 0 : (_equal$filter = equal.filter(x => x === true)) === null || _equal$filter === void 0 ? void 0 : _equal$filter.length) === (original === null || original === void 0 ? void 0 : (_original$ingredients2 = original.ingredients) === null || _original$ingredients2 === void 0 ? void 0 : _original$ingredients2.length);\n  }, [original === null || original === void 0 ? void 0 : original.ingredients, menu === null || menu === void 0 ? void 0 : menu.ingredients]);\n  const disabled = React.useMemo(() => {\n    console.log(isValidMenu);\n\n    if (config.componentKey === 'add') {\n      return isValidMenu === false;\n    }\n\n    if (config.componentKey === 'edit') {\n      console.log(isValidMenu);\n\n      if ((menu === null || menu === void 0 ? void 0 : menu.name) === undefined) {\n        return true;\n      }\n\n      return menu.description === original.description && menu.howTo === original.howTo && menu.menuType === original.menuType && ingredientsEqual() === true;\n    }\n\n    return true;\n  }, [config, menu, original, ingredientsEqual, isValidMenu]);\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    dispatch(SetMenu(data));\n  }, [menu, dispatch]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    dispatch(SetMenu(data));\n  }, [menu, dispatch]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    dispatch(SetMenu(data));\n  }, [menu, dispatch]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    dispatch(SetMenu(data));\n  }, [menu, dispatch]);\n  const onIngredientChanged = React.useCallback(ingredients => {\n    dispatch(SetMenu({ ...menu,\n      ingredients: ingredients\n    }));\n  }, [menu, dispatch]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: values.select\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"0\",\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: values.recipePasta\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"1\",\n      value: 1,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: values.recipeMeat\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"2\",\n      value: 2,\n      selected: menu.menuType === MenuTypeEnum.Soup,\n      children: values.recipeSoup\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"3\",\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Pastries,\n      children: values.recipePastries\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType, values]);\n  const unitTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      children: values.select\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"3\",\n      value: 3,\n      children: values.unitGram\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"2\",\n      value: 2,\n      children: values.unitKilo\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"0\",\n      value: 0,\n      children: values.unitLiter\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"1\",\n      value: 1,\n      children: values.unitMilliliters\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"7\",\n      value: 7,\n      children: values.unitPiece\n    }, 7, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"4\",\n      value: 4,\n      children: values.unitTablespoon\n    }, 4, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"5\",\n      value: 5,\n      children: values.unitTeaspoon\n    }, 5, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [values]);\n  const handleAddIngredient = React.useCallback(() => {\n    var _menu$ingredients2, _menu$ingredients3;\n\n    const update = { ...menu,\n      ingredients: (_menu$ingredients2 = menu.ingredients) !== null && _menu$ingredients2 !== void 0 ? _menu$ingredients2 : []\n    };\n    update.ingredients.push({\n      id: menu === null || menu === void 0 ? void 0 : (_menu$ingredients3 = menu.ingredients) === null || _menu$ingredients3 === void 0 ? void 0 : _menu$ingredients3.length\n    });\n    dispatch(SetMenu(update));\n  }, [menu, dispatch]);\n  const onCancel = React.useCallback(() => {\n    var _original$ingredients3;\n\n    dispatch(SetMenu({ ...original,\n      ingredients: original === null || original === void 0 ? void 0 : (_original$ingredients3 = original.ingredients) === null || _original$ingredients3 === void 0 ? void 0 : _original$ingredients3.filter(x => x.id !== -1)\n    }));\n  }, [original, dispatch]);\n  const onSave = React.useCallback(async () => {\n    await handleSave(menu);\n    dispatch(SetMenu({}));\n  }, [menu, handleSave, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    justifyContent: \"center\",\n    xs: 11,\n    xl: 11,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(SubHeaderBar, {\n        title: values.recipe,\n        variant: \"h5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 8,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.name,\n          value: (_menu$name2 = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name2 !== void 0 ? _menu$name2 : \"\",\n          fullWidth: true,\n          isReadonly: config.isReadOnly && (config.componentKey === 'view' || config.componentKey === 'edit'),\n          hasError: menuNameAlreadyExists && config.componentKey === 'add',\n          errorText: menuNameAlreadyExists && config.componentKey === 'add' ? \"Menu already exists!\" : \"\",\n          onValueChanged: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.description,\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n          isReadonly: config.isReadOnly,\n          onValueChanged: onDescriptionChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.hoTo,\n          isMultiRow: true,\n          maxRows: 20,\n          fullWidth: true,\n          value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n          isReadonly: config.isReadOnly,\n          onValueChanged: onHowToChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.menuType,\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n          isReadonly: config.isReadOnly,\n          hasSelect: true,\n          selectElements: menuTypes,\n          onSelectChanged: onMenuTypeChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 4,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(ImageInput, {\n          isReadOnly: config.isReadOnly,\n          width: 200,\n          height: 200,\n          noImageSrc: noImg,\n          menu: menu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(IngrdientList, {\n        title: values.addIngredient,\n        values: values,\n        ingredients: menu.ingredients,\n        unitTypes: unitTypes,\n        isReadOnly: config.isReadOnly,\n        onIngredientsChanged: onIngredientChanged,\n        handleAddIngredient: handleAddIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), !config.isReadOnly && /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"flex-end\",\n      style: {\n        margin: '2vw'\n      },\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuContainer, \"cRdFCmgmS68UMXCBu70EY40LZYU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MenuContainer;\nexport default MenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuContainer.tsx"],"names":["React","MenuInputComponent","MenuTypeEnum","Grid","MenuItem","Button","IngrdientList","SubHeaderBar","ImageInput","noImg","useDispatch","useSelector","SetMenu","MenuContainer","props","values","config","menuCollection","handleSave","menu","state","dispatch","original","useMemo","existingMenuNames","map","name","toLocaleLowerCase","menuNameAlreadyExists","findIndex","x","normalize","isValidMenu","description","menuType","None","ingredients","length","isEqualIngrdient","modified","amount","unit","ingredientsEqual","useCallback","equal","ingredient","index","filter","disabled","console","log","componentKey","undefined","howTo","onTitleChanged","data","onDescriptionChanged","onHowToChanged","onMenuTypeChanged","value","onIngredientChanged","menuTypes","elements","push","select","Pasta","recipePasta","Meat","recipeMeat","Soup","recipeSoup","Pastries","recipePastries","unitTypes","unitGram","unitKilo","unitLiter","unitMilliliters","unitPiece","unitTablespoon","unitTeaspoon","handleAddIngredient","update","id","onCancel","onSave","recipe","isReadOnly","hoTo","addIngredient","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport {IIngredient, IMenu} from '../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { Grid, MenuItem, Button } from '@material-ui/core'\r\nimport IngrdientList from './IngredientList'\r\nimport SubHeaderBar from '../../_components/_appBars/subHeader'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport ImageInput from '../../_components/_inputs/ImageInput'\r\nimport noImg from '../../img/no-pic.png'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IAppState } from '../../_interfaces/IAppState'\r\nimport { SetMenu } from '../../_redux/_appStateStore/appStoreAccessor'\r\n\r\ninterface IProps{\r\n    values: ICookingBookValues\r\n    config: IMenuLayoutConfig\r\n    menuCollection: IMenu[]\r\n    handleSave: (menu: IMenu) => Promise<void>\r\n}\r\n\r\nconst MenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {values, config, menuCollection, handleSave} = props\r\n\r\n    const menu = useSelector<IAppState, IMenu>(state => state.menu)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const original = React.useMemo(() =>{\r\n        return menu\r\n    },[menu])\r\n\r\n    const existingMenuNames = React.useMemo(() =>{\r\n        return menuCollection.map((menu) =>{\r\n            return menu.name.toLocaleLowerCase()\r\n        })\r\n    },[menuCollection])\r\n\r\n    const menuNameAlreadyExists = React.useMemo(() =>{\r\n        return existingMenuNames.findIndex(x => x.normalize() === menu?.name?.toLocaleLowerCase().normalize()) !== -1\r\n    },[menu.name, existingMenuNames])\r\n\r\n    const isValidMenu = React.useMemo(() =>{\r\n        return(\r\n            menu.name !== \"\" && menuNameAlreadyExists === false\r\n            && menu.description !== \"\"\r\n            && menu.menuType !== MenuTypeEnum.None\r\n            && menu?.ingredients?.length > 0\r\n        )\r\n    },[menu, menuNameAlreadyExists])\r\n\r\n    const isEqualIngrdient = (original: IIngredient, modified: IIngredient) => {\r\n        return original?.amount === modified?.amount && original?.name === modified?.name && original?.unit === modified?.unit\r\n    } \r\n\r\n    const ingredientsEqual = React.useCallback(() =>{\r\n        \r\n        const equal = original?.ingredients?.map((ingredient, index) =>{\r\n\r\n            return isEqualIngrdient(ingredient, menu?.ingredients[index])\r\n        })\r\n        \r\n        return equal?.filter(x => x === true)?.length === original?.ingredients?.length\r\n\r\n    },[original?.ingredients, menu?.ingredients])\r\n\r\n    const disabled = React.useMemo(() =>{\r\n        console.log(isValidMenu)\r\n        if(config.componentKey === 'add'){\r\n            return isValidMenu === false\r\n        }\r\n    \r\n        if(config.componentKey === 'edit'){\r\n\r\n            console.log(isValidMenu)\r\n            if(menu?.name === undefined){\r\n                return true\r\n            }\r\n\r\n            return (\r\n            menu.description === original.description\r\n            && menu.howTo === original.howTo\r\n            && menu.menuType === original.menuType\r\n            && ingredientsEqual() === true)\r\n        }\r\n\r\n        return true\r\n       \r\n    },[config, menu, original, ingredientsEqual, isValidMenu])\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n       \r\n        dispatch(SetMenu(data))\r\n    },[menu, dispatch])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        dispatch(SetMenu(data))\r\n    },[menu, dispatch])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        dispatch(SetMenu(data))\r\n    },[menu, dispatch])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        dispatch(SetMenu(data))\r\n    },[menu, dispatch])\r\n\r\n    const onIngredientChanged = React.useCallback((ingredients: IIngredient[]) =>{\r\n        dispatch(SetMenu({...menu, ingredients: ingredients}))\r\n    },[menu, dispatch])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key={-1} id ='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>{values.select}</MenuItem>)\r\n        elements.push(<MenuItem key={0} id = '0' value={0} selected={menu.menuType === MenuTypeEnum.Pasta}>{values.recipePasta}</MenuItem>)\r\n        elements.push(<MenuItem key={1} id = '1' value={1} selected={menu.menuType === MenuTypeEnum.Meat}>{values.recipeMeat}</MenuItem>)\r\n        elements.push(<MenuItem key={2} id = '2' value={2} selected={menu.menuType === MenuTypeEnum.Soup}>{values.recipeSoup}</MenuItem>)\r\n        elements.push(<MenuItem key={3} id = '3' value={3} selected={menu.menuType === MenuTypeEnum.Pastries}>{values.recipePastries}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType, values])\r\n\r\n    const unitTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key={-1} id ='-1' value={-1}>{values.select}</MenuItem>)\r\n        elements.push(<MenuItem key={3} id = '3' value={3}>{values.unitGram}</MenuItem>)\r\n        elements.push(<MenuItem key={2} id = '2' value={2}>{values.unitKilo}</MenuItem>)\r\n        elements.push(<MenuItem key={0} id = '0' value={0}>{values.unitLiter}</MenuItem>)\r\n        elements.push(<MenuItem key={1} id = '1' value={1}>{values.unitMilliliters}</MenuItem>)\r\n        elements.push(<MenuItem key={7} id = '7' value={7}>{values.unitPiece}</MenuItem>)\r\n        elements.push(<MenuItem key={4} id = '4' value={4}>{values.unitTablespoon}</MenuItem>)\r\n        elements.push(<MenuItem key={5} id = '5' value={5}>{values.unitTeaspoon}</MenuItem>)\r\n\r\n        return elements\r\n    },[values])\r\n\r\n    const handleAddIngredient = React.useCallback(() => {\r\n        const update: IMenu = {...menu, ingredients: menu.ingredients?? [] as IIngredient[]}\r\n        \r\n        update.ingredients.push({id: menu?.ingredients?.length} as IIngredient)\r\n        dispatch(SetMenu(update))\r\n\r\n    },[menu, dispatch])\r\n\r\n    const onCancel = React.useCallback(() =>{\r\n        dispatch(SetMenu({...original, ingredients: original?.ingredients?.filter(x => x.id !== -1)}))\r\n    },[original, dispatch])\r\n\r\n    const onSave = React.useCallback(async () => {\r\n        await handleSave(menu)\r\n        dispatch(SetMenu({} as IMenu))\r\n    },[menu, handleSave, dispatch])\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            item\r\n            justifyContent='center'\r\n            xs={11}\r\n            xl={11}>\r\n            <Grid\r\n                item\r\n                xs = {12}\r\n                container>\r\n                <SubHeaderBar title={values.recipe} variant='h5'/>\r\n                <Grid\r\n                    xs={12}\r\n                    sm={8}\r\n                    item>\r\n                        <MenuInputComponent\r\n                                    label={values.name}\r\n                                    value={menu?.name?? \"\"}\r\n                                    fullWidth={true} \r\n                                    isReadonly={config.isReadOnly && (config.componentKey === 'view' || config.componentKey === 'edit')}\r\n                                    hasError={menuNameAlreadyExists && config.componentKey === 'add'}\r\n                                    errorText={menuNameAlreadyExists && config.componentKey === 'add' ? \"Menu already exists!\" : \"\"}\r\n                                    onValueChanged={onTitleChanged} />\r\n                        <MenuInputComponent\r\n                                    label={values.description}\r\n                                    isMultiRow={true}\r\n                                    maxRows={5}\r\n                                    fullWidth={true} \r\n                                    value={menu?.description?? \"\"} \r\n                                    isReadonly={config.isReadOnly}\r\n                                    onValueChanged={onDescriptionChanged}/>\r\n                        <MenuInputComponent\r\n                                    label={values.hoTo}\r\n                                    isMultiRow={true}\r\n                                    maxRows={20}\r\n                                    fullWidth={true} \r\n                                    value={menu?.howTo?? \"\"} \r\n                                    isReadonly={config.isReadOnly}\r\n                                    onValueChanged={onHowToChanged}/>\r\n                        <MenuInputComponent\r\n                                    label={values.menuType}\r\n                                    isMultiRow={true}\r\n                                    maxRows={5}\r\n                                    fullWidth={true} \r\n                                    value={menu.menuType ?? -1} \r\n                                    isReadonly={config.isReadOnly}\r\n                                    hasSelect={true}\r\n                                    selectElements={menuTypes}\r\n                                    onSelectChanged={onMenuTypeChanged}/>\r\n                </Grid>\r\n                <Grid\r\n                    xs={12}\r\n                    sm={4}\r\n                    item>\r\n                    <ImageInput \r\n                        isReadOnly={config.isReadOnly}\r\n                        width={200}\r\n                        height={200}\r\n                        noImageSrc={noImg}\r\n                        menu={menu}\r\n                    />\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                    <IngrdientList\r\n                        title={values.addIngredient} \r\n                        values={values} \r\n                        ingredients={menu.ingredients}\r\n                        unitTypes={unitTypes}\r\n                        isReadOnly= {config.isReadOnly}\r\n                        onIngredientsChanged={onIngredientChanged}\r\n                        handleAddIngredient={handleAddIngredient}/>\r\n            </Grid>\r\n            {!config.isReadOnly && (\r\n            <Grid\r\n                justifyContent='flex-end'\r\n                style={{margin: '2vw'}}\r\n                container>\r\n                    <Button disabled={disabled} onClick={onCancel}>Cancel</Button>\r\n                    <Button disabled={disabled} onClick={onSave}>Save</Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuContainer  "]},"metadata":{},"sourceType":"module"}