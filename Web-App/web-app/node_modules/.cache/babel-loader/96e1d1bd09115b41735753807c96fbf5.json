{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_inputs\\\\ImageInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageInput = props => {\n  _s();\n\n  const {\n    isReadOnly,\n    width,\n    height,\n    isLoading,\n    imageSrc,\n    noImageSrc,\n    imageService,\n    onImageChanged\n  } = props;\n  const src = React.useMemo(() => {\n    if (imageSrc === undefined || imageSrc === \"\") {\n      return noImageSrc;\n    }\n\n    return imageSrc;\n  }, [imageSrc, noImageSrc]);\n  const handleChange = React.useCallback(async e => {\n    await imageService.handleChange(e).then(() => {\n      onImageChanged(\"data:image/png;base64,\" + imageService.image);\n    });\n  }, [imageService, onImageChanged]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyItems: 'center',\n      alignItems: 'center'\n    },\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 4,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: width,\n        height: height,\n        src: src,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 4,\n      item: true,\n      children: !isReadOnly && /*#__PURE__*/_jsxDEV(TextField, {\n        hidden: true,\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageInput, \"w0kTvnOTz8j0Q/0fUUXvyGleFm8=\");\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_inputs/ImageInput.tsx"],"names":["Grid","TextField","CircularProgress","React","ImageInput","props","isReadOnly","width","height","isLoading","imageSrc","noImageSrc","imageService","onImageChanged","src","useMemo","undefined","handleChange","useCallback","e","then","image","display","flexDirection","justifyItems","alignItems"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,gBAA1B,QAAkD,mBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAcA,MAAMC,UAA4B,GAAIC,KAAD,IAAU;AAAA;;AAE3C,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA,UAAjD;AAA6DC,IAAAA,YAA7D;AAA2EC,IAAAA;AAA3E,MAA6FR,KAAnG;AAEA,QAAMS,GAAG,GAAGX,KAAK,CAACY,OAAN,CAAc,MAAM;AAC5B,QAAGL,QAAQ,KAAKM,SAAb,IAA0BN,QAAQ,KAAK,EAA1C,EAA6C;AACzC,aAAOC,UAAP;AACH;;AAED,WAAOD,QAAP;AACH,GANW,EAMV,CAACA,QAAD,EAAWC,UAAX,CANU,CAAZ;AAQA,QAAMM,YAAY,GAAGd,KAAK,CAACe,WAAN,CAAkB,MAAOC,CAAP,IAAkD;AAErF,UAAMP,YAAY,CAACK,YAAb,CAA0BE,CAA1B,EACLC,IADK,CACA,MAAK;AACPP,MAAAA,cAAc,CAAC,2BAA2BD,YAAY,CAACS,KAAzC,CAAd;AACH,KAHK,CAAN;AAIH,GANoB,EAMnB,CAACT,YAAD,EAAeC,cAAf,CANmB,CAArB;AAQA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,QAA/B;AAAyCC,MAAAA,YAAY,EAAC,QAAtD;AAAgEC,MAAAA,UAAU,EAAC;AAA3E,KADX;AAEI,IAAA,IAAI,MAFR;AAAA,4BAGI,QAAC,IAAD;AACK,MAAA,EAAE,EAAE,EADT;AAEK,MAAA,EAAE,EAAE,CAFT;AAGI,MAAA,IAAI,MAHR;AAAA,6BAII;AAAK,QAAA,KAAK,EAAElB,KAAZ;AAAmB,QAAA,MAAM,EAAEC,MAA3B;AAAmC,QAAA,GAAG,EAAEM,GAAxC;AAA6C,QAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,IAAD;AACI,MAAA,EAAE,EAAE,EADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,IAAI,MAHR;AAAA,gBAIK,CAACR,UAAD,iBACG,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,IAAnB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,QAAQ,EAAEW;AAA/C;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YATJ,EAiBKR,SAAS,iBACN,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA3CD;;GAAML,U;;KAAAA,U;AA6CN,eAAeA,UAAf","sourcesContent":["import { Grid, TextField, CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IImageUploadResult } from '../../_hooks/useImageConverter'\r\n\r\ninterface IProps{\r\n    isReadOnly: boolean\r\n    width: number\r\n    height: number\r\n    isLoading: boolean\r\n    noImageSrc: string\r\n    imageSrc: string\r\n    imageService: IImageUploadResult\r\n    onImageChanged: (image: string) => void\r\n}\r\n\r\nconst ImageInput: React.FC<IProps> = (props) =>{\r\n\r\n    const {isReadOnly, width, height, isLoading, imageSrc, noImageSrc, imageService, onImageChanged} = props\r\n\r\n    const src = React.useMemo(() => {\r\n        if(imageSrc === undefined || imageSrc === \"\"){\r\n            return noImageSrc\r\n        }\r\n\r\n        return imageSrc\r\n    },[imageSrc, noImageSrc])\r\n\r\n    const handleChange = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    \r\n        await imageService.handleChange(e)\r\n        .then(() =>{\r\n            onImageChanged(\"data:image/png;base64,\" + imageService.image)\r\n        })\r\n    },[imageService, onImageChanged])\r\n\r\n    return(\r\n        <Grid\r\n            style={{display:'flex', flexDirection:'column', justifyItems:'center', alignItems:'center' }}\r\n            item>\r\n            <Grid\r\n                 xs={12}\r\n                 sm={4}\r\n                item>\r\n                <img width={width} height={height} src={src} alt=''/>\r\n            </Grid>\r\n            <Grid\r\n                xs={12}\r\n                sm={4}\r\n                item>\r\n                {!isReadOnly && (\r\n                    <TextField hidden={true} type='file' onChange={handleChange}/>\r\n                )}\r\n            </Grid>\r\n            {isLoading && (\r\n                <CircularProgress/>\r\n            )}    \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ImageInput"]},"metadata":{},"sourceType":"module"}