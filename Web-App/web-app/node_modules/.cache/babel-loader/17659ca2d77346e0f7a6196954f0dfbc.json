{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_virtualized\\\\_table\\\\TableCell.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  cell: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n});\n\nconst TableCell = props => {\n  _s();\n\n  const {\n    id,\n    hasCheckbox,\n    selectedItems,\n    value,\n    handleSelectedItems\n  } = props;\n  const useStyle = styles();\n  const selectedIndex = selectedItems.findIndex(x => x === id);\n  console.log(selectedIndex);\n  const handleSelect = React.useCallback(id => {\n    if (selectedItems.findIndex(x => x) === -1) {\n      const copy = selectedItems;\n      copy.push(id);\n      handleSelectedItems(copy);\n    } else {\n      selectedItems.splice(selectedItems.findIndex(x => x === id));\n      handleSelectedItems(selectedItems);\n    }\n  }, [selectedItems, handleSelectedItems]);\n  const cellComponent = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.cell,\n      container: true,\n      children: [hasCheckbox && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"delete\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: selectedItems.findIndex(x => x === id) !== -1,\n          onChange: handleSelect === null || handleSelect === void 0 ? void 0 : handleSelect.bind(null, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), !hasCheckbox && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: value,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }, [handleSelect, hasCheckbox, id, useStyle, selectedItems, value]);\n  return cellComponent;\n};\n\n_s(TableCell, \"VNiqW5MeJZrkgZniATYjcqTqVxE=\");\n\n_c = TableCell;\nexport default TableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCell\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableCell.tsx"],"names":["Checkbox","Grid","makeStyles","Tooltip","Typography","React","styles","cell","cursor","TableCell","props","id","hasCheckbox","selectedItems","value","handleSelectedItems","useStyle","selectedIndex","findIndex","x","console","log","handleSelect","useCallback","copy","push","splice","cellComponent","useMemo","bind"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,OAArC,EAA8CC,UAA9C,QAAgE,mBAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGJ,UAAU,CAAC;AACtBK,EAAAA,IAAI,EAAC;AACD,eAAU;AACNC,MAAAA,MAAM,EAAE;AADF;AADT;AADiB,CAAD,CAAzB;;AAiBA,MAAMC,SAA2B,GAAIC,KAAD,IAAW;AAAA;;AAE3C,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA,WAAL;AAAkBC,IAAAA,aAAlB;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA;AAAxC,MAA+DL,KAArE;AAEA,QAAMM,QAAQ,GAAGV,MAAM,EAAvB;AAEA,QAAMW,aAAa,GAAGJ,aAAa,CAACK,SAAd,CAAwBC,CAAC,IAAIA,CAAC,KAAKR,EAAnC,CAAtB;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AAEA,QAAMK,YAAY,GAAGjB,KAAK,CAACkB,WAAN,CAAmBZ,EAAD,IAAe;AAClD,QAAGE,aAAa,CAACK,SAAd,CAAwBC,CAAC,IAAIA,CAA7B,MAAoC,CAAC,CAAxC,EAA0C;AACtC,YAAMK,IAAI,GAAGX,aAAb;AACAW,MAAAA,IAAI,CAACC,IAAL,CAAUd,EAAV;AACAI,MAAAA,mBAAmB,CAACS,IAAD,CAAnB;AACH,KAJD,MAIK;AACDX,MAAAA,aAAa,CAACa,MAAd,CAAqBb,aAAa,CAACK,SAAd,CAAwBC,CAAC,IAAIA,CAAC,KAAKR,EAAnC,CAArB;AACAI,MAAAA,mBAAmB,CAACF,aAAD,CAAnB;AACH;AACJ,GAToB,EASnB,CAACA,aAAD,EAAgBE,mBAAhB,CATmB,CAArB;AAWA,QAAMY,aAAa,GAAGtB,KAAK,CAACuB,OAAN,CAAc,MAAK;AACrC,wBACI,QAAC,IAAD;AACI,MAAA,SAAS,EAAEZ,QAAQ,CAACT,IADxB;AAEI,MAAA,SAAS,MAFb;AAAA,iBAGKK,WAAW,iBACR,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEC,aAAa,CAACK,SAAd,CAAwBC,CAAC,IAAIA,CAAC,KAAKR,EAAnC,MAA2C,CAAC,CAA/D;AAAkE,UAAA,QAAQ,EAAEW,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEO,IAAd,CAAmB,IAAnB,EAAyBlB,EAAzB;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJR,EAQK,CAACC,WAAD,iBACD,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEE,KAAhB;AAAA,+BACI,QAAC,UAAD;AAAA,oBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBqB,EAiBpB,CAACQ,YAAD,EAAeV,WAAf,EAA4BD,EAA5B,EAAgCK,QAAhC,EAA0CH,aAA1C,EAAyDC,KAAzD,CAjBoB,CAAtB;AAmBA,SACIa,aADJ;AAGH,CA3CD;;GAAMlB,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst styles = makeStyles({\r\n    cell:{\r\n        '&:hover':{\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    id: number\r\n    hasCheckbox?: boolean\r\n    value: string\r\n    selectedItems: number[]\r\n    handleSelectedItems: (id: number[]) => void\r\n\r\n}\r\n\r\nconst TableCell: React.FC<IProps> = (props) => {\r\n\r\n    const {id, hasCheckbox, selectedItems, value, handleSelectedItems} = props\r\n\r\n    const useStyle = styles()\r\n\r\n    const selectedIndex = selectedItems.findIndex(x => x === id)\r\n\r\n    console.log(selectedIndex)\r\n\r\n    const handleSelect = React.useCallback((id: number) =>{\r\n        if(selectedItems.findIndex(x => x) === -1){\r\n            const copy = selectedItems\r\n            copy.push(id)\r\n            handleSelectedItems(copy)\r\n        }else{\r\n            selectedItems.splice(selectedItems.findIndex(x => x === id))\r\n            handleSelectedItems(selectedItems)\r\n        }\r\n    },[selectedItems, handleSelectedItems])\r\n\r\n    const cellComponent = React.useMemo(() =>{\r\n        return(\r\n            <Grid\r\n                className={useStyle.cell}\r\n                container>\r\n                {hasCheckbox && (\r\n                    <Tooltip title='delete'>\r\n                        <Checkbox checked={selectedItems.findIndex(x => x === id) !== -1} onChange={handleSelect?.bind(null, id)}/>\r\n                    </Tooltip>\r\n                )}\r\n                {!hasCheckbox &&(\r\n                <Tooltip title={value}>\r\n                    <Typography>{value}</Typography>\r\n                </Tooltip>\r\n                )}\r\n            </Grid>\r\n        )\r\n    },[handleSelect, hasCheckbox, id, useStyle, selectedItems, value])\r\n\r\n    return(\r\n        cellComponent\r\n    )\r\n}\r\n\r\nexport default TableCell"]},"metadata":{},"sourceType":"module"}