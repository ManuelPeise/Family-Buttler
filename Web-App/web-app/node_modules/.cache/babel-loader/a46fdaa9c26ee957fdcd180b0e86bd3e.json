{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuInputComponent from './MenueInputComponent';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { Grid, MenuItem, List, Button } from '@material-ui/core';\nimport IngrdientListtem from './IngredientListItem';\nimport IngrdientList from './IngredientList';\nimport SubHeaderBar from '../../_components/_appBars/subHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$description, _menu$howTo, _menu$menuType;\n\n  const {\n    selectedMenu,\n    isReadOnly\n  } = props;\n  const [menu, setMenu] = React.useState(selectedMenu);\n  React.useEffect(() => {\n    setMenu(selectedMenu);\n  }, [setMenu, selectedMenu]);\n  const original = React.useMemo(() => {\n    return selectedMenu;\n  }, [selectedMenu]);\n  const disabled = React.useMemo(() => {\n    return menu.name === selectedMenu.name && menu.description === selectedMenu.description && menu.howTo === selectedMenu.howTo && menu.menuType === selectedMenu.menuType;\n  }, [menu, selectedMenu]);\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: \"Select Menu Type\"\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '0',\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: MenuTypeEnum[MenuTypeEnum.Pasta]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '4',\n      value: 4,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: MenuTypeEnum[MenuTypeEnum.Meat]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '3',\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Other,\n      children: MenuTypeEnum[MenuTypeEnum.Other]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType]);\n  const handleAddIngredient = React.useCallback(() => {\n    const update = { ...menu\n    };\n    update.ingredients.push({});\n    setMenu(update);\n  }, [menu, setMenu]);\n  const ingredientList = React.useMemo(() => {\n    var _menu$ingredients, _menu$ingredients2;\n\n    return /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        width: '90%',\n        padding: '2vh',\n        marginTop: '1.5vh'\n      },\n      children: (menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) && (menu === null || menu === void 0 ? void 0 : (_menu$ingredients2 = menu.ingredients) === null || _menu$ingredients2 === void 0 ? void 0 : _menu$ingredients2.map((ingredient, index) => {\n        return /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: ingredient,\n          isReadOnly: isReadOnly\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }, [isReadOnly, menu]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    justifyContent: \"center\",\n    xs: 11,\n    xl: 11,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(SubHeaderBar, {\n        title: \"Info\",\n        variant: \"h5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Name\",\n        value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n        fullWidth: true,\n        isReadonly: isReadOnly,\n        onValueChanged: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Description\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onDescriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"How To\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onHowToChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Menu Type\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n        isReadonly: isReadOnly,\n        hasSelect: true,\n        selectElements: menuTypes,\n        onSelectChanged: onMenuTypeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(IngrdientList, {\n        ingedientList: ingredientList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), !isReadOnly && /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"flex-end\",\n      style: {\n        margin: '2vw'\n      },\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuContainer, \"gLFPNaMcv/SvOBHdMWiSXMDBVRA=\");\n\n_c = MenuContainer;\nexport default MenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuContainer.tsx"],"names":["React","MenuInputComponent","MenuTypeEnum","Grid","MenuItem","List","Button","IngrdientListtem","IngrdientList","SubHeaderBar","MenuContainer","props","selectedMenu","isReadOnly","menu","setMenu","useState","useEffect","original","useMemo","disabled","name","description","howTo","menuType","onTitleChanged","useCallback","data","onDescriptionChanged","onHowToChanged","onMenuTypeChanged","value","menuTypes","elements","push","None","Pasta","Meat","Other","handleAddIngredient","update","ingredients","ingredientList","width","padding","marginTop","length","map","ingredient","index","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport {IIngredient, IMenu} from '../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { Grid, MenuItem, List, Button } from '@material-ui/core'\r\nimport IngrdientListtem from './IngredientListItem'\r\nimport IngrdientList from './IngredientList'\r\nimport SubHeaderBar from '../../_components/_appBars/subHeader'\r\n\r\ninterface IProps{\r\n    selectedMenu: IMenu\r\n    isReadOnly: boolean\r\n}\r\n\r\nconst MenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {selectedMenu, isReadOnly} = props\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>(selectedMenu)\r\n    \r\n    React.useEffect(() =>{\r\n        setMenu(selectedMenu)\r\n    },[setMenu, selectedMenu])\r\n\r\n    const original = React.useMemo(() =>{\r\n        return selectedMenu\r\n    },[selectedMenu])\r\n\r\n    const disabled = React.useMemo(() =>{\r\n        return (menu.name === selectedMenu.name\r\n            && menu.description === selectedMenu.description\r\n            && menu.howTo === selectedMenu.howTo\r\n            && menu.menuType === selectedMenu.menuType)\r\n    },[menu, selectedMenu])\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key = {-1} id='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>Select Menu Type</MenuItem>)\r\n        elements.push(<MenuItem key = {0} id={'0'} value = {0} selected={menu.menuType === MenuTypeEnum.Pasta} >{MenuTypeEnum[MenuTypeEnum.Pasta]}</MenuItem>)\r\n        elements.push(<MenuItem key = {1} id={'4'} value={4} selected={menu.menuType === MenuTypeEnum.Meat} >{MenuTypeEnum[MenuTypeEnum.Meat]}</MenuItem>)\r\n        elements.push(<MenuItem key = {2} id={'3'} value={3} selected={menu.menuType === MenuTypeEnum.Other} >{MenuTypeEnum[MenuTypeEnum.Other]}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType])\r\n\r\n    const handleAddIngredient = React.useCallback(() => {\r\n        const update: IMenu = {...menu}\r\n        update.ingredients.push({} as IIngredient)\r\n        setMenu(update)\r\n\r\n    },[menu, setMenu])\r\n\r\n    const ingredientList = React.useMemo(() =>{\r\n        return(\r\n            <List style={{width: '90%', padding: '2vh', marginTop:'1.5vh'}}>\r\n                {menu?.ingredients?.length &&  menu?.ingredients?.map((ingredient, index) => {\r\n                    return(\r\n                        <IngrdientListtem key={index} ingredient={ingredient} isReadOnly = {isReadOnly}/>\r\n                    )\r\n                })}\r\n            </List>\r\n        )\r\n    },[isReadOnly, menu])\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            item\r\n            justifyContent='center'\r\n            xs={11}\r\n            xl={11}>\r\n            <Grid\r\n                container>\r\n                    <SubHeaderBar title='Info' variant='h5'/>\r\n                    <MenuInputComponent\r\n                                label='Name'\r\n                                value={menu?.name?? \"\"}\r\n                                fullWidth={true} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onTitleChanged} />\r\n                    <MenuInputComponent\r\n                                label='Description'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.description?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onDescriptionChanged}/>\r\n                    <MenuInputComponent\r\n                                label='How To'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.howTo?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onHowToChanged}/>\r\n                    <MenuInputComponent\r\n                                label='Menu Type'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu.menuType ?? -1} \r\n                                isReadonly={isReadOnly}\r\n                                hasSelect={true}\r\n                                selectElements={menuTypes}\r\n                                onSelectChanged={onMenuTypeChanged}/>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                    <IngrdientList ingedientList={ingredientList}/>\r\n            </Grid>\r\n            {!isReadOnly && (\r\n            <Grid\r\n                justifyContent='flex-end'\r\n                style={{margin: '2vw'}}\r\n                container>\r\n                    <Button disabled={disabled}>Cancel</Button>\r\n                    <Button disabled={disabled}>Save</Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuContainer  "]},"metadata":{},"sourceType":"module"}