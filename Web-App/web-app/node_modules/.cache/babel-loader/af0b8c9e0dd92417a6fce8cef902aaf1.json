{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenueInputComponent.tsx\";\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport InputTextField from '../../_components/_inputs/InputTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    width: '80vw'\n  },\n  item: {\n    width: '60vw',\n    padding: '1vw'\n  }\n});\n\nconst MenuInputComponent = props => {\n  const {\n    label,\n    value,\n    isReadonly,\n    img,\n    fullWidth,\n    isMultiRow,\n    maxRows,\n    hasSelect,\n    selectElements,\n    onSelectChanged,\n    onValueChanged\n  } = props;\n  const useStyle = styles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.root,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.item,\n      children: /*#__PURE__*/_jsxDEV(InputTextField, {\n        label: label !== null && label !== void 0 ? label : \"\",\n        value: value,\n        isReadOnly: isReadonly,\n        multiLine: isMultiRow,\n        maxRows: maxRows,\n        fullWidth: fullWidth,\n        hasSelect: hasSelect,\n        selectElements: selectElements,\n        onValueChange: onValueChanged,\n        onSelect: onSelectChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MenuInputComponent;\nexport default MenuInputComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuInputComponent\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenueInputComponent.tsx"],"names":["Grid","makeStyles","React","InputTextField","styles","root","display","justifyContent","flexDirection","width","item","padding","MenuInputComponent","props","label","value","isReadonly","img","fullWidth","isMultiRow","maxRows","hasSelect","selectElements","onSelectChanged","onValueChanged","useStyle"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;AAGA,MAAMC,MAAM,GAAGH,UAAU,CAAC;AACtBI,EAAAA,IAAI,EAAC;AACDC,IAAAA,OAAO,EAAE,MADR;AAEDC,IAAAA,cAAc,EAAE,QAFf;AAGDC,IAAAA,aAAa,EAAC,KAHb;AAIDC,IAAAA,KAAK,EAAC;AAJL,GADiB;AAOtBC,EAAAA,IAAI,EAAC;AACDD,IAAAA,KAAK,EAAC,MADL;AAEDE,IAAAA,OAAO,EAAE;AAFR;AAPiB,CAAD,CAAzB;;AA4BA,MAAMC,kBAAoC,GAAIC,KAAD,IAAU;AAEnD,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA,GAA3B;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA,UAA3C;AAAuDC,IAAAA,OAAvD;AAAgEC,IAAAA,SAAhE;AAA2EC,IAAAA,cAA3E;AAA2FC,IAAAA,eAA3F;AAA4GC,IAAAA;AAA5G,MAA8HX,KAApI;AAEA,QAAMY,QAAQ,GAAGrB,MAAM,EAAvB;AAEA,sBACI,QAAC,IAAD;AACI,IAAA,SAAS,EAAEqB,QAAQ,CAACpB,IADxB;AAEI,IAAA,SAAS,MAFb;AAAA,4BAGI,QAAC,IAAD;AACI,MAAA,SAAS,EAAEoB,QAAQ,CAACf,IADxB;AAAA,6BAGQ,QAAC,cAAD;AACI,QAAA,KAAK,EAAEI,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAU,EADnB;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,QAAA,UAAU,EAAEC,UAHhB;AAII,QAAA,SAAS,EAAEG,UAJf;AAKI,QAAA,OAAO,EAAEC,OALb;AAMI,QAAA,SAAS,EAAEF,SANf;AAOI,QAAA,SAAS,EAAEG,SAPf;AAQI,QAAA,cAAc,EAAEC,cARpB;AASI,QAAA,aAAa,EAAEE,cATnB;AAUI,QAAA,QAAQ,EAAED;AAVd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YAHJ,eAkBI,QAAC,IAAD;AACI,MAAA,IAAI;AADR;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/BD;;KAAMX,kB;AAiCN,eAAeA,kBAAf","sourcesContent":["import { Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport React from 'react'\r\nimport InputTextField from '../../_components/_inputs/InputTextField'\r\n\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection:'row',\r\n        width:'80vw'\r\n    },\r\n    item:{\r\n        width:'60vw',\r\n        padding: '1vw'\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    label?: string\r\n    value: string | number\r\n    img?: any\r\n    isReadonly: boolean\r\n    fullWidth?: boolean\r\n    isMultiRow?: boolean\r\n    maxRows?: number\r\n    hasSelect?: boolean\r\n    selectElements?: JSX.Element[]\r\n    onValueChanged?: (title: string) => void\r\n    onSelectChanged?: (value: number) => void\r\n\r\n}\r\n\r\nconst MenuInputComponent: React.FC<IProps> = (props) =>{\r\n\r\n    const {label, value, isReadonly, img, fullWidth, isMultiRow, maxRows, hasSelect, selectElements, onSelectChanged, onValueChanged} = props\r\n\r\n    const useStyle = styles()\r\n\r\n    return(\r\n        <Grid\r\n            className={useStyle.root}\r\n            container>\r\n            <Grid\r\n                className={useStyle.item}\r\n                >\r\n                    <InputTextField \r\n                        label={label?? \"\"}\r\n                        value={value}\r\n                        isReadOnly={isReadonly}\r\n                        multiLine={isMultiRow}\r\n                        maxRows={maxRows}\r\n                        fullWidth={fullWidth}\r\n                        hasSelect={hasSelect}\r\n                        selectElements={selectElements}\r\n                        onValueChange={onValueChanged} \r\n                        onSelect={onSelectChanged}/>\r\n            </Grid>\r\n            <Grid\r\n                item>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuInputComponent"]},"metadata":{},"sourceType":"module"}