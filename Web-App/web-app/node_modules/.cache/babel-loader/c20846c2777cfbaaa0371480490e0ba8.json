{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_appBars\\\\sideMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSideBarMenuConfig } from '../../_config/sideBarMenuConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {// marginTop: '.5vh'\n  },\n  menuItem: {\n    paddingLeft: '1vw',\n    fontSize: '2vh',\n    color: 'black',\n    '&:hover': {\n      cursor: 'pointer',\n      color: 'red'\n    },\n    '&:active': {\n      color: 'red'\n    }\n  },\n  subMenuItem: {\n    paddingLeft: '3vw',\n    color: 'black'\n  },\n  txt: {\n    fontSize: '2vh'\n  }\n});\n\nconst SideMenu = props => {\n  _s();\n\n  const {\n    open,\n    handleClose\n  } = props;\n  const useStyle = styles();\n  const sideBarConfig = useSideBarMenuConfig();\n  const sideBarMenu = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: sideBarConfig.map(config => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: useStyle.menuItem,\n            selected: config.expanded,\n            onClick: config.handleSelected.bind(null, config.key),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: config.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)\n          }, config.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), config.expanded && config.items.map(item => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: useStyle.subMenuItem,\n              selected: item.selected,\n              onClick: item.handleSelected.bind(null, item.key),\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: item.path,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }, [sideBarConfig]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.root,\n    container: true,\n    children: sideBarMenu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SideMenu, \"ZTqMzebhZiVMmt8eNUgQsYe4PMw=\", false, function () {\n  return [useSideBarMenuConfig];\n});\n\n_c = SideMenu;\nexport default SideMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideMenu\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_appBars/sideMenu.tsx"],"names":["React","Grid","List","ListItem","ListItemText","makeStyles","Link","useSideBarMenuConfig","styles","root","menuItem","paddingLeft","fontSize","color","cursor","subMenuItem","txt","SideMenu","props","open","handleClose","useStyle","sideBarConfig","sideBarMenu","useMemo","map","config","expanded","handleSelected","bind","key","title","items","item","selected","path","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles, Typography} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSideBarMenuConfig } from '../../_config/sideBarMenuConfig'\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        // marginTop: '.5vh'\r\n    },\r\n    menuItem:{\r\n        paddingLeft: '1vw',\r\n        fontSize: '2vh',\r\n        color: 'black',\r\n        '&:hover':{\r\n            cursor: 'pointer',\r\n            color: 'red'\r\n        },\r\n        '&:active':{\r\n            color: 'red'\r\n        }\r\n    },\r\n    subMenuItem:{\r\n        paddingLeft: '3vw',\r\n        color: 'black'\r\n    },\r\n    txt:{\r\n        fontSize: '2vh',\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    open: boolean\r\n    handleClose: () => void\r\n}\r\n\r\nconst SideMenu: React.FC<IProps> = (props) =>{\r\n\r\n    const {open, handleClose} = props\r\n    const useStyle = styles()\r\n\r\n    const sideBarConfig = useSideBarMenuConfig()\r\n\r\n    const sideBarMenu = React.useMemo(() =>{\r\n\r\n        return(\r\n            <List>\r\n                {sideBarConfig.map((config) =>{\r\n                    return(\r\n                        <Grid\r\n                            container>\r\n                            <ListItem key={config.key} className={useStyle.menuItem} selected = {config.expanded} onClick = {config.handleSelected.bind(null, config.key)}>\r\n                                <ListItemText>{config.title}</ListItemText>\r\n                            </ListItem>\r\n                            {config.expanded && (\r\n                                config.items.map((item) =>{\r\n                                    return(\r\n                                        <ListItem key={item.key} className={useStyle.subMenuItem} selected = {item.selected} onClick = {item.handleSelected.bind(null, item.key)}>\r\n                                            <Link to = {item.path}>\r\n                                                <ListItemText>{item.value}</ListItemText>\r\n                                            </Link>\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Grid>\r\n                    )\r\n                })}\r\n\r\n            </List>\r\n        )\r\n    },[sideBarConfig]) \r\n\r\n    return(\r\n        <Grid\r\n            className = {useStyle.root}\r\n            container>\r\n                {sideBarMenu}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}