{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\menuLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid, makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuList from './menuList';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport MenuContainer from './MenuContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginTop: '2vh'\n  }\n}));\n\nconst MenuLayout = props => {\n  _s();\n\n  const {\n    layoutConfig,\n    menuCollection,\n    selectedMenu,\n    handleSelectMenu\n  } = props;\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [menuType, setMenuType] = React.useState(MenuTypeEnum.None);\n  const useStyle = styles();\n  const onFilterTextChange = React.useCallback(filterText => {\n    setFilterText(filterText);\n  }, [setFilterText]);\n  const onMenuTypeChange = React.useCallback(menuType => {\n    setMenuType(menuType);\n  }, [setMenuType]);\n  const filteredMenuItems = React.useMemo(() => {\n    if (filterText === '' && menuType === MenuTypeEnum.None) {\n      return menuCollection;\n    }\n\n    const menusByFiltertext = menuCollection.filter(item => filterText.length > 0 ? item.name.toLocaleLowerCase().startsWith(filterText.toLocaleLowerCase()) : item);\n\n    if (menuType === MenuTypeEnum.None) {\n      return menusByFiltertext;\n    }\n\n    return menusByFiltertext.filter(item => item.menuType === menuType);\n  }, [menuCollection, filterText, menuType]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 1,\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(MenuFilter, {\n        filterText: filterText,\n        selectedMenuType: menuType,\n        onFilterTextChange: onFilterTextChange,\n        onMenuTypeChange: onMenuTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        alignContent: \"space-around\",\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: useStyle.paper,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: useStyle.item,\n            item: true,\n            xs: 12,\n            lg: 12,\n            xl: 3,\n            children: /*#__PURE__*/_jsxDEV(MenuList, {\n              menuCollection: filteredMenuItems,\n              selectedMenuId: layoutConfig.selectedMenuId,\n              handleSelectMenu: handleSelectMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: useStyle.paper,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: useStyle.item,\n            item: true,\n            xs: 12,\n            xl: 9,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              children: /*#__PURE__*/_jsxDEV(MenuContainer, {\n                isReadOnly: layoutConfig.isReadOnly,\n                selectedMenu: selectedMenu !== null && selectedMenu !== void 0 ? selectedMenu : {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuLayout, \"Zhs+qawnDk5T6x9CFDrL2gRqwwI=\");\n\n_c = MenuLayout;\nexport default MenuLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLayout\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/menuLayout.tsx"],"names":["Container","Grid","makeStyles","Paper","React","MenuFilter","MenuList","MenuTypeEnum","MenuContainer","styles","theme","item","display","justifyContent","paper","marginTop","MenuLayout","props","layoutConfig","menuCollection","selectedMenu","handleSelectMenu","filterText","setFilterText","useState","menuType","setMenuType","None","useStyle","onFilterTextChange","useCallback","onMenuTypeChange","filteredMenuItems","useMemo","menusByFiltertext","filter","length","name","toLocaleLowerCase","startsWith","selectedMenuId","isReadOnly"],"mappings":"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","sourcesContent":["import { Container, Grid, makeStyles, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuList from './menuList'\r\nimport {MenuTypeEnum} from '../../_enums/menuEnums'\r\nimport MenuContainer from './MenuContainer'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   selectedMenu: IMenu\r\n   menuCollection: IMenu[]\r\n   handleSelectMenu: (id: number) => void\r\n}\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    item:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    paper:{\r\n        marginTop:'2vh'\r\n    }\r\n    \r\n}))\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, selectedMenu, handleSelectMenu} = props\r\n    const [filterText, setFilterText] = React.useState<string>(\"\")\r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n    \r\n    const useStyle = styles();\r\n\r\n    const onFilterTextChange = React.useCallback((filterText: string) =>{\r\n        setFilterText(filterText)\r\n    }, [setFilterText])\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filteredMenuItems = React.useMemo(() =>{\r\n        \r\n        if(filterText === '' && menuType === MenuTypeEnum.None){\r\n            return menuCollection\r\n        }\r\n\r\n        const menusByFiltertext = menuCollection.filter(item => filterText.length > 0 ? item.name.toLocaleLowerCase().startsWith(filterText.toLocaleLowerCase()) : item)\r\n        \r\n        if(menuType === MenuTypeEnum.None){\r\n            return menusByFiltertext\r\n        }\r\n\r\n        return menusByFiltertext.filter(item => item.menuType === menuType)\r\n\r\n    },[menuCollection, filterText, menuType])\r\n\r\n    return(\r\n        <Container maxWidth='xl'>\r\n            <Grid\r\n                container\r\n                direction='row'\r\n                spacing={1}\r\n                justifyContent='center'>\r\n                \r\n                    <MenuFilter \r\n                        filterText={filterText}\r\n                        selectedMenuType={menuType}\r\n                        onFilterTextChange={onFilterTextChange}\r\n                        onMenuTypeChange={onMenuTypeChange}/>\r\n                    <Grid\r\n                        container\r\n                        spacing={1}\r\n                        alignContent='space-around'\r\n                        direction='row'>\r\n                        <Paper className={useStyle.paper}>\r\n                            <Grid\r\n                                className={useStyle.item}\r\n                                item\r\n                                xs={12}\r\n                                lg={12}\r\n                                xl={3}>\r\n                                {/* <Paper> */}\r\n                                    <MenuList \r\n                                        menuCollection={filteredMenuItems} \r\n                                        selectedMenuId={layoutConfig.selectedMenuId} \r\n                                        handleSelectMenu={handleSelectMenu}/>\r\n                                {/* </Paper> */}\r\n                            </Grid>\r\n                        </Paper>\r\n                        <Paper className={useStyle.paper}>\r\n                            <Grid\r\n                                className={useStyle.item}\r\n                                item\r\n                                xs={12}\r\n                                xl={9}>\r\n                                <Paper>\r\n                                    <MenuContainer isReadOnly={layoutConfig.isReadOnly} selectedMenu={selectedMenu ?? {} as IMenu}/>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MenuLayout\r\n"]},"metadata":{},"sourceType":"module"}