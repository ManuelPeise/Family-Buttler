{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\menuLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuList from './menuList';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '98vw',\n    padding: '1vw'\n  },\n  contextContainer: {\n    paddingTop: '1vh'\n  }\n}));\n\nconst MenuLayout = props => {\n  _s();\n\n  const {\n    layoutConfig,\n    menuCollection,\n    handleSelectMenu\n  } = props;\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [menuType, setMenuType] = React.useState(MenuTypeEnum.None);\n  const useStyle = styles();\n  const onFilterTextChange = React.useCallback(filterText => {\n    setFilterText(filterText);\n  }, [setFilterText]);\n  const onMenuTypeChange = React.useCallback(menuType => {\n    setMenuType(menuType);\n  }, [setMenuType]);\n  const filteredMenuItems = React.useMemo(() => {\n    console.log(menuCollection);\n\n    if (filterText === '' && menuType === MenuTypeEnum.None) {\n      return menuCollection;\n    }\n\n    const menusByType = menuCollection.filter(item => item.menuType === menuType);\n    return menusByType.filter(item => filterText.length > 0 ? item.name.startsWith(filterText) : item);\n  }, [menuCollection, filterText, menuType]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.root,\n    container: true,\n    children: [layoutConfig.hasFilter && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(MenuFilter, {\n        filterText: filterText,\n        selectedMenuType: menuType,\n        onFilterTextChange: onFilterTextChange,\n        onMenuTypeChange: onMenuTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.contextContainer,\n      container: true,\n      children: [layoutConfig.hasMenuList && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(MenuList, {\n          menuCollection: filteredMenuItems,\n          selectedMenuId: layoutConfig.selectedMenuId,\n          handleSelectMenu: handleSelectMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: \"Context\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuLayout, \"Zhs+qawnDk5T6x9CFDrL2gRqwwI=\");\n\n_c = MenuLayout;\nexport default MenuLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLayout\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/menuLayout.tsx"],"names":["Grid","makeStyles","React","MenuFilter","MenuList","MenuTypeEnum","styles","theme","root","display","justifyContent","width","padding","contextContainer","paddingTop","MenuLayout","props","layoutConfig","menuCollection","handleSelectMenu","filterText","setFilterText","useState","menuType","setMenuType","None","useStyle","onFilterTextChange","useCallback","onMenuTypeChange","filteredMenuItems","useMemo","console","log","menusByType","filter","item","length","name","startsWith","hasFilter","hasMenuList","selectedMenuId"],"mappings":"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","sourcesContent":["import { Grid, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuList from './menuList'\r\nimport {MenuTypeEnum} from '../../_enums/menuEnums'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   menuCollection: IMenu[]\r\n   handleSelectMenu: (id: number) => void\r\n}\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    root:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '98vw',\r\n        padding:'1vw'      \r\n    },\r\n    contextContainer:{\r\n        paddingTop: '1vh'\r\n    }\r\n}))\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, handleSelectMenu} = props\r\n    const [filterText, setFilterText] = React.useState<string>(\"\")\r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n    \r\n    const useStyle = styles();\r\n\r\n    const onFilterTextChange = React.useCallback((filterText: string) =>{\r\n        setFilterText(filterText)\r\n    }, [setFilterText])\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filteredMenuItems = React.useMemo(() =>{\r\n        \r\n        console.log(menuCollection)\r\n        if(filterText === '' && menuType === MenuTypeEnum.None){\r\n            return menuCollection\r\n        }\r\n\r\n        const menusByType = menuCollection.filter(item => item.menuType === menuType)\r\n\r\n        return menusByType.filter(item => filterText.length > 0 ? item.name.startsWith(filterText) : item)\r\n\r\n    },[menuCollection, filterText, menuType])\r\n\r\n    return(\r\n        <Grid\r\n            className={useStyle.root}\r\n            container>\r\n            {layoutConfig.hasFilter &&(\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                    <MenuFilter \r\n                        filterText={filterText}\r\n                        selectedMenuType={menuType}\r\n                        onFilterTextChange={onFilterTextChange}\r\n                        onMenuTypeChange={onMenuTypeChange}/>\r\n            </Grid>\r\n            )}\r\n            <Grid\r\n                className={useStyle.contextContainer}\r\n                container>\r\n                {layoutConfig.hasMenuList && (\r\n                <Grid item>\r\n                    <MenuList \r\n                        menuCollection={filteredMenuItems} \r\n                        selectedMenuId={layoutConfig.selectedMenuId} \r\n                        handleSelectMenu={handleSelectMenu}/>\r\n                </Grid>\r\n                )}\r\n                <Grid item>\r\n                    Context\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuLayout"]},"metadata":{},"sourceType":"module"}