{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_virtualized\\\\_table\\\\HeaderCell.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  col: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    fontSize: '1.5rem',\n    padding: '1rem'\n  },\n  cell: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n});\n\nconst HeaderCell = props => {\n  _s();\n\n  const {\n    value,\n    hasCheckbox,\n    allSelected,\n    handleSelectAll\n  } = props;\n  const useStyle = styles();\n  const [selected, setSelected] = React.useState(false);\n  const handleSelect = React.useCallback(() => {\n    setSelected(prev => !prev);\n    handleSelectAll();\n  }, [handleSelectAll]);\n  const cellComponent = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.cell,\n      container: true,\n      children: [hasCheckbox && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"delete all\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: selected,\n          indeterminate: selected && !allSelected,\n          onChange: handleSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), !hasCheckbox && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: value,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }, [allSelected, hasCheckbox, selected, useStyle, value, handleSelect]);\n  return cellComponent;\n};\n\n_s(HeaderCell, \"zLq1WBAvUJS9UA5mvotZgB/l17k=\");\n\n_c = HeaderCell;\nexport default HeaderCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCell\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/HeaderCell.tsx"],"names":["Checkbox","Grid","makeStyles","Tooltip","Typography","React","styles","col","display","flexDirection","justifyContent","fontSize","padding","cell","cursor","HeaderCell","props","value","hasCheckbox","allSelected","handleSelectAll","useStyle","selected","setSelected","useState","handleSelect","useCallback","prev","cellComponent","useMemo"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,OAArC,EAA8CC,UAA9C,QAAgE,mBAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGJ,UAAU,CAAC;AACtBK,EAAAA,GAAG,EAAC;AACAC,IAAAA,OAAO,EAAC,MADR;AAEAC,IAAAA,aAAa,EAAC,KAFd;AAGAC,IAAAA,cAAc,EAAC,eAHf;AAIAC,IAAAA,QAAQ,EAAE,QAJV;AAKAC,IAAAA,OAAO,EAAE;AALT,GADkB;AAStBC,EAAAA,IAAI,EAAC;AACD,eAAU;AACNC,MAAAA,MAAM,EAAE;AADF;AADT;AATiB,CAAD,CAAzB;;AAuBA,MAAMC,UAA4B,GAAIC,KAAD,IAAU;AAAA;;AAE3C,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA;AAAlC,MAAqDJ,KAA3D;AACA,QAAMK,QAAQ,GAAGf,MAAM,EAAvB;AAEA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAhC;AAEA,QAAMC,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CAAkB,MAAK;AACxCH,IAAAA,WAAW,CAACI,IAAI,IAAI,CAACA,IAAV,CAAX;AACAP,IAAAA,eAAe;AAClB,GAHoB,EAGnB,CAACA,eAAD,CAHmB,CAArB;AAKA,QAAMQ,aAAa,GAAGvB,KAAK,CAACwB,OAAN,CAAc,MAAK;AACrC,wBACI,QAAC,IAAD;AACI,MAAA,SAAS,EAAER,QAAQ,CAACR,IADxB;AAEI,MAAA,SAAS,MAFb;AAAA,iBAGHK,WAAW,iBACR,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEI,QAAnB;AAA6B,UAAA,aAAa,EAAEA,QAAQ,IAAI,CAACH,WAAzD;AAAsE,UAAA,QAAQ,EAAEM;AAAhF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA,EAQH,CAACP,WAAD,iBACD,QAAC,OAAD;AAAS,QAAA,KAAK,EAAED,KAAhB;AAAA,+BACI,QAAC,UAAD;AAAA,oBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATI;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBqB,EAgBpB,CAACE,WAAD,EAAcD,WAAd,EAA2BI,QAA3B,EAAqCD,QAArC,EAA+CJ,KAA/C,EAAsDQ,YAAtD,CAhBoB,CAAtB;AAkBA,SAAOG,aAAP;AACH,CA/BD;;GAAMb,U;;KAAAA,U;AAiCN,eAAeA,UAAf","sourcesContent":["import { Checkbox, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst styles = makeStyles({\r\n    col:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        fontSize: '1.5rem',\r\n        padding: '1rem',\r\n        \r\n    },\r\n    cell:{\r\n        '&:hover':{\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    value: string\r\n    allSelected: boolean\r\n    hasCheckbox: boolean\r\n    handleSelectAll: () => void\r\n}\r\n\r\nconst HeaderCell: React.FC<IProps> = (props) =>{\r\n\r\n    const {value, hasCheckbox, allSelected, handleSelectAll} = props\r\n    const useStyle = styles()\r\n\r\n    const [selected, setSelected] = React.useState(false)\r\n\r\n    const handleSelect = React.useCallback(() =>{\r\n        setSelected(prev => !prev)\r\n        handleSelectAll()\r\n    },[handleSelectAll])\r\n\r\n    const cellComponent = React.useMemo(() =>{\r\n        return(\r\n            <Grid\r\n                className={useStyle.cell}\r\n                container>\r\n        {hasCheckbox && (\r\n            <Tooltip title='delete all'>\r\n                <Checkbox checked={selected} indeterminate={selected && !allSelected} onChange={handleSelect}/>\r\n            </Tooltip>\r\n        )}\r\n        {!hasCheckbox &&(\r\n        <Tooltip title={value}>\r\n            <Typography>{value}</Typography>\r\n        </Tooltip>\r\n        )}\r\n    </Grid>)\r\n    },[allSelected, hasCheckbox, selected, useStyle, value, handleSelect])\r\n\r\n    return(cellComponent)\r\n}\r\n\r\nexport default HeaderCell"]},"metadata":{},"sourceType":"module"}