{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { LogMessageType } from '../../../_enums/LogmessageType';\nimport useApi from '../../../_hooks/useApi';\nimport LoggingPageContainer from './loggingPageContainer';\nimport apiConfig from '../../../_config/apiConfig.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingDataservice = props => {\n  _s();\n\n  const logDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.administration.logging,\n    params: null\n  });\n  const [selectedItems, setSelectedItems] = React.useState([]);\n  const handleSelectedItemsChanged = React.useCallback(items => {\n    setSelectedItems(items);\n  }, []);\n  const logmessages = React.useMemo(() => {\n    return [{\n      id: 1,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 1',\n      exception: \"\"\n    }, {\n      id: 2,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 2',\n      exception: \"\"\n    }, {\n      id: 3,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 3',\n      exception: \"\"\n    }, {\n      id: 4,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 4',\n      exception: \"\"\n    }, {\n      id: 5,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 5',\n      exception: \"\"\n    }, {\n      id: 6,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 6',\n      exception: \"\"\n    }, {\n      id: 7,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 7',\n      exception: \"\"\n    }, {\n      id: 8,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 8',\n      exception: \"\"\n    }, {\n      id: 9,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 1',\n      exception: \"\"\n    }, {\n      id: 10,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 2',\n      exception: \"\"\n    }, {\n      id: 11,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 3',\n      exception: \"\"\n    }, {\n      id: 12,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 4',\n      exception: \"\"\n    }, {\n      id: 13,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 5',\n      exception: \"\"\n    }, {\n      id: 14,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 6',\n      exception: \"\"\n    }, {\n      id: 15,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 7',\n      exception: \"\"\n    }, {\n      id: 16,\n      date: new Date(),\n      logMessageType: LogMessageType.Error,\n      message: 'Any Error - 8',\n      exception: \"\"\n    }];\n  }, []);\n  console.log(logDataService.items);\n  return /*#__PURE__*/_jsxDEV(LoggingPageContainer, {\n    logmessages: logDataService.items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggingDataservice, \"ltKZPlUhvZHRYa2UL9ZyHevjHcQ=\", false, function () {\n  return [useApi];\n});\n\n_c = LoggingDataservice;\nexport default LoggingDataservice;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingDataservice\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingDataService.tsx"],"names":["React","LogMessageType","useApi","LoggingPageContainer","apiConfig","LoggingDataservice","props","logDataService","serviceUri","baseUrl","administration","logging","params","selectedItems","setSelectedItems","useState","handleSelectedItemsChanged","useCallback","items","logmessages","useMemo","id","date","Date","logMessageType","Error","message","exception","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;AAMA,MAAMC,kBAAoC,GAAIC,KAAD,IAAU;AAAA;;AAEnD,QAAMC,cAAc,GAAGL,MAAM,CAAc;AACvCM,IAAAA,UAAU,EAAEJ,SAAS,CAACK,OAAV,GAAoBL,SAAS,CAACM,cAAV,CAAyBC,OADlB;AAEvCC,IAAAA,MAAM,EAAE;AAF+B,GAAd,CAA7B;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,KAAK,CAACe,QAAN,CAAyB,EAAzB,CAA1C;AAEA,QAAMC,0BAA0B,GAAGhB,KAAK,CAACiB,WAAN,CAAmBC,KAAD,IAAoB;AACrEJ,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACH,GAFkC,EAEjC,EAFiC,CAAnC;AAIA,QAAMC,WAAW,GAAGnB,KAAK,CAACoB,OAAN,CAAc,MAAoB;AAClD,WAAM,CACF;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KADE,EAEF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KAFE,EAGF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KAHE,EAIF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KAJE,EAKF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KALE,EAMF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KANE,EAOF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KAPE,EAQF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KARE,EASF;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAAzD;AAAgEC,MAAAA,OAAO,EAAE,eAAzE;AAA0FC,MAAAA,SAAS,EAAC;AAApG,KATE,EAUF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAVE,EAWF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAXE,EAYF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAZE,EAaF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAbE,EAcF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAdE,EAeF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAfE,EAgBF;AAACN,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAf;AAA2BC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,KAA1D;AAAiEC,MAAAA,OAAO,EAAE,eAA1E;AAA2FC,MAAAA,SAAS,EAAC;AAArG,KAhBE,CAAN;AAkBH,GAnBmB,EAmBlB,EAnBkB,CAApB;AAqBAC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,cAAc,CAACW,KAA3B;AACA,sBACI,QAAC,oBAAD;AACI,IAAA,WAAW,EAAEX,cAAc,CAACW;AADhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAvCD;;GAAMb,kB;UAEqBH,M;;;KAFrBG,kB;AAyCN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\r\nimport { LogMessageType } from '../../../_enums/LogmessageType'\r\nimport useApi from '../../../_hooks/useApi'\r\nimport { ILogmessage } from './interfaces/ILogmessage'\r\nimport LoggingPageContainer from './loggingPageContainer'\r\nimport apiConfig from '../../../_config/apiConfig.json'\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nconst LoggingDataservice: React.FC<IProps> = (props) =>{\r\n    \r\n    const logDataService = useApi<ILogmessage>({\r\n        serviceUri: apiConfig.baseUrl + apiConfig.administration.logging,\r\n        params: null\r\n    })\r\n\r\n    const [selectedItems, setSelectedItems] = React.useState<number[]>([])\r\n\r\n    const handleSelectedItemsChanged = React.useCallback((items: number[]) =>{\r\n        setSelectedItems(items)\r\n    },[])\r\n\r\n    const logmessages = React.useMemo((): ILogmessage[] =>{\r\n        return[\r\n            {id: 1, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 1', exception:\"\"},\r\n            {id: 2, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 2', exception:\"\"},\r\n            {id: 3, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 3', exception:\"\"},\r\n            {id: 4, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 4', exception:\"\"},\r\n            {id: 5, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 5', exception:\"\"},\r\n            {id: 6, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 6', exception:\"\"},\r\n            {id: 7, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 7', exception:\"\"},\r\n            {id: 8, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 8', exception:\"\"},\r\n            {id: 9, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 1', exception:\"\"},\r\n            {id: 10, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 2', exception:\"\"},\r\n            {id: 11, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 3', exception:\"\"},\r\n            {id: 12, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 4', exception:\"\"},\r\n            {id: 13, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 5', exception:\"\"},\r\n            {id: 14, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 6', exception:\"\"},\r\n            {id: 15, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 7', exception:\"\"},\r\n            {id: 16, date: new Date(), logMessageType: LogMessageType.Error, message: 'Any Error - 8', exception:\"\"}\r\n        ]\r\n    },[])\r\n\r\n    console.log(logDataService.items)\r\n    return(\r\n        <LoggingPageContainer\r\n            logmessages={logDataService.items}/>\r\n    )\r\n}\r\n\r\nexport default LoggingDataservice\r\n"]},"metadata":{},"sourceType":"module"}