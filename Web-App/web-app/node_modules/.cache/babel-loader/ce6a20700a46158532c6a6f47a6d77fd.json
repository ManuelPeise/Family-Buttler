{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\_add\\\\AddMenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PageBodyLayout from '../../../_layout/pageBodyLayout';\nimport MenuInputComponent from '../MenueInputComponent';\nimport { MenuTypeEnum } from '../../../_enums/menuEnums';\nimport { Grid, List, makeStyles, MenuItem } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row'\n  }\n});\n\nconst AddMenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$description, _menu$howTo, _menu$menuType;\n\n  const [menu, setMenu] = React.useState({});\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: \"Select Menu Type\"\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '0',\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: MenuTypeEnum[MenuTypeEnum.Pasta]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '4',\n      value: 4,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: MenuTypeEnum[MenuTypeEnum.Meat]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '3',\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Other,\n      children: MenuTypeEnum[MenuTypeEnum.Other]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType]);\n  return /*#__PURE__*/_jsxDEV(PageBodyLayout, {\n    hasCancelBtn: true,\n    hasSaveBtn: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: \"dddddddddddd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"center\",\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Name\",\n        value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n        isReadonly: false,\n        onValueChanged: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Description\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n        isReadonly: false,\n        onValueChanged: onDescriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"How To\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n        isReadonly: false,\n        onValueChanged: onHowToChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Menu Type\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n        isReadonly: false,\n        hasSelect: true,\n        selectElements: menuTypes,\n        onSelectChanged: onMenuTypeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddMenuContainer, \"Xys+beIF/HcqctEEMX1g56WfRio=\");\n\n_c = AddMenuContainer;\nexport default AddMenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/_add/AddMenuContainer.tsx"],"names":["React","PageBodyLayout","MenuInputComponent","MenuTypeEnum","Grid","List","makeStyles","MenuItem","styles","root","display","flexDirection","AddMenuContainer","props","menu","setMenu","useState","onTitleChanged","useCallback","name","data","onDescriptionChanged","description","onHowToChanged","howTo","onMenuTypeChanged","value","menuType","menuTypes","useMemo","elements","push","None","Pasta","Meat","Other"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PageBodyLayout from '../../../_layout/pageBodyLayout'\r\nimport MenuInputComponent from '../MenueInputComponent'\r\nimport {IMenu} from '../../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../../_enums/menuEnums'\r\nimport { Grid, List, makeStyles, MenuItem } from '@material-ui/core'\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    }\r\n})\r\n\r\nconst AddMenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>({} as IMenu)\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key = {-1} id='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>Select Menu Type</MenuItem>)\r\n        elements.push(<MenuItem key = {0} id={'0'} value = {0} selected={menu.menuType === MenuTypeEnum.Pasta} >{MenuTypeEnum[MenuTypeEnum.Pasta]}</MenuItem>)\r\n        elements.push(<MenuItem key = {1} id={'4'} value={4} selected={menu.menuType === MenuTypeEnum.Meat} >{MenuTypeEnum[MenuTypeEnum.Meat]}</MenuItem>)\r\n        elements.push(<MenuItem key = {2} id={'3'} value={3} selected={menu.menuType === MenuTypeEnum.Other} >{MenuTypeEnum[MenuTypeEnum.Other]}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType])\r\n\r\n    return(\r\n        <PageBodyLayout\r\n            hasCancelBtn = {true}\r\n            hasSaveBtn = {true}>\r\n                <Grid\r\n                    item\r\n                    container>\r\n                        dddddddddddd\r\n                </Grid>\r\n                <Grid\r\n                    justifyContent='center'\r\n                    item\r\n                    container>\r\n                    <MenuInputComponent\r\n                            label='Name'\r\n                            value={menu?.name?? \"\"} \r\n                            isReadonly={false}\r\n                            onValueChanged={onTitleChanged} />\r\n                        <MenuInputComponent\r\n                            label='Description'\r\n                            isMultiRow={true}\r\n                            maxRows={5}\r\n                            fullWidth={true} \r\n                            value={menu?.description?? \"\"} \r\n                            isReadonly={false}\r\n                            onValueChanged={onDescriptionChanged}/>\r\n                        <MenuInputComponent\r\n                            label='How To'\r\n                            isMultiRow={true}\r\n                            maxRows={5}\r\n                            fullWidth={true} \r\n                            value={menu?.howTo?? \"\"} \r\n                            isReadonly={false}\r\n                            onValueChanged={onHowToChanged}/>\r\n                        <MenuInputComponent\r\n                            label='Menu Type'\r\n                            isMultiRow={true}\r\n                            maxRows={5}\r\n                            fullWidth={true} \r\n                            value={menu.menuType ?? -1} \r\n                            isReadonly={false}\r\n                            hasSelect={true}\r\n                            selectElements={menuTypes}\r\n                            onSelectChanged={onMenuTypeChanged}/>\r\n                        <List>\r\n\r\n                        </List>\r\n                </Grid>\r\n        </PageBodyLayout>\r\n    )\r\n}\r\n\r\nexport default AddMenuContainer  "]},"metadata":{},"sourceType":"module"}