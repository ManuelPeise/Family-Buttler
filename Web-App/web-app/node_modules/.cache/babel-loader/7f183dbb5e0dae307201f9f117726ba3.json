{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuInputComponent from './MenueInputComponent';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { Grid, makeStyles, MenuItem, List } from '@material-ui/core';\nimport IngrdientListtem from './IngredientListItem';\nimport MenuListSubHeader from './MenuListSubHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: 'auto',\n    height: 'auto',\n    maxWidth: '82vw',\n    overflow: 'hidden',\n    [theme.breakpoints.down(900)]: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '60vw',\n      marginTop: '5vh'\n    }\n  },\n  menuContainer: {\n    maxHeight: '60vh',\n    width: '60vw',\n    [theme.breakpoints.down(900)]: {\n      width: '60vw',\n      marginTop: '2vh'\n    }\n  },\n  ingredientContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '3vh',\n    maxHeight: '40Vh',\n    width: '65vw',\n    overflow: 'scroll'\n  },\n  ingredientList: {\n    width: '60vw'\n  },\n  actionContainer: {}\n}));\n\nconst MenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$description, _menu$howTo, _menu$menuType;\n\n  const {\n    selectedMenu,\n    isReadOnly\n  } = props;\n  const [menu, setMenu] = React.useState(selectedMenu);\n  React.useEffect(() => {\n    setMenu(selectedMenu);\n  }, [setMenu, selectedMenu]);\n  const original = React.useMemo(() => {\n    return menu;\n  }, [menu]);\n  const useStyle = styles();\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: \"Select Menu Type\"\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '0',\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: MenuTypeEnum[MenuTypeEnum.Pasta]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '4',\n      value: 4,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: MenuTypeEnum[MenuTypeEnum.Meat]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '3',\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Other,\n      children: MenuTypeEnum[MenuTypeEnum.Other]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType]);\n  const handleAddIngredient = React.useCallback(() => {\n    console.log('add...');\n    menu.ingredients.push({});\n  }, [menu.ingredients]);\n  const ingredientList = React.useMemo(() => {\n    var _menu$ingredients;\n\n    return /*#__PURE__*/_jsxDEV(List, {\n      subheader: /*#__PURE__*/_jsxDEV(MenuListSubHeader, {\n        title: \"Zutaten\",\n        isReadOnly: isReadOnly,\n        handleAddIngredient: handleAddIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 30\n      }, this),\n      className: useStyle.ingredientList,\n      children: menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.map((ingredient, index) => {\n        return /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: ingredient,\n          isReadOnly: isReadOnly\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }, [isReadOnly, menu, useStyle, handleAddIngredient]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.rootContainer,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.menuContainer,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Name\",\n        value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n        fullWidth: true,\n        isReadonly: isReadOnly,\n        onValueChanged: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Description\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onDescriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"How To\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onHowToChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Menu Type\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n        isReadonly: isReadOnly,\n        hasSelect: true,\n        selectElements: menuTypes,\n        onSelectChanged: onMenuTypeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.ingredientContainer,\n      container: true,\n      children: ingredientList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: useStyle.actionContainer,\n      container: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this) //     container>\n  //     <Paper\n  //         className={useStyle.root}>\n  //         <Grid\n  //             justifyContent='center'\n  //             item\n  //             container>\n  //             <MenuInputComponent\n  //                     label='Name'\n  //                     value={menu?.name?? \"\"} \n  //                     isReadonly={false}\n  //                     onValueChanged={onTitleChanged} />\n  //                 <MenuInputComponent\n  //                     label='Description'\n  //                     isMultiRow={true}\n  //                     maxRows={5}\n  //                     fullWidth={true} \n  //                     value={menu?.description?? \"\"} \n  //                     isReadonly={false}\n  //                     onValueChanged={onDescriptionChanged}/>\n  //                 <MenuInputComponent\n  //                     label='How To'\n  //                     isMultiRow={true}\n  //                     maxRows={5}\n  //                     fullWidth={true} \n  //                     value={menu?.howTo?? \"\"} \n  //                     isReadonly={false}\n  //                     onValueChanged={onHowToChanged}/>\n  //                 <MenuInputComponent\n  //                     label='Menu Type'\n  //                     isMultiRow={true}\n  //                     maxRows={5}\n  //                     fullWidth={true} \n  //                     value={menu.menuType ?? -1} \n  //                     isReadonly={false}\n  //                     hasSelect={true}\n  //                     selectElements={menuTypes}\n  //                     onSelectChanged={onMenuTypeChanged}/>\n  //         </Grid>\n  //                 {menu?.ingredients?.length && (\n  //                     <List>\n  //                         {menu.ingredients.map((ing, index) =>{\n  //                             return(\n  //                                 <IngrdientListtem key = {index} ingredient={ing} isReadOnly={false}/>\n  //                             )\n  //                         })}\n  //                     </List>\n  //                 )}\n  //                 {!menu?.ingredients?.length &&(\n  //                     <List subheader={<ListSubheader>Test</ListSubheader>} style={{ maxWidth:'60vw' }}>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\n  //                     </List>\n  //                 )}\n  //     </Paper>\n  // </Grid>\n  ;\n};\n\n_s(MenuContainer, \"jN3udR/1LR4PRd1rktbRkO/pncc=\");\n\n_c = MenuContainer;\nexport default MenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuContainer.tsx"],"names":["React","MenuInputComponent","MenuTypeEnum","Grid","makeStyles","MenuItem","List","IngrdientListtem","MenuListSubHeader","styles","theme","rootContainer","display","flexDirection","width","height","maxWidth","overflow","breakpoints","down","justifyContent","marginTop","menuContainer","maxHeight","ingredientContainer","ingredientList","actionContainer","MenuContainer","props","selectedMenu","isReadOnly","menu","setMenu","useState","useEffect","original","useMemo","useStyle","onTitleChanged","useCallback","name","data","onDescriptionChanged","description","onHowToChanged","howTo","onMenuTypeChanged","value","menuType","menuTypes","elements","push","None","Pasta","Meat","Other","handleAddIngredient","console","log","ingredients","map","ingredient","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport {IIngredient, IMenu} from '../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { Grid, makeStyles, MenuItem, List, Typography } from '@material-ui/core'\r\nimport IngrdientListtem from './IngredientListItem'\r\nimport MenuListSubHeader from './MenuListSubHeader'\r\n\r\ninterface IProps{\r\n    selectedMenu: IMenu\r\n    isReadOnly: boolean\r\n}\r\n\r\nconst styles = makeStyles((theme) =>({\r\n    rootContainer:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width:'auto',\r\n        height:'auto',\r\n        maxWidth: '82vw',\r\n        overflow:'hidden',\r\n        [theme.breakpoints.down(900)]:{\r\n            display: 'flex',\r\n            justifyContent:'center',\r\n            width: '60vw',\r\n            marginTop: '5vh'\r\n        }\r\n    },\r\n    menuContainer:{\r\n        maxHeight: '60vh',\r\n        width: '60vw',\r\n        [theme.breakpoints.down(900)]:{\r\n            width: '60vw',\r\n            marginTop: '2vh'\r\n        }\r\n    },\r\n    ingredientContainer:{\r\n        display:'flex',\r\n        justifyContent:'flex-end',\r\n        marginTop:'3vh',\r\n        maxHeight:'40Vh',\r\n        width: '65vw',\r\n        overflow:'scroll'\r\n    },\r\n    ingredientList:{\r\n        width:'60vw',\r\n        \r\n    },\r\n    actionContainer:{\r\n\r\n    }\r\n}))\r\n\r\nconst MenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {selectedMenu, isReadOnly} = props\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>(selectedMenu)\r\n    \r\n    React.useEffect(() =>{\r\n        setMenu(selectedMenu)\r\n    },[setMenu, selectedMenu])\r\n\r\n    const original = React.useMemo(() =>{\r\n        return menu\r\n    },[menu])\r\n\r\n    const useStyle = styles()\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key = {-1} id='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>Select Menu Type</MenuItem>)\r\n        elements.push(<MenuItem key = {0} id={'0'} value = {0} selected={menu.menuType === MenuTypeEnum.Pasta} >{MenuTypeEnum[MenuTypeEnum.Pasta]}</MenuItem>)\r\n        elements.push(<MenuItem key = {1} id={'4'} value={4} selected={menu.menuType === MenuTypeEnum.Meat} >{MenuTypeEnum[MenuTypeEnum.Meat]}</MenuItem>)\r\n        elements.push(<MenuItem key = {2} id={'3'} value={3} selected={menu.menuType === MenuTypeEnum.Other} >{MenuTypeEnum[MenuTypeEnum.Other]}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType])\r\n\r\n    const handleAddIngredient = React.useCallback(() => {\r\n        console.log('add...')\r\n        menu.ingredients.push({} as IIngredient)\r\n    },[menu.ingredients])\r\n\r\n    const ingredientList = React.useMemo(() =>{\r\n        return(\r\n            <List subheader={<MenuListSubHeader title='Zutaten' isReadOnly={isReadOnly} handleAddIngredient={handleAddIngredient}/> } className={useStyle.ingredientList} >\r\n            {menu?.ingredients?.map((ingredient, index) => {\r\n                return(\r\n                    <IngrdientListtem key={index} ingredient={ingredient} isReadOnly = {isReadOnly}/>\r\n                )\r\n            })}\r\n            </List>\r\n        )\r\n    },[isReadOnly, menu, useStyle, handleAddIngredient])\r\n\r\n    return(\r\n        <Grid\r\n            className={useStyle.rootContainer}\r\n            container>\r\n            <Grid\r\n                className={useStyle.menuContainer}\r\n                container>\r\n                    <MenuInputComponent\r\n                                label='Name'\r\n                                value={menu?.name?? \"\"}\r\n                                fullWidth={true} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onTitleChanged} />\r\n                    <MenuInputComponent\r\n                                label='Description'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.description?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onDescriptionChanged}/>\r\n                    <MenuInputComponent\r\n                                label='How To'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.howTo?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onHowToChanged}/>\r\n                    <MenuInputComponent\r\n                                label='Menu Type'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu.menuType ?? -1} \r\n                                isReadonly={isReadOnly}\r\n                                hasSelect={true}\r\n                                selectElements={menuTypes}\r\n                                onSelectChanged={onMenuTypeChanged}/>\r\n            </Grid>\r\n            <Grid\r\n                className={useStyle.ingredientContainer}\r\n                container>\r\n               {ingredientList}\r\n            </Grid>\r\n            <Grid\r\n                className={useStyle.actionContainer}\r\n                container>\r\n                    \r\n            </Grid>\r\n        </Grid>\r\n        //     container>\r\n        //     <Paper\r\n        //         className={useStyle.root}>\r\n        //         <Grid\r\n        //             justifyContent='center'\r\n        //             item\r\n        //             container>\r\n        //             <MenuInputComponent\r\n        //                     label='Name'\r\n        //                     value={menu?.name?? \"\"} \r\n        //                     isReadonly={false}\r\n        //                     onValueChanged={onTitleChanged} />\r\n        //                 <MenuInputComponent\r\n        //                     label='Description'\r\n        //                     isMultiRow={true}\r\n        //                     maxRows={5}\r\n        //                     fullWidth={true} \r\n        //                     value={menu?.description?? \"\"} \r\n        //                     isReadonly={false}\r\n        //                     onValueChanged={onDescriptionChanged}/>\r\n        //                 <MenuInputComponent\r\n        //                     label='How To'\r\n        //                     isMultiRow={true}\r\n        //                     maxRows={5}\r\n        //                     fullWidth={true} \r\n        //                     value={menu?.howTo?? \"\"} \r\n        //                     isReadonly={false}\r\n        //                     onValueChanged={onHowToChanged}/>\r\n        //                 <MenuInputComponent\r\n        //                     label='Menu Type'\r\n        //                     isMultiRow={true}\r\n        //                     maxRows={5}\r\n        //                     fullWidth={true} \r\n        //                     value={menu.menuType ?? -1} \r\n        //                     isReadonly={false}\r\n        //                     hasSelect={true}\r\n        //                     selectElements={menuTypes}\r\n        //                     onSelectChanged={onMenuTypeChanged}/>\r\n        //         </Grid>\r\n        //                 {menu?.ingredients?.length && (\r\n        //                     <List>\r\n        //                         {menu.ingredients.map((ing, index) =>{\r\n        //                             return(\r\n        //                                 <IngrdientListtem key = {index} ingredient={ing} isReadOnly={false}/>\r\n        //                             )\r\n        //                         })}\r\n        //                     </List>\r\n        //                 )}\r\n        //                 {!menu?.ingredients?.length &&(\r\n        //                     <List subheader={<ListSubheader>Test</ListSubheader>} style={{ maxWidth:'60vw' }}>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                         <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n        //                     </List>\r\n        //                 )}\r\n        //     </Paper>\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuContainer  "]},"metadata":{},"sourceType":"module"}