{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\MenuAutoComplete.tsx\",\n    _s = $RefreshSig$();\n\nimport { Autocomplete } from '@material-ui/lab';\nimport React from 'react';\nimport InputTextField from '../_components/_inputs/InputTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuAutocompleteInput = props => {\n  _s();\n\n  const {\n    menuCollection,\n    title,\n    value,\n    handleChange\n  } = props;\n  const items = React.useMemo(() => {\n    return menuCollection.map((menu, index) => {\n      return {\n        id: index,\n        label: menu.name\n      };\n    });\n  }, []);\n  const onChange = React.useCallback((e, item) => {\n    var _item$label;\n\n    handleChange((_item$label = item === null || item === void 0 ? void 0 : item.label) !== null && _item$label !== void 0 ? _item$label : \"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    options: items,\n    noOptionsText: \"\",\n    getOptionLabel: item => item.label,\n    onChange: (e, item) => onChange(e, item),\n    renderInput: params => /*#__PURE__*/_jsxDEV(InputTextField, { ...params,\n      fullWidth: true,\n      value: value,\n      label: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuAutocompleteInput, \"fYb7fKYmclX1vpA0KcVUtiBxY24=\");\n\n_c = MenuAutocompleteInput;\nexport default MenuAutocompleteInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuAutocompleteInput\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/MenuAutoComplete.tsx"],"names":["Autocomplete","React","InputTextField","MenuAutocompleteInput","props","menuCollection","title","value","handleChange","items","useMemo","map","menu","index","id","label","name","onChange","useCallback","e","item","params"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;;AAWA,MAAMC,qBAAuC,GAAIC,KAAD,IAAU;AAAA;;AAEtD,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA;AAA/B,MAA+CJ,KAArD;AAEA,QAAMK,KAAK,GAAGR,KAAK,CAACS,OAAN,CAAc,MAAK;AAC7B,WAAOL,cAAc,CAACM,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACtC,aACI;AAACC,QAAAA,EAAE,EAAED,KAAL;AAAYE,QAAAA,KAAK,EAAEH,IAAI,CAACI;AAAxB,OADJ;AAGH,KAJM,CAAP;AAKH,GANa,EAMZ,EANY,CAAd;AAQA,QAAMC,QAAQ,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,CAACC,CAAD,EAA2BC,IAA3B,KAA6D;AAAA;;AAC7FZ,IAAAA,YAAY,gBAACY,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEL,KAAP,qDAAe,EAAf,CAAZ;AACF,GAFgB,EAEf,EAFe,CAAjB;AAIA,sBACI,QAAC,YAAD;AACI,IAAA,OAAO,EAAEN,KADb;AAEI,IAAA,aAAa,EAAC,EAFlB;AAGI,IAAA,cAAc,EAAGW,IAAD,IAAUA,IAAI,CAACL,KAHnC;AAII,IAAA,QAAQ,EAAE,CAACI,CAAD,EAA2BC,IAA3B,KAA8DH,QAAQ,CAACE,CAAD,EAAIC,IAAJ,CAJpF;AAKI,IAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,cAAD,OAAoBA,MAApB;AAA4B,MAAA,SAAS,EAAE,IAAvC;AAA6C,MAAA,KAAK,EAAEd,KAApD;AAA2D,MAAA,KAAK,EAAED;AAAlE;AAAA;AAAA;AAAA;AAAA;AAL7B;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAzBD;;GAAMH,qB;;KAAAA,qB;AA2BN,eAAeA,qBAAf","sourcesContent":["import { Autocomplete } from '@material-ui/lab'\r\nimport React from 'react'\r\nimport InputTextField from '../_components/_inputs/InputTextField'\r\nimport { IAutocompleteItem } from '../_interfaces/IAutocompleteItem'\r\nimport { IMenu } from '../_interfaces/IMenu'\r\n\r\ninterface IProps{\r\n    menuCollection: IMenu[]\r\n    title: string\r\n    value: string\r\n    handleChange: (value: string) => void\r\n}\r\n\r\nconst MenuAutocompleteInput: React.FC<IProps> = (props) =>{\r\n\r\n    const {menuCollection, title, value, handleChange} = props\r\n\r\n    const items = React.useMemo(() =>{\r\n        return menuCollection.map((menu, index) =>{\r\n            return(\r\n                {id: index, label: menu.name}\r\n            )\r\n        })\r\n    },[])\r\n\r\n    const onChange = React.useCallback((e: React.ChangeEvent<{}>, item: IAutocompleteItem | null) =>{\r\n       handleChange(item?.label?? \"\")\r\n    },[])\r\n\r\n    return(\r\n        <Autocomplete\r\n            options={items}\r\n            noOptionsText=\"\"\r\n            getOptionLabel={(item) => item.label}\r\n            onChange={(e: React.ChangeEvent<{}>, item: IAutocompleteItem | null) => onChange(e, item)}\r\n            renderInput={(params) => <InputTextField {...params} fullWidth={true} value={value} label={title}/>}\r\n            />\r\n    )\r\n}\r\n\r\nexport default MenuAutocompleteInput"]},"metadata":{},"sourceType":"module"}