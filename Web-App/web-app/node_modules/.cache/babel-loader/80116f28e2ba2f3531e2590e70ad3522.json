{"ast":null,"code":"import React from'react';import LogTable from'../../../_components/_virtualized/_table/Table';import{AutoSizer}from'react-virtualized';import TableColunm from'../../../_components/_virtualized/_table/TableColunm';import{Button,Grid}from'@material-ui/core';import TableCell from'../../../_components/_virtualized/_table/TableCell';import{useDispatch,useSelector}from'react-redux';import{SetPageTitle}from'../../../_redux/_appStateStore/appStoreAccessor';import{getLogMessageRow}from'../mapper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoggingPageContainer=function LoggingPageContainer(props){var selectedItems=props.selectedItems,handleSelectedItems=props.handleSelectedItems,handleSelectAll=props.handleSelectAll,onCancel=props.onCancel,deleteLogmessages=props.deleteLogmessages;var dispatch=useDispatch();var messages=useSelector(function(state){return state.logMessages;});dispatch(SetPageTitle(\"Administration - Logging\"));var logMessageRows=React.useMemo(function(){return messages.map(function(item){return getLogMessageRow(item);});},[messages]);var rowGetter=React.useCallback(function(row){return logMessageRows[row.index];},[logMessageRows]);var cellRenderer=React.useCallback(function(cellData,dataKey,index){return/*#__PURE__*/_jsx(TableCell,{id:logMessageRows[index].id,value:cellData,selectedItems:selectedItems.ids,hasCheckbox:dataKey==='id',handleSelectedItems:handleSelectedItems});},[selectedItems,logMessageRows,handleSelectedItems]);return/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(AutoSizer,{children:function children(_ref){var width=_ref.width,height=_ref.height;return/*#__PURE__*/_jsxs(LogTable,{height:height,width:width,rowHeight:50,rowCount:logMessageRows.length,headerHeight:100,logmessages:logMessageRows,getRow:rowGetter,children:[TableColunm({key:\"0\",dataKey:'id',width:150,headerValue:\"ID\",state:selectedItems,itemCount:logMessageRows.length,customCellRenderer:cellRenderer,handleSelectAll:handleSelectAll}),TableColunm({key:\"1\",dataKey:'timeStamp',width:300,headerValue:\"Date\",state:selectedItems,itemCount:logMessageRows.length,customCellRenderer:cellRenderer,handleSelectAll:handleSelectAll}),TableColunm({key:\"2\",dataKey:'messageType',width:300,headerValue:\"Type\",state:selectedItems,itemCount:logMessageRows.length,customCellRenderer:cellRenderer,handleSelectAll:handleSelectAll}),TableColunm({key:\"3\",dataKey:'message',width:500,headerValue:\"Message\",state:selectedItems,itemCount:logMessageRows.length,customCellRenderer:cellRenderer,handleSelectAll:handleSelectAll}),TableColunm({key:\"4\",dataKey:'exception',width:500,headerValue:\"Details\",state:selectedItems,itemCount:logMessageRows.length,customCellRenderer:cellRenderer,handleSelectAll:handleSelectAll})]});}})}),(logMessageRows===null||logMessageRows===void 0?void 0:logMessageRows.length)>0&&/*#__PURE__*/_jsxs(Grid,{item:true,style:{display:'flex',justifyContent:'flex-end',paddingRight:'2rem'},xs:12,children:[/*#__PURE__*/_jsx(Button,{disabled:selectedItems.ids.length===0,onClick:onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{disabled:selectedItems.ids.length===0,onClick:deleteLogmessages,children:\"Save\"})]})]});};export default LoggingPageContainer;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingPageContainer.tsx"],"names":["React","LogTable","AutoSizer","TableColunm","Button","Grid","TableCell","useDispatch","useSelector","SetPageTitle","getLogMessageRow","LoggingPageContainer","props","selectedItems","handleSelectedItems","handleSelectAll","onCancel","deleteLogmessages","dispatch","messages","state","logMessages","logMessageRows","useMemo","map","item","rowGetter","useCallback","row","index","cellRenderer","cellData","dataKey","id","ids","width","height","length","key","headerValue","itemCount","customCellRenderer","display","justifyContent","paddingRight"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport LogTable from '../../../_components/_virtualized/_table/Table';\r\nimport { AutoSizer, Index } from 'react-virtualized';\r\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport TableCell from '../../../_components/_virtualized/_table/TableCell';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\r\nimport { ILogMessageTableState } from './loggingDataService';\r\nimport { IAppState } from '../../../_interfaces/IAppState';\r\nimport { ILogmessage } from './interfaces/ILogmessage';\r\nimport { getLogMessageRow } from '../mapper';\r\n\r\ninterface IProps{\r\n    selectedItems: ILogMessageTableState\r\n    handleSelectedItems: (items: number[]) => void\r\n    handleSelectAll: () => void\r\n    deleteLogmessages: () => Promise<void>\r\n    onCancel: () => void\r\n}\r\n\r\nconst LoggingPageContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {selectedItems, handleSelectedItems, handleSelectAll, onCancel, deleteLogmessages} = props\r\n\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector<IAppState, ILogmessage[]>(state => state.logMessages)\r\n\r\n    dispatch(SetPageTitle(\"Administration - Logging\"))\r\n    \r\n    const logMessageRows = React.useMemo(() =>{\r\n        return messages.map((item) =>{\r\n            return getLogMessageRow(item)\r\n        })\r\n    },[messages])\r\n\r\n    const rowGetter = React.useCallback((row: Index) =>{\r\n        return logMessageRows[row.index]\r\n    },[logMessageRows])\r\n\r\n    const cellRenderer = React.useCallback((cellData: any, dataKey: string, index: number) =>{\r\n        return(\r\n            <TableCell id={logMessageRows[index].id} value={cellData} selectedItems={selectedItems.ids} hasCheckbox={dataKey==='id'} handleSelectedItems={handleSelectedItems} />\r\n        )\r\n    },[selectedItems, logMessageRows, handleSelectedItems])\r\n\r\n    return(\r\n        <Grid container>\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                <AutoSizer>\r\n                    {({width, height}) =>(\r\n                    <LogTable \r\n                        height={height} \r\n                        width={width} \r\n                        rowHeight={50} \r\n                        rowCount={logMessageRows.length} \r\n                        headerHeight={100}\r\n                        logmessages={logMessageRows}\r\n                        getRow={rowGetter}\r\n                        >\r\n                        {TableColunm({key: \"0\", dataKey: 'id', width: 150, headerValue:\"ID\", state: selectedItems, itemCount: logMessageRows.length,  customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll })}\r\n                        {TableColunm({key: \"1\", dataKey: 'timeStamp', width: 300, headerValue: \"Date\", state: selectedItems, itemCount: logMessageRows.length, customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                        {TableColunm({key: \"2\", dataKey: 'messageType', width: 300, headerValue: \"Type\", state: selectedItems, itemCount: logMessageRows.length, customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                        {TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\", state: selectedItems, itemCount: logMessageRows.length,customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                        {TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Details\", state: selectedItems, itemCount: logMessageRows.length, customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                    </LogTable>\r\n                )}\r\n                </AutoSizer>\r\n            </Grid>\r\n            {logMessageRows?.length > 0 &&(\r\n            <Grid\r\n                item\r\n                style={{display:'flex', justifyContent:'flex-end', paddingRight:'2rem'}}\r\n                xs={12}>\r\n                <Button disabled={selectedItems.ids.length === 0} onClick={onCancel}>Cancel</Button>\r\n                <Button disabled={selectedItems.ids.length === 0} onClick={deleteLogmessages}>Save</Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LoggingPageContainer"]},"metadata":{},"sourceType":"module"}