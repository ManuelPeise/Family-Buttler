{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_appBars\\\\sideMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSideBarMenuConfig } from '../../_config/sideBarMenuConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {\n    width: '20vw'\n  },\n  menuItem: {\n    width: '100%',\n    color: 'black',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  itemTxt: {\n    fontSize: '2vh'\n  },\n  link: {\n    textDecoration: 'none',\n    paddingLeft: '2vw',\n    color: 'black',\n    fontSize: '2vh'\n  }\n});\n\nconst SideMenu = () => {\n  _s();\n\n  const useStyle = styles();\n  const sideBarConfig = useSideBarMenuConfig();\n  const sideBarMenu = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: sideBarConfig.map(config => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          className: useStyle.root,\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: useStyle.menuItem,\n            selected: config.expanded,\n            onClick: config.handleSelected.bind(null, config.key),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              className: useStyle.itemTxt,\n              children: config.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)\n          }, config.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), config.expanded && config.items.map(item => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: useStyle.menuItem,\n              selected: item.selected,\n              disabled: item.disabled,\n              onClick: item.handleSelected.bind(null, item.key),\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: useStyle.link,\n                to: !item.disabled ? item.path : '#',\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  className: useStyle.itemTxt,\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 45\n              }, this)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 41\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }, [sideBarConfig]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.root,\n    container: true,\n    children: sideBarMenu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SideMenu, \"ZTqMzebhZiVMmt8eNUgQsYe4PMw=\", false, function () {\n  return [useSideBarMenuConfig];\n});\n\n_c = SideMenu;\nexport default SideMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideMenu\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_appBars/sideMenu.tsx"],"names":["React","Grid","List","ListItem","ListItemText","makeStyles","Link","useSideBarMenuConfig","styles","root","width","menuItem","color","cursor","itemTxt","fontSize","link","textDecoration","paddingLeft","SideMenu","useStyle","sideBarConfig","sideBarMenu","useMemo","map","config","expanded","handleSelected","bind","key","title","items","item","selected","disabled","path","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Grid, List, ListItem, ListItemText, makeStyles, Typography} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSideBarMenuConfig } from '../../_config/sideBarMenuConfig'\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        width:'20vw'\r\n    },\r\n    menuItem:{\r\n        width: '100%',\r\n        color: 'black',\r\n        '&:hover':{\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    itemTxt:{\r\n        fontSize: '2vh'\r\n    },\r\n    link:{\r\n        textDecoration: 'none',\r\n        paddingLeft:'2vw',\r\n        color: 'black',\r\n        fontSize: '2vh'\r\n    }\r\n})\r\n\r\nconst SideMenu: React.FC = () =>{\r\n\r\n    const useStyle = styles()\r\n\r\n    const sideBarConfig = useSideBarMenuConfig()\r\n\r\n    const sideBarMenu = React.useMemo(() =>{\r\n\r\n        return(\r\n            <List>\r\n                {sideBarConfig.map((config) =>{\r\n                    return(\r\n                        <Grid\r\n                            className={useStyle.root}\r\n                            container>\r\n                            <ListItem key={config.key} className={useStyle.menuItem} selected = {config.expanded} onClick = {config.handleSelected.bind(null, config.key)}>\r\n                                <ListItemText className = {useStyle.itemTxt}>\r\n                                        {config.title}\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            {config.expanded && (\r\n                                config.items.map((item) =>{\r\n                                    return(\r\n                                        <ListItem \r\n                                            key={item.key} \r\n                                            className={useStyle.menuItem} \r\n                                            selected = {item.selected}\r\n                                            disabled = {item.disabled} \r\n                                            onClick = {item.handleSelected.bind(null, item.key)}>         \r\n                                            <Link className = {useStyle.link} to = {!item.disabled ? item.path : '#'} >\r\n                                                <ListItemText className = {useStyle.itemTxt}>\r\n                                                        {item.value}\r\n                                                </ListItemText>\r\n                                            </Link>\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Grid>\r\n                    )\r\n                })}\r\n\r\n            </List>\r\n        )\r\n    },[sideBarConfig]) \r\n\r\n    return(\r\n        <Grid\r\n            className = {useStyle.root}\r\n            container>\r\n                {sideBarMenu}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}