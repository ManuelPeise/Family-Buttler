{"ast":null,"code":"import React from'react';import{Grid,List}from'@material-ui/core';import SubHeaderBar from'../../_components/_appBars/subHeader';import IngrdientListtem from'./IngredientListItem';import{AddRounded}from'@material-ui/icons';import{Tooltip}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IngrdientList=function IngrdientList(props){var ingredients=props.ingredients,isReadOnly=props.isReadOnly,values=props.values,unitTypes=props.unitTypes,title=props.title,onIngredientsChanged=props.onIngredientsChanged,handleAddIngredient=props.handleAddIngredient;var onIngredientChanged=React.useCallback(function(ingredient){var copy=ingredients===null||ingredients===void 0?void 0:ingredients.slice();var index=copy===null||copy===void 0?void 0:copy.findIndex(function(x){return x.id===ingredient.id;});copy[index]=ingredient;onIngredientsChanged(copy);},[ingredients,onIngredientsChanged]);var ingredientList=React.useMemo(function(){return/*#__PURE__*/_jsx(List,{style:{width:'90%',padding:'2vh',marginTop:'1.5vh'},children:(ingredients===null||ingredients===void 0?void 0:ingredients.length)&&(ingredients===null||ingredients===void 0?void 0:ingredients.map(function(ingredient,index){return/*#__PURE__*/_jsx(IngrdientListtem,{values:values,ingredient:ingredient,unitTypeItems:unitTypes,isReadOnly:isReadOnly,onIngredientChanged:onIngredientChanged},index);}))});},[isReadOnly,ingredients,values,unitTypes,onIngredientChanged]);var addIcon=React.useMemo(function(){return/*#__PURE__*/_jsx(Tooltip,{title:title!==null&&title!==void 0?title:\"\",children:/*#__PURE__*/_jsx(AddRounded,{onClick:handleAddIngredient})});},[title,handleAddIngredient]);return/*#__PURE__*/_jsxs(Grid,{style:{display:'flex',justifyContent:'center',marginTop:'2vh'},container:true,children:[/*#__PURE__*/_jsx(SubHeaderBar,{title:values.ingrdients,icon:addIcon,variant:\"h5\",isReadonly:isReadOnly}),ingredientList]});};export default IngrdientList;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/IngredientList.tsx"],"names":["React","Grid","List","SubHeaderBar","IngrdientListtem","AddRounded","Tooltip","IngrdientList","props","ingredients","isReadOnly","values","unitTypes","title","onIngredientsChanged","handleAddIngredient","onIngredientChanged","useCallback","ingredient","copy","slice","index","findIndex","x","id","ingredientList","useMemo","width","padding","marginTop","length","map","addIcon","display","justifyContent","ingrdients"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Grid, List} from '@material-ui/core'\r\nimport SubHeaderBar from '../../_components/_appBars/subHeader'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\nimport { IIngredient } from '../../_interfaces/IMenu'\r\nimport IngrdientListtem from './IngredientListItem'\r\nimport {AddRounded} from '@material-ui/icons'\r\nimport { Tooltip } from '@mui/material'\r\n\r\ninterface IProps{\r\n    ingredients: IIngredient[]\r\n    isReadOnly: boolean\r\n    values: ICookingBookValues\r\n    unitTypes: JSX.Element[]\r\n    title?: string\r\n    onIngredientsChanged: (ingredient: IIngredient[]) => void\r\n    handleAddIngredient: () => void\r\n}\r\n\r\n\r\nconst IngrdientList: React.FC<IProps> = (props) => {\r\n\r\n    const {ingredients, isReadOnly, values, unitTypes, title, onIngredientsChanged, handleAddIngredient} = props\r\n\r\n    const onIngredientChanged = React.useCallback((ingredient: IIngredient) =>{\r\n        const copy = ingredients?.slice()\r\n        const index = copy?.findIndex(x => x.id === ingredient.id)\r\n        copy[index] = ingredient\r\n        onIngredientsChanged(copy)\r\n    },[ingredients, onIngredientsChanged])\r\n\r\n    const ingredientList = React.useMemo(() =>{\r\n        return(\r\n            <List style={{width: '90%', padding: '2vh', marginTop:'1.5vh'}}>\r\n                {ingredients?.length &&  ingredients?.map((ingredient, index) => {\r\n                    return(\r\n                        <IngrdientListtem \r\n                                key={index} \r\n                                values={values} \r\n                                ingredient={ingredient} \r\n                                unitTypeItems={unitTypes}\r\n                                isReadOnly = {isReadOnly}\r\n                                onIngredientChanged={onIngredientChanged}/>\r\n                    )\r\n                })}\r\n            </List>\r\n        )\r\n    },[isReadOnly, ingredients, values, unitTypes, onIngredientChanged])\r\n\r\n    const addIcon = React.useMemo(() =>{\r\n        return(\r\n            <Tooltip title={title?? \"\"}>\r\n                <AddRounded onClick = {handleAddIngredient}/>\r\n            </Tooltip>\r\n        )\r\n    },[title, handleAddIngredient])\r\n\r\n    return(\r\n        <Grid\r\n            style={{display:'flex', justifyContent: 'center', marginTop:'2vh'}}\r\n            container>\r\n            <SubHeaderBar \r\n                title={values.ingrdients}\r\n                icon={addIcon} \r\n                variant='h5' \r\n                isReadonly={isReadOnly}/>\r\n            {ingredientList}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IngrdientList"]},"metadata":{},"sourceType":"module"}