{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuAutoComplete.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  menuItemContainer: {\n    padding: '1vw'\n  }\n}));\n\nconst MenuAutocompleteInput = props => {\n  _s();\n\n  const {\n    menuCollection,\n    title,\n    value,\n    handleChange\n  } = props;\n  const [text, setText] = React.useState(value);\n  const useStyle = styles();\n  const items = React.useMemo(() => {\n    const items = [];\n    items.push({\n      id: -1,\n      label: text\n    });\n    menuCollection.map((menu, index) => {\n      items.push({\n        id: index,\n        label: menu.name\n      });\n    });\n    return items;\n  }, [menuCollection, text]);\n  const onChange = React.useCallback((e, item) => {\n    var _item$label;\n\n    console.log(\"ITEM: \");\n    console.log(item === null || item === void 0 ? void 0 : item.label);\n    handleChange((_item$label = item === null || item === void 0 ? void 0 : item.label) !== null && _item$label !== void 0 ? _item$label : \"\");\n  }, [handleChange]);\n  const handleInputChange = React.useCallback(e => {\n    var _items$findIndex;\n\n    const index = (_items$findIndex = items.findIndex(x => x.id === -1)) !== null && _items$findIndex !== void 0 ? _items$findIndex : -1;\n\n    if (index === -1) {\n      items.push({\n        id: -1,\n        label: text\n      });\n    }\n\n    console.log(index);\n    setText(e.currentTarget.value);\n  }, [setText]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.menuItemContainer,\n    container: true,\n    item: true,\n    direction: \"row\",\n    spacing: 2,\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 11,\n      sm: 11,\n      md: 11,\n      lg: 11,\n      xl: 11,\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        options: items,\n        noOptionsText: text,\n        getOptionLabel: item => {\n          var _item$label2;\n\n          return (_item$label2 = item.label) !== null && _item$label2 !== void 0 ? _item$label2 : text;\n        },\n        onChange: (e, item) => onChange(e, item !== null && item !== void 0 ? item : {\n          id: -1,\n          label: text\n        }),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          fullWidth: params.fullWidth,\n          value: text,\n          label: title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuAutocompleteInput, \"JAbaxWC0DFA9oKaVhy2TUI4xvmo=\");\n\n_c = MenuAutocompleteInput;\nexport default MenuAutocompleteInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuAutocompleteInput\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuAutoComplete.tsx"],"names":["Grid","makeStyles","TextField","Autocomplete","React","styles","theme","menuItemContainer","padding","MenuAutocompleteInput","props","menuCollection","title","value","handleChange","text","setText","useState","useStyle","items","useMemo","push","id","label","map","menu","index","name","onChange","useCallback","e","item","console","log","handleInputChange","findIndex","x","currentTarget","params","fullWidth"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, TextField } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport React from 'react'\r\nimport InputTextField from '../../_components/_inputs/InputTextField'\r\nimport { IAutocompleteItem } from '../../_interfaces/IAutocompleteItem'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    menuItemContainer:{\r\n        padding:'1vw'\r\n    }\r\n}))\r\n\r\ninterface IProps{\r\n    menuCollection: IMenu[]\r\n    title: string\r\n    value: string\r\n    handleChange: (value: string) => void\r\n}\r\n\r\nconst MenuAutocompleteInput: React.FC<IProps> = (props) =>{\r\n\r\n    const {menuCollection, title, value, handleChange} = props\r\n    const [text, setText] = React.useState<string>(value)\r\n\r\n    const useStyle = styles()\r\n    \r\n    const items = React.useMemo(() =>{\r\n        const items: IAutocompleteItem[] = []\r\n        items.push({id: -1, label: text})\r\n\r\n        menuCollection.map((menu, index) =>{\r\n          \r\n            items.push({id: index, label: menu.name})\r\n            \r\n        })\r\n\r\n        return items\r\n    },[menuCollection, text])\r\n\r\n    const onChange = React.useCallback((e: React.ChangeEvent<{}>, item: IAutocompleteItem | null) =>{\r\n        \r\n        console.log(\"ITEM: \")\r\n        console.log(item?.label)\r\n        \r\n        handleChange(item?.label?? \"\")\r\n    },[handleChange])\r\n\r\n    const handleInputChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) =>{\r\n\r\n        const index = items.findIndex(x => x.id === -1) ?? -1\r\n\r\n        if(index === -1){\r\n            items.push({id: -1, label: text})\r\n        }\r\n\r\n        console.log(index)\r\n\r\n        setText(e.currentTarget.value)\r\n    },[setText])\r\n\r\n    return(\r\n        <Grid\r\n            className={useStyle.menuItemContainer}\r\n            container\r\n            item\r\n            direction='row'\r\n            spacing={2}\r\n            justifyContent='center'>\r\n            <Grid\r\n                item\r\n                xs={11}\r\n                sm={11}\r\n                md={11}\r\n                lg={11}\r\n                xl={11}>\r\n                <Autocomplete\r\n                    options={items}\r\n                    noOptionsText={text}\r\n                    getOptionLabel={(item) => item.label?? text}\r\n                    onChange={(e: React.ChangeEvent<{}>, item: IAutocompleteItem | null) => onChange(e, item?? {id: -1, label: text})}\r\n                    renderInput={(params) => <TextField \r\n                                                {...params} \r\n                                                fullWidth={params.fullWidth} \r\n                                                value={text} \r\n                                                label={title} \r\n                                                onChange={handleInputChange} />}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuAutocompleteInput"]},"metadata":{},"sourceType":"module"}