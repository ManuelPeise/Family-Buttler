{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper } from '@material-ui/core';\nimport React from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuContainer from './MenuContainer';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuLayout = props => {\n  _s();\n\n  const {\n    layoutConfig,\n    menuCollection,\n    selectedMenu,\n    values,\n    handleSelectMenu,\n    handleSave\n  } = props;\n  const [menuType, setMenuType] = React.useState(MenuTypeEnum.None);\n  const onMenuTypeChange = React.useCallback(menuType => {\n    setMenuType(menuType);\n  }, [setMenuType]);\n  const filterItems = React.useMemo(() => {\n    return menuCollection.map(item => {\n      return {\n        id: item.id,\n        label: item.name\n      };\n    });\n  }, [menuCollection]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      overflow: 'auto'\n    },\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    children: [layoutConfig.hasFilter && /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        marginTop: '1.5vh'\n      },\n      item: true,\n      xs: 11,\n      xl: 11,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          backgroundColor: '#f2f2ed'\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuFilter, {\n          items: filterItems,\n          selectedMenuType: menuType,\n          values: values,\n          onMenuSelect: handleSelectMenu,\n          onMenuTypeChange: onMenuTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        marginTop: '1.5vh'\n      },\n      item: true,\n      xs: 11,\n      xl: 11,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          padding: '1vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuContainer, {\n          isReadOnly: layoutConfig.isReadOnly,\n          selectedMenu: selectedMenu !== null && selectedMenu !== void 0 ? selectedMenu : {},\n          values: values,\n          config: layoutConfig,\n          menuCollection: menuCollection,\n          handleSave: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MenuLayout, \"c0bWiWLen5YjbKuT/8/eHCmVf+g=\");\n\n_c = MenuLayout;\nexport default MenuLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLayout\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuLayout.tsx"],"names":["Grid","Paper","React","MenuFilter","MenuContainer","MenuTypeEnum","MenuLayout","props","layoutConfig","menuCollection","selectedMenu","values","handleSelectMenu","handleSave","menuType","setMenuType","useState","None","onMenuTypeChange","useCallback","filterItems","useMemo","map","item","id","label","name","overflow","hasFilter","marginTop","backgroundColor","display","justifyContent","padding","isReadOnly"],"mappings":"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","sourcesContent":["import {  Grid, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuContainer from './MenuContainer'\r\nimport { IAutocompleteItem } from '../../_interfaces/IAutocompleteItem'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   selectedMenu: IMenu\r\n   menuCollection: IMenu[]\r\n   values: ICookingBookValues\r\n   handleSelectMenu: (id: number | null) => void\r\n   handleSave:(menu: IMenu) => Promise<void>\r\n}\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, selectedMenu, values, handleSelectMenu, handleSave} = props\r\n    \r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filterItems = React.useMemo((): IAutocompleteItem[] =>{\r\n       \r\n        return menuCollection.map((item) =>{\r\n            return(\r\n                {id: item.id, label: item.name}\r\n            )\r\n        })\r\n            \r\n    },[menuCollection])\r\n\r\n    return(\r\n            <Grid\r\n                container\r\n                style={{overflow: 'auto'}}\r\n                direction='row'\r\n                justifyContent='center'\r\n                alignContent='center'>\r\n                    {layoutConfig.hasFilter && (\r\n                    <Grid\r\n                        style={{marginTop: '1.5vh'}}\r\n                        item\r\n                        xs={11}\r\n                        xl={11}>\r\n                        <Paper style={{backgroundColor: '#f2f2ed'}}>\r\n                            <MenuFilter\r\n                                items={filterItems}\r\n                                selectedMenuType={menuType}\r\n                                values={values}\r\n                                onMenuSelect={handleSelectMenu}\r\n                                onMenuTypeChange={onMenuTypeChange}/>\r\n                        </Paper>\r\n                    </Grid>\r\n                    )}\r\n                    <Grid\r\n                        style={{marginTop: '1.5vh'}}\r\n                        item\r\n                        xs={11}\r\n                        xl={11}>\r\n                        <Paper style={{display:'flex', justifyContent:'center', padding:'1vw'}}>\r\n                            <MenuContainer \r\n                                isReadOnly={layoutConfig.isReadOnly} \r\n                                selectedMenu={selectedMenu ?? {} as IMenu} \r\n                                values={values}\r\n                                config={layoutConfig}\r\n                                menuCollection={menuCollection}\r\n                                handleSave={handleSave}/>\r\n                        </Paper>\r\n                    </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuLayout\r\n"]},"metadata":{},"sourceType":"module"}