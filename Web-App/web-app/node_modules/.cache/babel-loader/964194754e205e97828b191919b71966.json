{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\nimport LogTable from './loggingTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingPageContainer = props => {\n  _s();\n\n  const {\n    logmessages\n  } = props;\n  const dispatch = useDispatch();\n  dispatch(SetPageTitle(\"Administration - Logging\"));\n  const rowGetter = React.useCallback(info => {\n    return logmessages[info.index];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LogTable, {\n    height: 200,\n    width: 500,\n    rowHeight: 50,\n    rowCount: logmessages.length,\n    headerHeight: 100,\n    rowGetter: rowGetter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoggingPageContainer, \"2brdTCyCfXLBj97TE26xYMuhG4A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoggingPageContainer;\nexport default LoggingPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingPageContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingPageContainer.tsx"],"names":["React","useDispatch","SetPageTitle","LogTable","LoggingPageContainer","props","logmessages","dispatch","rowGetter","useCallback","info","index","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,YAAT,QAA6B,iDAA7B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;;;AAMA,MAAMC,oBAAsC,GAAIC,KAAD,IAAU;AAAA;;AAErD,QAAM;AAACC,IAAAA;AAAD,MAAgBD,KAAtB;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;AAEAM,EAAAA,QAAQ,CAACL,YAAY,CAAC,0BAAD,CAAb,CAAR;AAEA,QAAMM,SAAS,GAAGR,KAAK,CAACS,WAAN,CAAmBC,IAAD,IAAgB;AAChD,WAAOJ,WAAW,CAACI,IAAI,CAACC,KAAN,CAAlB;AACH,GAFiB,EAEhB,EAFgB,CAAlB;AAIA,sBACE,QAAC,QAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,SAAS,EAAE,EAHb;AAIE,IAAA,QAAQ,EAAEL,WAAW,CAACM,MAJxB;AAKE,IAAA,YAAY,EAAE,GALhB;AAME,IAAA,SAAS,EAAEJ;AANb;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CArBD;;GAAMJ,oB;UAGeH,W;;;KAHfG,oB;AAuBN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Index } from 'react-virtualized';\r\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\r\nimport { ILogmessage } from './interfaces/ILogmessage';\r\nimport LogTable from './loggingTable';\r\n\r\ninterface IProps{\r\n    logmessages: ILogmessage[]\r\n}\r\n\r\nconst LoggingPageContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {logmessages} = props\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(SetPageTitle(\"Administration - Logging\"))\r\n    \r\n    const rowGetter = React.useCallback((info: Index) =>{\r\n        return logmessages[info.index]\r\n    },[])\r\n\r\n    return(\r\n      <LogTable \r\n        height={200} \r\n        width={500} \r\n        rowHeight={50} \r\n        rowCount={logmessages.length} \r\n        headerHeight={100}\r\n        rowGetter={rowGetter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LoggingPageContainer"]},"metadata":{},"sourceType":"module"}