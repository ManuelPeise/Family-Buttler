{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_appBars\\\\headerBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { Menu } from '@material-ui/icons';\nimport useLocalStorage from '../../_hooks/useLocalStorage';\nimport { LocalStorageKeyEnum } from '../../_enums/localStorageKeyEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  icon: {\n    color: 'white'\n  },\n  settings: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n});\n\nconst HeaderBar = props => {\n  _s();\n\n  const {\n    title\n  } = props;\n  const useStyle = styles();\n  const [open, setOpen] = React.useState(false);\n  const localStorageService = useLocalStorage();\n  const handleLanguageChanged = React.useCallback(e => {\n    localStorageService.setItem(LocalStorageKeyEnum.language, e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    color: \"primary\",\n    position: \"sticky\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"account of current user\",\n        \"aria-controls\": \"menu-appbar\",\n        \"aria-haspopup\": \"true\",\n        onClick: () => {\n          setOpen(true);\n        },\n        color: \"inherit\",\n        children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeaderBar, \"cCicvEo3ANmWk7sf+FAvuGGWlf0=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = HeaderBar;\nexport default HeaderBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderBar\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_appBars/headerBar.tsx"],"names":["React","AppBar","IconButton","Toolbar","Typography","makeStyles","Menu","useLocalStorage","LocalStorageKeyEnum","styles","icon","color","settings","display","justifyContent","HeaderBar","props","title","useStyle","open","setOpen","useState","localStorageService","handleLanguageChanged","useCallback","e","setItem","language","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,UAApD,QAAwF,mBAAxF;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,mBAAT,QAAoC,kCAApC;;AAGA,MAAMC,MAAM,GAAGJ,UAAU,CAAC;AACtBK,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAE;AADN,GADiB;AAItBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,cAAc,EAAE;AAFX;AAJa,CAAD,CAAzB;;AAaA,MAAMC,SAA2B,GAAIC,KAAD,IAAU;AAAA;;AAE1C,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAhB;AACA,QAAME,QAAQ,GAAGT,MAAM,EAAvB;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACqB,QAAN,CAAwB,KAAxB,CAAxB;AAEA,QAAMC,mBAAmB,GAAGf,eAAe,EAA3C;AAEA,QAAMgB,qBAAqB,GAAGvB,KAAK,CAACwB,WAAN,CAAmBC,CAAD,IAAqD;AACjGH,IAAAA,mBAAmB,CAACI,OAApB,CAA4BlB,mBAAmB,CAACmB,QAAhD,EAA0DF,CAAC,CAACG,MAAF,CAASC,KAAnE;AACH,GAF6B,EAE5B,EAF4B,CAA9B;AAIA,sBAEI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAC,QAAjC;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAChB,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAhB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA,kBACKG;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,UAAD;AACI,sBAAW,yBADf;AAEI,yBAAc,aAFlB;AAGI,yBAAc,MAHlB;AAII,QAAA,OAAO,EAAE,MAAM;AAACG,UAAAA,OAAO,CAAC,IAAD,CAAP;AAAc,SAJlC;AAKI,QAAA,KAAK,EAAC,SALV;AAAA,+BAOI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBH,CAnCD;;GAAML,S;UAO0BR,e;;;KAP1BQ,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport {AppBar, Menu as Menue, IconButton, Toolbar, Typography, MenuItem, Select } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Menu } from '@material-ui/icons'\r\nimport useLocalStorage from '../../_hooks/useLocalStorage'\r\nimport { LocalStorageKeyEnum } from '../../_enums/localStorageKeyEnum'\r\n\r\n\r\nconst styles = makeStyles({\r\n    icon:{\r\n        color: 'white'\r\n    },\r\n    settings:{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    }\r\n})\r\ninterface IProps{\r\n    title: string\r\n}\r\n\r\nconst HeaderBar: React.FC<IProps> = (props) =>{\r\n\r\n    const {title} = props\r\n    const useStyle = styles()\r\n\r\n    const [open, setOpen] = React.useState<boolean>(false)\r\n\r\n    const localStorageService = useLocalStorage();\r\n\r\n    const handleLanguageChanged = React.useCallback((e: React.ChangeEvent<{name?: string, value: any}>)=>{\r\n        localStorageService.setItem(LocalStorageKeyEnum.language, e.target.value as string)\r\n    },[])\r\n\r\n    return(\r\n        \r\n        <AppBar color='primary' position='sticky'>\r\n            <Toolbar style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                <Typography variant=\"h6\" component=\"div\" >\r\n                    {title}\r\n                </Typography>\r\n               \r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={() => {setOpen(true)}}\r\n                    color=\"inherit\"\r\n                >\r\n                    <Menu />\r\n                </IconButton>\r\n              \r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderBar"]},"metadata":{},"sourceType":"module"}