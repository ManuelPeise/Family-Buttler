{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\ViewMenuDataService.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useApi from '../../_hooks/useApi';\nimport apiConfig from '../../_config/apiConfig.json';\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor';\nimport { useDispatch } from 'react-redux';\nimport MenuLayout from './MenuLayout';\nimport useLocalStorage from '../../_hooks/useLocalStorage';\nimport { LocalStorageKeyEnum } from '../../_enums/localStorageKeyEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewMenuDataService = () => {\n  _s();\n\n  var _menuDataService$item3;\n\n  const dispatch = useDispatch();\n  const localStorageService = useLocalStorage();\n  const valuesUrlPrefix = React.useMemo(() => {\n    var _localStorageService$;\n\n    return `cookingbook_cookingbook${(_localStorageService$ = localStorageService.getItem(LocalStorageKeyEnum.buttlerConfiguration).language) !== null && _localStorageService$ !== void 0 ? _localStorageService$ : 'En'}`;\n  }, [localStorageService]);\n  const menuDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection,\n    params: null\n  });\n  const valueDataService = useApi({\n    serviceUri: apiConfig.baseUrl + apiConfig.i18nController + valuesUrlPrefix,\n    params: null\n  });\n  const handleSave = React.useCallback(async menu => {}, []);\n  const component = React.useMemo(() => {\n    var _menuDataService$item, _menuDataService$item2;\n\n    const config = {\n      isReadOnly: true,\n      hasFilter: true,\n      hasMenuList: true,\n      componentKey: 'view'\n    };\n    return /*#__PURE__*/_jsxDEV(MenuLayout, {\n      layoutConfig: config,\n      menuCollection: (_menuDataService$item = (_menuDataService$item2 = menuDataService.items[0]) === null || _menuDataService$item2 === void 0 ? void 0 : _menuDataService$item2.menuCollection) !== null && _menuDataService$item !== void 0 ? _menuDataService$item : [],\n      values: valueDataService.items[0],\n      handleSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }, [menuDataService.items, valueDataService.items, handleSave]);\n\n  if (menuDataService.items[0] === null) {\n    return null;\n  }\n\n  if (valueDataService.items[0] === null || valueDataService.items[0] === undefined) {\n    return null;\n  }\n\n  dispatch(SetMenuCollection((_menuDataService$item3 = menuDataService.items[0]) === null || _menuDataService$item3 === void 0 ? void 0 : _menuDataService$item3.menuCollection));\n  return component;\n};\n\n_s(ViewMenuDataService, \"La/Ogkg+26m42j14jetYjYwnzG4=\", false, function () {\n  return [useDispatch, useLocalStorage, useApi, useApi];\n});\n\n_c = ViewMenuDataService;\nexport default ViewMenuDataService;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMenuDataService\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/ViewMenuDataService.tsx"],"names":["React","useApi","apiConfig","SetMenuCollection","useDispatch","MenuLayout","useLocalStorage","LocalStorageKeyEnum","ViewMenuDataService","dispatch","localStorageService","valuesUrlPrefix","useMemo","getItem","buttlerConfiguration","language","menuDataService","serviceUri","baseUrl","cookingBook","getMenuCollection","params","valueDataService","i18nController","handleSave","useCallback","menu","component","config","isReadOnly","hasFilter","hasMenuList","componentKey","items","menuCollection","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,iBAAT,QAAkC,8CAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,SAASC,mBAAT,QAAoC,kCAApC;;;AAEA,MAAMC,mBAA6B,GAAE,MAAK;AAAA;;AAAA;;AAEtC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,mBAAmB,GAAGJ,eAAe,EAA3C;AAEA,QAAMK,eAAe,GAAGX,KAAK,CAACY,OAAN,CAAc,MAAK;AAAA;;AACvC,WAAQ,0BAAD,yBAA0BF,mBAAmB,CAACG,OAApB,CAA4BN,mBAAmB,CAACO,oBAAhD,EAAsEC,QAAhG,yEAA2G,IAAK,EAAvH;AACH,GAFuB,EAEtB,CAACL,mBAAD,CAFsB,CAAxB;AAIA,QAAMM,eAAe,GAAGf,MAAM,CAAgB;AAACgB,IAAAA,UAAU,EAAEf,SAAS,CAACgB,OAAV,GAAoBhB,SAAS,CAACiB,WAAV,CAAsBC,iBAAvD;AAA0EC,IAAAA,MAAM,EAAE;AAAlF,GAAhB,CAA9B;AAEA,QAAMC,gBAAgB,GAAGrB,MAAM,CAAqB;AAACgB,IAAAA,UAAU,EAAEf,SAAS,CAACgB,OAAV,GAAoBhB,SAAS,CAACqB,cAA9B,GAA+CZ,eAA5D;AAA6EU,IAAAA,MAAM,EAAE;AAArF,GAArB,CAA/B;AAEA,QAAMG,UAAU,GAAGxB,KAAK,CAACyB,WAAN,CAAkB,MAAOC,IAAP,IAAsB,CAE1D,CAFkB,EAEjB,EAFiB,CAAnB;AAIA,QAAMC,SAAS,GAAG3B,KAAK,CAACY,OAAN,CAAc,MAAK;AAAA;;AAEjC,UAAMgB,MAAyB,GAAG;AAC9BC,MAAAA,UAAU,EAAE,IADkB;AAE9BC,MAAAA,SAAS,EAAE,IAFmB;AAG9BC,MAAAA,WAAW,EAAE,IAHiB;AAI9BC,MAAAA,YAAY,EAAE;AAJgB,KAAlC;AAOA,wBAAO,QAAC,UAAD;AACK,MAAA,YAAY,EAAEJ,MADnB;AAEK,MAAA,cAAc,qDAAEZ,eAAe,CAACiB,KAAhB,CAAsB,CAAtB,CAAF,2DAAE,uBAA0BC,cAA5B,yEAA6C,EAFhE;AAGK,MAAA,MAAM,EAAEZ,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,CAHb;AAIK,MAAA,UAAU,EAAET;AAJjB;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAfiB,EAehB,CAACR,eAAe,CAACiB,KAAjB,EAAwBX,gBAAgB,CAACW,KAAzC,EAAgDT,UAAhD,CAfgB,CAAlB;;AAiBA,MAAGR,eAAe,CAACiB,KAAhB,CAAsB,CAAtB,MAA6B,IAAhC,EAAqC;AAEjC,WAAO,IAAP;AACH;;AAED,MAAGX,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,MAA8B,IAA9B,IAAsCX,gBAAgB,CAACW,KAAjB,CAAuB,CAAvB,MAA8BE,SAAvE,EAAiF;AAC7E,WAAO,IAAP;AACH;;AAED1B,EAAAA,QAAQ,CAACN,iBAAiB,2BAACa,eAAe,CAACiB,KAAhB,CAAsB,CAAtB,CAAD,2DAAC,uBAA0BC,cAA3B,CAAlB,CAAR;AAEA,SAAOP,SAAP;AACH,CA9CD;;GAAMnB,mB;UAEeJ,W,EACWE,e,EAMJL,M,EAECA,M;;;KAXvBO,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import React from 'react'\r\nimport useApi from '../../_hooks/useApi'\r\nimport { IMenu, IMenuResponse } from '../../_interfaces/IMenu'\r\nimport apiConfig from '../../_config/apiConfig.json'\r\nimport { SetMenuCollection } from '../../_redux/_appStateStore/appStoreAccessor'\r\nimport { useDispatch } from 'react-redux'\r\nimport MenuLayout from './MenuLayout'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\nimport useLocalStorage from '../../_hooks/useLocalStorage'\r\nimport { IButtlerConfiguration } from '../../_interfaces/IButtlerConfiguration'\r\nimport { LocalStorageKeyEnum } from '../../_enums/localStorageKeyEnum'\r\n\r\nconst ViewMenuDataService: React.FC= () =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const localStorageService = useLocalStorage<IButtlerConfiguration>();\r\n\r\n    const valuesUrlPrefix = React.useMemo(() =>{\r\n        return `cookingbook_cookingbook${localStorageService.getItem(LocalStorageKeyEnum.buttlerConfiguration).language?? 'En'}`\r\n    },[localStorageService])\r\n\r\n    const menuDataService = useApi<IMenuResponse>({serviceUri: apiConfig.baseUrl + apiConfig.cookingBook.getMenuCollection, params: null})\r\n    \r\n    const valueDataService = useApi<ICookingBookValues>({serviceUri: apiConfig.baseUrl + apiConfig.i18nController + valuesUrlPrefix, params: null}) \r\n\r\n    const handleSave = React.useCallback(async (menu: IMenu) =>{\r\n\r\n    },[])\r\n\r\n    const component = React.useMemo(() =>{\r\n       \r\n        const config: IMenuLayoutConfig = {\r\n            isReadOnly: true, \r\n            hasFilter: true, \r\n            hasMenuList: true,\r\n            componentKey: 'view'\r\n            }\r\n                \r\n        return <MenuLayout \r\n                    layoutConfig={config}\r\n                    menuCollection={menuDataService.items[0]?.menuCollection?? []}\r\n                    values={valueDataService.items[0]}\r\n                    handleSave={handleSave} />\r\n         \r\n    },[menuDataService.items, valueDataService.items, handleSave])\r\n\r\n    if(menuDataService.items[0] === null){\r\n\r\n        return null\r\n    }\r\n\r\n    if(valueDataService.items[0] === null || valueDataService.items[0] === undefined){\r\n        return null\r\n    }\r\n\r\n    dispatch(SetMenuCollection(menuDataService.items[0]?.menuCollection))\r\n    \r\n    return component\r\n}\r\n\r\nexport default ViewMenuDataService"]},"metadata":{},"sourceType":"module"}