{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_inputs\\\\InputTextField.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputTextField = props => {\n  _s();\n\n  const {\n    value,\n    type,\n    label,\n    onValueChange\n  } = props;\n  const handleValueChanged = React.useCallback(e => {\n    onValueChange(e.currentTarget.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    label: label,\n    type: type !== null && type !== void 0 ? type : 'text',\n    value: value,\n    onChange: handleValueChanged\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputTextField, \"ZBbqFoo/j+krC01hXaSCXgZCsrc=\");\n\n_c = InputTextField;\nexport default InputTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTextField\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_inputs/InputTextField.tsx"],"names":["React","TextField","InputTextField","props","value","type","label","onValueChange","handleValueChanged","useCallback","e","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,SAApB,QAAoC,mBAApC;;;AASA,MAAMC,cAAgC,GAAIC,KAAD,IAAU;AAAA;;AAE/C,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAsCJ,KAA5C;AAEA,QAAMK,kBAAkB,GAAGR,KAAK,CAACS,WAAN,CAAmBC,CAAD,IAA2C;AACpFH,IAAAA,aAAa,CAACG,CAAC,CAACC,aAAF,CAAgBP,KAAjB,CAAb;AACH,GAF0B,EAEzB,EAFyB,CAA3B;AAIA,sBACI,QAAC,SAAD;AACI,IAAA,KAAK,EAAIE,KADb;AAEI,IAAA,IAAI,EAAED,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAS,MAFjB;AAGI,IAAA,KAAK,EAAED,KAHX;AAII,IAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAfD;;GAAMN,c;;KAAAA,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\nimport {makeStyles, TextField} from '@material-ui/core'\r\n\r\ninterface IProps{\r\n    value: string\r\n    type?: string\r\n    label: string\r\n    onValueChange: (value: string) => void\r\n}\r\n\r\nconst InputTextField: React.FC<IProps> = (props) =>{\r\n\r\n    const {value, type, label, onValueChange} = props\r\n\r\n    const handleValueChanged = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) =>{\r\n        onValueChange(e.currentTarget.value as string)\r\n    },[])\r\n\r\n    return(\r\n        <TextField\r\n            label = {label}\r\n            type={type?? 'text'}\r\n            value={value} \r\n            onChange={handleValueChanged}/>\r\n    )\r\n}\r\n\r\nexport default InputTextField"]},"metadata":{},"sourceType":"module"}