{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\nimport LogTable from '../../../_components/_virtualized/_table/Table';\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingPageContainer = props => {\n  _s();\n\n  const {\n    logmessages\n  } = props;\n  const dispatch = useDispatch();\n  dispatch(SetPageTitle(\"Administration - Logging\"));\n  const columns = React.useMemo(() => {\n    const columns = [];\n    columns.push(TableColunm({\n      key: \"0\",\n      dataKey: 'id',\n      width: 100,\n      headerValue: \"ID\"\n    }));\n    columns.push(TableColunm({\n      key: \"1\",\n      dataKey: 'date',\n      width: 300,\n      headerValue: \"Date\"\n    }));\n    columns.push(TableColunm({\n      key: \"2\",\n      dataKey: 'logMessageType',\n      width: 300,\n      headerValue: \"Type\"\n    }));\n    columns.push(TableColunm({\n      key: \"3\",\n      dataKey: 'message',\n      width: 500,\n      headerValue: \"Message\"\n    }));\n    columns.push(TableColunm({\n      key: \"4\",\n      dataKey: 'exception',\n      width: 500,\n      headerValue: \"Exception\"\n    }));\n    return columns;\n  }, []);\n  const rowGetter = React.useCallback(row => {\n    return logmessages[row.index];\n  }, [logmessages]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      padding: '2.5rem'\n    },\n    justifyContent: \"center\",\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(LogTable, {\n      height: 800,\n      width: 1500,\n      rowHeight: 50,\n      rowCount: logmessages.length,\n      headerHeight: 100,\n      logmessages: logmessages,\n      columns: columns,\n      getRow: rowGetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggingPageContainer, \"8xlyaVEnif5pQktU1b1NYvYAkzA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoggingPageContainer;\nexport default LoggingPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingPageContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingPageContainer.tsx"],"names":["React","useDispatch","SetPageTitle","LogTable","TableColunm","Grid","LoggingPageContainer","props","logmessages","dispatch","columns","useMemo","push","key","dataKey","width","headerValue","rowGetter","useCallback","row","index","padding","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,iDAA7B;AAEA,OAAOC,QAAP,MAAqB,gDAArB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAMA,MAAMC,oBAAsC,GAAIC,KAAD,IAAU;AAAA;;AAErD,QAAM;AAACC,IAAAA;AAAD,MAAgBD,KAAtB;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAQ,EAAAA,QAAQ,CAACP,YAAY,CAAC,0BAAD,CAAb,CAAR;AAEA,QAAMQ,OAAO,GAAGV,KAAK,CAACW,OAAN,CAAc,MAAK;AAC/B,UAAMD,OAAc,GAAG,EAAvB;AAEAA,IAAAA,OAAO,CAACE,IAAR,CAAaR,WAAW,CAAC;AAACS,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,OAAO,EAAE,IAApB;AAA0BC,MAAAA,KAAK,EAAE,GAAjC;AAAsCC,MAAAA,WAAW,EAAC;AAAlD,KAAD,CAAxB;AACAN,IAAAA,OAAO,CAACE,IAAR,CAAaR,WAAW,CAAC;AAACS,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,OAAO,EAAE,MAApB;AAA4BC,MAAAA,KAAK,EAAE,GAAnC;AAAwCC,MAAAA,WAAW,EAAE;AAArD,KAAD,CAAxB;AACAN,IAAAA,OAAO,CAACE,IAAR,CAAaR,WAAW,CAAC;AAACS,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,OAAO,EAAE,gBAApB;AAAsCC,MAAAA,KAAK,EAAE,GAA7C;AAAkDC,MAAAA,WAAW,EAAE;AAA/D,KAAD,CAAxB;AACAN,IAAAA,OAAO,CAACE,IAAR,CAAaR,WAAW,CAAC;AAACS,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,OAAO,EAAE,SAApB;AAA+BC,MAAAA,KAAK,EAAE,GAAtC;AAA2CC,MAAAA,WAAW,EAAE;AAAxD,KAAD,CAAxB;AACAN,IAAAA,OAAO,CAACE,IAAR,CAAaR,WAAW,CAAC;AAACS,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,OAAO,EAAE,WAApB;AAAiCC,MAAAA,KAAK,EAAE,GAAxC;AAA6CC,MAAAA,WAAW,EAAE;AAA1D,KAAD,CAAxB;AAEA,WAAON,OAAP;AACH,GAVe,EAUd,EAVc,CAAhB;AAYA,QAAMO,SAAS,GAAGjB,KAAK,CAACkB,WAAN,CAAmBC,GAAD,IAAe;AAC/C,WAAOX,WAAW,CAACW,GAAG,CAACC,KAAL,CAAlB;AACH,GAFiB,EAEhB,CAACZ,WAAD,CAFgB,CAAlB;AAIA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACa,MAAAA,OAAO,EAAC;AAAT,KADX;AAEI,IAAA,cAAc,EAAC,QAFnB;AAGI,IAAA,SAAS,MAHb;AAAA,2BAII,QAAC,QAAD;AACI,MAAA,MAAM,EAAE,GADZ;AAEI,MAAA,KAAK,EAAE,IAFX;AAGI,MAAA,SAAS,EAAE,EAHf;AAII,MAAA,QAAQ,EAAEb,WAAW,CAACc,MAJ1B;AAKI,MAAA,YAAY,EAAE,GALlB;AAMI,MAAA,WAAW,EAAEd,WANjB;AAOI,MAAA,OAAO,EAAEE,OAPb;AAQI,MAAA,MAAM,EAAEO;AARZ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxCD;;GAAMX,oB;UAGeL,W;;;KAHfK,oB;AA0CN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\r\nimport { ILogmessage } from './interfaces/ILogmessage';\r\nimport LogTable from '../../../_components/_virtualized/_table/Table';\r\nimport { Index } from 'react-virtualized';\r\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\r\nimport { Grid } from '@material-ui/core';\r\n\r\ninterface IProps{\r\n    logmessages: ILogmessage[]\r\n}\r\n\r\nconst LoggingPageContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {logmessages} = props\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(SetPageTitle(\"Administration - Logging\"))\r\n  \r\n    const columns = React.useMemo(() =>{\r\n        const columns: any[] = []\r\n        \r\n        columns.push(TableColunm({key: \"0\", dataKey: 'id', width: 100, headerValue:\"ID\" }))\r\n        columns.push(TableColunm({key: \"1\", dataKey: 'date', width: 300, headerValue: \"Date\"}))\r\n        columns.push(TableColunm({key: \"2\", dataKey: 'logMessageType', width: 300, headerValue: \"Type\"}))\r\n        columns.push(TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\"}))\r\n        columns.push(TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Exception\"}))\r\n    \r\n        return columns\r\n    },[])\r\n\r\n    const rowGetter = React.useCallback((row: Index) =>{\r\n        return logmessages[row.index]\r\n    },[logmessages])\r\n\r\n    return(\r\n        <Grid\r\n            style={{padding:'2.5rem'}}\r\n            justifyContent='center'\r\n            container>\r\n            <LogTable \r\n                height={800} \r\n                width={1500} \r\n                rowHeight={50} \r\n                rowCount={logmessages.length} \r\n                headerHeight={100}\r\n                logmessages={logmessages}\r\n                columns={columns}\r\n                getRow={rowGetter}\r\n                />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LoggingPageContainer"]},"metadata":{},"sourceType":"module"}