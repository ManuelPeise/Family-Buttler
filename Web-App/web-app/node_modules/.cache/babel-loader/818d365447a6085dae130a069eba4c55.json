{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_appBars\\\\headerBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AppBar, Menu as Menue, Grid, IconButton, Toolbar, Typography, MenuItem } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  icon: {\n    color: 'white'\n  },\n  settings: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n});\n\nconst HeaderBar = props => {\n  _s();\n\n  const {\n    title\n  } = props;\n  const useStyle = styles();\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"primary\",\n      position: \"sticky\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: useStyle.settings,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setOpen(true);\n            },\n            \"aria-haspopup\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(Menu, {\n              className: useStyle.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menue, {\n      open: open,\n      onClose: () => {\n        setOpen(false);\n      },\n      keepMounted: true,\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: \"test my Life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeaderBar, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = HeaderBar;\nexport default HeaderBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderBar\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_appBars/headerBar.tsx"],"names":["React","AppBar","Menu","Menue","Grid","IconButton","Toolbar","Typography","MenuItem","makeStyles","styles","icon","color","settings","display","justifyContent","HeaderBar","props","title","useStyle","open","setOpen","useState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAI,IAAIC,KAAxB,EAA+BC,IAA/B,EAAqCC,UAArC,EAAwDC,OAAxD,EAAiEC,UAAjE,EAA6EC,QAA7E,QAA6F,mBAA7F;AACA,SAASN,IAAT,QAAqB,oBAArB;AACA,SAASO,UAAT,QAA2B,qBAA3B;;AAGA,MAAMC,MAAM,GAAGD,UAAU,CAAC;AACtBE,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAE;AADN,GADiB;AAItBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,cAAc,EAAE;AAFX;AAJa,CAAD,CAAzB;;AAaA,MAAMC,SAA2B,GAAIC,KAAD,IAAU;AAAA;;AAE1C,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAhB;AACA,QAAME,QAAQ,GAAGT,MAAM,EAAvB;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBrB,KAAK,CAACsB,QAAN,CAAwB,KAAxB,CAAxB;AAEA,sBACI,QAAC,GAAD;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAC,QAAjC;AAAA,6BACI,QAAC,OAAD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAI;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAI,CAAjB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,sBAA0BJ;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI,QAAC,IAAD;AACI,UAAA,SAAS,EAAEC,QAAQ,CAACN,QADxB;AAEI,UAAA,IAAI,MAFR;AAES,UAAA,EAAE,EAAI,CAFf;AAAA,iCAIQ,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAM;AAACQ,cAAAA,OAAO,CAAC,IAAD,CAAP;AAAc,aAA1C;AAA6C,6BAAc,MAA3D;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAEF,QAAQ,CAACR;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAqBA,QAAC,KAAD;AACI,MAAA,IAAI,EAAIS,IADZ;AAEI,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,OAAO,CAAC,KAAD,CAAP;AAAe,OAFnC;AAGI,MAAA,WAAW,MAHf;AAAA,6BAIQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YArBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAvCD;;GAAML,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport {AppBar, Menu as Menue, Grid, IconButton, Paper, Toolbar, Typography, MenuItem } from '@material-ui/core'\r\nimport { Menu } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport SettingsMenu from '../_menus/setingsMenu'\r\n\r\nconst styles = makeStyles({\r\n    icon:{\r\n        color: 'white'\r\n    },\r\n    settings:{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    }\r\n})\r\ninterface IProps{\r\n    title: string\r\n}\r\n\r\nconst HeaderBar: React.FC<IProps> = (props) =>{\r\n\r\n    const {title} = props\r\n    const useStyle = styles()\r\n\r\n    const [open, setOpen] = React.useState<boolean>(false)\r\n\r\n    return(\r\n        <Box>\r\n        <AppBar color='primary' position='sticky'>\r\n            <Toolbar>\r\n                <Grid item xs = {4}>\r\n                {/* <IconButton onClick = {handleShowMenu}>\r\n                    <Menu className={useStyle.icon} />\r\n                </IconButton> */}\r\n                </Grid>\r\n                <Grid item xs = {4}>\r\n                    <Typography variant='h6'>{title}</Typography>\r\n                </Grid>\r\n                <Grid \r\n                    className={useStyle.settings}\r\n                    item xs = {4}>\r\n                        {/* <SettingsMenu/> */}\r\n                        <IconButton onClick={() => {setOpen(true)}}  aria-haspopup=\"true\">\r\n                            <Menu className={useStyle.icon}/>\r\n                        </IconButton>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Menue\r\n            open = {open}\r\n            onClose={() => {setOpen(false)}}\r\n            keepMounted>\r\n                <MenuItem>\r\n                    test my Life\r\n                </MenuItem>                                \r\n            </Menue>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default HeaderBar"]},"metadata":{},"sourceType":"module"}