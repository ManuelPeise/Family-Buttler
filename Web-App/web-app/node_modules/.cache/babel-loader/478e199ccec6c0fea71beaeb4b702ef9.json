{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_inputs\\\\ImageInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\nimport { useImageConverter } from '../../_hooks/useImageConverter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageInput = props => {\n  _s();\n\n  const {\n    isReadOnly,\n    width,\n    height,\n    src,\n    isLoading,\n    handleImageChanged\n  } = props;\n  const imageService = useImageConverter(\"\");\n  const imageSrc = React.useMemo(() => {\n    let imageSrc = src.length > 0 ? src : \"\";\n\n    if (imageService.image === undefined) {\n      return imageSrc;\n    }\n\n    imageSrc = \"data:image/png;base64,\" + imageService.image;\n    handleImageChanged(imageSrc);\n    return imageSrc;\n  }, [imageService.image, src]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyItems: 'center',\n      alignItems: 'center'\n    },\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 4,\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: width,\n        height: height,\n        src: imageSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 4,\n      item: true,\n      children: !isReadOnly && /*#__PURE__*/_jsxDEV(TextField, {\n        hidden: true,\n        type: \"file\",\n        onChange: imageService.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageInput, \"oODDgN0UmEXJYXoVUr6yuaX7WFI=\", false, function () {\n  return [useImageConverter];\n});\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_inputs/ImageInput.tsx"],"names":["Grid","TextField","React","useImageConverter","ImageInput","props","isReadOnly","width","height","src","isLoading","handleImageChanged","imageService","imageSrc","useMemo","length","image","undefined","display","flexDirection","justifyItems","alignItems","handleChange"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;;;AAWA,MAAMC,UAA4B,GAAIC,KAAD,IAAU;AAAA;;AAE3C,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,GAA5B;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA;AAA5C,MAAkEN,KAAxE;AAEA,QAAMO,YAAY,GAAGT,iBAAiB,CAAC,EAAD,CAAtC;AAEA,QAAMU,QAAQ,GAAGX,KAAK,CAACY,OAAN,CAAc,MAAK;AAEhC,QAAID,QAAQ,GAAGJ,GAAG,CAACM,MAAJ,GAAa,CAAb,GAAiBN,GAAjB,GAAuB,EAAtC;;AAEA,QAAGG,YAAY,CAACI,KAAb,KAAuBC,SAA1B,EAAoC;AAChC,aAAOJ,QAAP;AACH;;AAEDA,IAAAA,QAAQ,GAAG,2BAA2BD,YAAY,CAACI,KAAnD;AAEAL,IAAAA,kBAAkB,CAACE,QAAD,CAAlB;AAEA,WAAOA,QAAP;AACH,GAbgB,EAaf,CAACD,YAAY,CAACI,KAAd,EAAqBP,GAArB,CAbe,CAAjB;AAeA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,QAA/B;AAAyCC,MAAAA,YAAY,EAAC,QAAtD;AAAgEC,MAAAA,UAAU,EAAC;AAA3E,KADX;AAEI,IAAA,IAAI,MAFR;AAAA,4BAGI,QAAC,IAAD;AACK,MAAA,EAAE,EAAE,EADT;AAEK,MAAA,EAAE,EAAE,CAFT;AAGI,MAAA,IAAI,MAHR;AAAA,6BAII;AAAK,QAAA,KAAK,EAAEd,KAAZ;AAAmB,QAAA,MAAM,EAAEC,MAA3B;AAAmC,QAAA,GAAG,EAAEK;AAAxC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,IAAD;AACI,MAAA,EAAE,EAAE,EADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,IAAI,MAHR;AAAA,gBAIK,CAACP,UAAD,iBACG,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,IAAnB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,QAAQ,EAAEM,YAAY,CAACU;AAA5D;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzCD;;GAAMlB,U;UAImBD,iB;;;KAJnBC,U;AA2CN,eAAeA,UAAf","sourcesContent":["import { Grid, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {useImageConverter} from '../../_hooks/useImageConverter'\r\n\r\ninterface IProps{\r\n    isReadOnly: boolean\r\n    width: number\r\n    height: number\r\n    src: string\r\n    isLoading: boolean\r\n    handleImageChanged: (image: string) => void\r\n}\r\n\r\nconst ImageInput: React.FC<IProps> = (props) =>{\r\n\r\n    const {isReadOnly, width, height, src, isLoading, handleImageChanged} = props\r\n\r\n    const imageService = useImageConverter(\"\")\r\n  \r\n    const imageSrc = React.useMemo(() =>{\r\n        \r\n        let imageSrc = src.length > 0 ? src : \"\"\r\n        \r\n        if(imageService.image === undefined){\r\n            return imageSrc \r\n        }\r\n\r\n        imageSrc = \"data:image/png;base64,\" + imageService.image\r\n\r\n        handleImageChanged(imageSrc)\r\n\r\n        return imageSrc\r\n    },[imageService.image, src])\r\n\r\n    return(\r\n        <Grid\r\n            style={{display:'flex', flexDirection:'column', justifyItems:'center', alignItems:'center' }}\r\n            item>\r\n            <Grid\r\n                 xs={12}\r\n                 sm={4}\r\n                item>\r\n                <img width={width} height={height} src={imageSrc}/>\r\n            </Grid>\r\n            <Grid\r\n                xs={12}\r\n                sm={4}\r\n                item>\r\n                {!isReadOnly && (\r\n                    <TextField hidden={true} type='file' onChange={imageService.handleChange}/>\r\n                )}\r\n            </Grid>    \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ImageInput"]},"metadata":{},"sourceType":"module"}