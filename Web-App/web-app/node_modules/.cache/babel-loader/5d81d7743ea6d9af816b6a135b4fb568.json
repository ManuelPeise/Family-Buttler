{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nexport const useImageUpload = () => {\n  _s();\n\n  const [image, setImage] = React.useState('');\n\n  const callBack = buffer => {\n    setImage(buffer);\n  };\n\n  const getBase64 = React.useCallback(async file => {\n    console.log(file);\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = async () => {\n      callBack(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }, []);\n  return {\n    buffer: image,\n    getBase64\n  };\n};\n\n_s(useImageUpload, \"bpLoVmh/IvSGSB2zzVeOdvfjxKU=\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_hooks/useImageUpload.ts"],"names":["React","useImageUpload","image","setImage","useState","callBack","buffer","getBase64","useCallback","file","console","log","reader","FileReader","readAsDataURL","onload","result","onerror","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAOA,OAAO,MAAMC,cAAc,GAAG,MAAyB;AAAA;;AAEnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACI,QAAN,CAA4C,EAA5C,CAA1B;;AAEA,QAAMC,QAAQ,GAAIC,MAAD,IAAwC;AACrDH,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAGP,KAAK,CAACQ,WAAN,CAAkB,MAAOC,IAAP,IAAsB;AACtDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AACAG,IAAAA,MAAM,CAACG,MAAP,GAAgB,YAAa;AACzBV,MAAAA,QAAQ,CAACO,MAAM,CAACI,MAAR,CAAR;AACH,KAFD;;AAGAJ,IAAAA,MAAM,CAACK,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAC9BR,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,KAAvB;AACH,KAFD;AAGH,GAViB,EAUhB,EAVgB,CAAlB;AAYA,SAAO;AACHZ,IAAAA,MAAM,EAAEJ,KADL;AAEHK,IAAAA;AAFG,GAAP;AAIH,CAxBM;;GAAMN,c","sourcesContent":["import React from \"react\";\r\n\r\nexport interface IImageUploadResult{\r\n    buffer: string | ArrayBuffer | null\r\n    getBase64: (file: File) => Promise<void>\r\n}\r\n\r\nexport const useImageUpload = (): IImageUploadResult =>{\r\n\r\n    const [image, setImage] = React.useState<string | ArrayBuffer | null>('');    \r\n\r\n    const callBack = (buffer: string | ArrayBuffer | null) =>{\r\n        setImage(buffer)\r\n    }\r\n\r\n    const getBase64 = React.useCallback(async (file: File) => {\r\n        console.log(file)\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = async  () => {\r\n            callBack(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    },[])\r\n\r\n    return {\r\n        buffer: image,\r\n        getBase64\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}