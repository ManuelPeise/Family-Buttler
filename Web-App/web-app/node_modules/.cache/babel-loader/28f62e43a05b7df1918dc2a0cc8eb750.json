{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\IngredientListItem.tsx\";\nimport React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport MenuInputComponent from './MenueInputComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row'\n  }\n});\n\nconst IngrdientListtem = props => {\n  var _ingredient$amount, _ingredient$name;\n\n  const {\n    ingredient,\n    isReadOnly\n  } = props;\n  const useStyle = styles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: useStyle.root,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Amount\",\n        value: (_ingredient$amount = ingredient === null || ingredient === void 0 ? void 0 : ingredient.amount) !== null && _ingredient$amount !== void 0 ? _ingredient$amount : '',\n        isReadonly: isReadOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Name\",\n        value: (_ingredient$name = ingredient === null || ingredient === void 0 ? void 0 : ingredient.name) !== null && _ingredient$name !== void 0 ? _ingredient$name : '',\n        isReadonly: isReadOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 8\n  }, this);\n};\n\n_c = IngrdientListtem;\nexport default IngrdientListtem;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngrdientListtem\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/IngredientListItem.tsx"],"names":["React","Grid","makeStyles","MenuInputComponent","styles","root","display","flexDirection","IngrdientListtem","props","ingredient","isReadOnly","useStyle","amount","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAEA,MAAMC,MAAM,GAAGF,UAAU,CAAC;AACtBG,EAAAA,IAAI,EAAC;AACDC,IAAAA,OAAO,EAAE,MADR;AAEDC,IAAAA,aAAa,EAAE;AAFd;AADiB,CAAD,CAAzB;;AAaA,MAAMC,gBAAkC,GAAIC,KAAD,IAAW;AAAA;;AAElD,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AACA,QAAMG,QAAQ,GAAGR,MAAM,EAAvB;AAEA,sBACG,QAAC,IAAD;AACK,IAAA,SAAS,EAAEQ,QAAQ,CAACP,IADzB;AAEK,IAAA,SAAS,MAFd;AAAA,4BAGS,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAAA,6BAEI,QAAC,kBAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,KAAK,wBAAEK,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEG,MAAd,mEAAuB,EAFhC;AAGI,QAAA,UAAU,EAAGF;AAHjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHT,eAUS,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAAA,6BAEK,QAAC,kBAAD;AACG,QAAA,KAAK,EAAC,MADT;AAEG,QAAA,KAAK,sBAAED,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEI,IAAd,+DAAqB,EAF7B;AAGG,QAAA,UAAU,EAAGH;AAHhB;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,YAVT;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAoBH,CAzBD;;KAAMH,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport {IIngredient} from '../../_interfaces/IMenu'\r\nimport {Grid, makeStyles} from '@material-ui/core'\r\nimport MenuInputComponent from './MenueInputComponent'\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    ingredient: IIngredient | null\r\n    isReadOnly: boolean\r\n}\r\n\r\n\r\nconst IngrdientListtem: React.FC<IProps> = (props) => {\r\n\r\n    const {ingredient, isReadOnly} = props\r\n    const useStyle = styles()\r\n\r\n    return(\r\n       <Grid\r\n            className={useStyle.root}\r\n            container>\r\n                <Grid\r\n                    item>\r\n                    <MenuInputComponent\r\n                        label='Amount'\r\n                        value={ingredient?.amount?? ''}\r\n                        isReadonly= {isReadOnly}/>\r\n                </Grid>\r\n                <Grid\r\n                    item>\r\n                     <MenuInputComponent\r\n                        label='Name'\r\n                        value={ingredient?.name?? ''}\r\n                        isReadonly= {isReadOnly}/>\r\n                </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IngrdientListtem"]},"metadata":{},"sourceType":"module"}