{"ast":null,"code":"import _slicedToArray from\"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{Grid,Paper}from'@material-ui/core';import React from'react';import MenuFilter from'./MenuFilter';import MenuContainer from'./MenuContainer';import{MenuTypeEnum}from'../../_enums/menuEnums';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MenuLayout=function MenuLayout(props){var layoutConfig=props.layoutConfig,menuCollection=props.menuCollection,selectedMenu=props.selectedMenu,values=props.values,handleSelectMenu=props.handleSelectMenu,handleSave=props.handleSave;var _React$useState=React.useState(MenuTypeEnum.None),_React$useState2=_slicedToArray(_React$useState,2),menuType=_React$useState2[0],setMenuType=_React$useState2[1];var onMenuTypeChange=React.useCallback(function(menuType){setMenuType(menuType);},[setMenuType]);var filteredMenus=React.useMemo(function(){if(menuType===MenuTypeEnum.None){return menuCollection;}return menuCollection.filter(function(menu){return menu.menuType===menuType;});},[menuType,menuCollection]);var filterItems=React.useMemo(function(){return filteredMenus.map(function(item){return{id:item.id,label:item.name};});},[filteredMenus]);return/*#__PURE__*/_jsxs(Grid,{container:true,style:{overflow:'auto'},direction:\"row\",justifyContent:\"center\",alignContent:\"center\",children:[layoutConfig.hasFilter&&/*#__PURE__*/_jsx(Grid,{style:{marginTop:'1.5vh'},item:true,xs:11,xl:11,children:/*#__PURE__*/_jsx(Paper,{style:{backgroundColor:'#f2f2ed'},children:/*#__PURE__*/_jsx(MenuFilter,{items:filterItems,selectedMenuType:menuType,values:values,onMenuSelect:handleSelectMenu,onMenuTypeChange:onMenuTypeChange})})}),/*#__PURE__*/_jsx(Grid,{style:{marginTop:'1.5vh'},item:true,xs:11,xl:11,children:/*#__PURE__*/_jsx(Paper,{style:{display:'flex',justifyContent:'center',padding:'1vw'},children:/*#__PURE__*/_jsx(MenuContainer,{selectedMenu:selectedMenu!==null&&selectedMenu!==void 0?selectedMenu:{},values:values,config:layoutConfig,menuCollection:filteredMenus,handleSave:handleSave})})})]});};export default MenuLayout;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuLayout.tsx"],"names":["Grid","Paper","React","MenuFilter","MenuContainer","MenuTypeEnum","MenuLayout","props","layoutConfig","menuCollection","selectedMenu","values","handleSelectMenu","handleSave","useState","None","menuType","setMenuType","onMenuTypeChange","useCallback","filteredMenus","useMemo","filter","menu","filterItems","map","item","id","label","name","overflow","hasFilter","marginTop","backgroundColor","display","justifyContent","padding"],"mappings":"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","sourcesContent":["import {  Grid, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport MenuFilter from './MenuFilter'\r\nimport MenuContainer from './MenuContainer'\r\nimport { IAutocompleteItem } from '../../_interfaces/IAutocompleteItem'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\n\r\n\r\ninterface IProps{\r\n   layoutConfig: IMenuLayoutConfig\r\n   selectedMenu: IMenu\r\n   menuCollection: IMenu[]\r\n   values: ICookingBookValues\r\n   handleSelectMenu: (id: number | null) => void\r\n   handleSave:(menu: IMenu) => Promise<void>\r\n}\r\n\r\nconst MenuLayout: React.FC<IProps> = (props) => {\r\n\r\n    const {layoutConfig, menuCollection, selectedMenu, values, handleSelectMenu, handleSave} = props\r\n    \r\n    const [menuType, setMenuType] = React.useState<number>(MenuTypeEnum.None)\r\n\r\n    const onMenuTypeChange = React.useCallback((menuType: number) =>{\r\n        setMenuType(menuType)\r\n    }, [setMenuType])\r\n\r\n    const filteredMenus = React.useMemo(() =>{\r\n\r\n        if(menuType === MenuTypeEnum.None){\r\n            return menuCollection\r\n        }\r\n\r\n        return menuCollection.filter(menu => menu.menuType === menuType)\r\n    },[menuType, menuCollection])\r\n\r\n    const filterItems = React.useMemo((): IAutocompleteItem[] =>{\r\n       \r\n        return filteredMenus.map((item) =>{\r\n            return(\r\n                {id: item.id, label: item.name}\r\n            )\r\n        })\r\n            \r\n    },[filteredMenus])\r\n\r\n    return(\r\n            <Grid\r\n                container\r\n                style={{overflow: 'auto'}}\r\n                direction='row'\r\n                justifyContent='center'\r\n                alignContent='center'>\r\n                    {layoutConfig.hasFilter && (\r\n                    <Grid\r\n                        style={{marginTop: '1.5vh'}}\r\n                        item\r\n                        xs={11}\r\n                        xl={11}>\r\n                        <Paper style={{backgroundColor: '#f2f2ed'}}>\r\n                            <MenuFilter\r\n                                items={filterItems}\r\n                                selectedMenuType={menuType}\r\n                                values={values}\r\n                                onMenuSelect={handleSelectMenu}\r\n                                onMenuTypeChange={onMenuTypeChange}/>\r\n                        </Paper>\r\n                    </Grid>\r\n                    )}\r\n                    <Grid\r\n                        style={{marginTop: '1.5vh'}}\r\n                        item\r\n                        xs={11}\r\n                        xl={11}>\r\n                        <Paper style={{display:'flex', justifyContent:'center', padding:'1vw'}}>\r\n                            <MenuContainer \r\n                                selectedMenu={selectedMenu ?? {} as IMenu} \r\n                                values={values}\r\n                                config={layoutConfig}\r\n                                menuCollection={filteredMenus}\r\n                                handleSave={handleSave}/>\r\n                        </Paper>\r\n                    </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuLayout\r\n"]},"metadata":{},"sourceType":"module"}