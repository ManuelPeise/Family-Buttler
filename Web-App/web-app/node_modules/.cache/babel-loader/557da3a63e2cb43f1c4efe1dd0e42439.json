{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\ingredientList.tsx\";\nimport React from 'react';\nimport { List, makeStyles } from '@material-ui/core';\nimport IngrdientListtem from './IngredientListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  container: {\n    display: 'flex'\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  }\n});\n\nconst IngrdientList = props => {\n  var _menu$ingredients, _menu$ingredients2, _menu$ingredients3;\n\n  const {\n    menu,\n    isReadOnly\n  } = props;\n  const useStyle = styles();\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: useStyle.list,\n    children: [(menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) && (menu === null || menu === void 0 ? void 0 : (_menu$ingredients2 = menu.ingredients) === null || _menu$ingredients2 === void 0 ? void 0 : _menu$ingredients2.map((ingredient, index) => {\n      return /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n        ingredient: ingredient,\n        isReadOnly: isReadOnly\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    })), !(menu !== null && menu !== void 0 && (_menu$ingredients3 = menu.ingredients) !== null && _menu$ingredients3 !== void 0 && _menu$ingredients3.length) && /*#__PURE__*/_jsxDEV(List, {\n      className: useStyle.list,\n      children: [/*#__PURE__*/_jsxDEV(IngrdientListtem, {\n        ingredient: null,\n        isReadOnly: isReadOnly\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n        ingredient: null,\n        isReadOnly: isReadOnly\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n        ingredient: null,\n        isReadOnly: isReadOnly\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_c = IngrdientList;\nexport default IngrdientList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngrdientList\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/ingredientList.tsx"],"names":["React","List","makeStyles","IngrdientListtem","styles","container","display","list","flexDirection","overflow","IngrdientList","props","menu","isReadOnly","useStyle","ingredients","length","map","ingredient","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAcC,IAAd,EAAoBC,UAApB,QAAqC,mBAArC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAEA,MAAMC,MAAM,GAAGF,UAAU,CAAC;AACtBG,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GADW;AAItBC,EAAAA,IAAI,EAAC;AACDD,IAAAA,OAAO,EAAE,MADR;AAEDE,IAAAA,aAAa,EAAE,QAFd;AAGDC,IAAAA,QAAQ,EAAE;AAHT;AAJiB,CAAD,CAAzB;;AAiBA,MAAMC,aAA+B,GAAIC,KAAD,IAAW;AAAA;;AAE/C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAqBF,KAA3B;AACA,QAAMG,QAAQ,GAAGV,MAAM,EAAvB;AAEA,sBAGQ,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,QAAQ,CAACP,IAA1B;AAAA,eACC,CAAAK,IAAI,SAAJ,IAAAA,IAAI,WAAJ,iCAAAA,IAAI,CAAEG,WAAN,wEAAmBC,MAAnB,MAA6BJ,IAA7B,aAA6BA,IAA7B,6CAA6BA,IAAI,CAAEG,WAAnC,uDAA6B,mBAAmBE,GAAnB,CAAuB,CAACC,UAAD,EAAaC,KAAb,KAAsB;AACvE,0BACI,QAAC,gBAAD;AAA8B,QAAA,UAAU,EAAED,UAA1C;AAAsD,QAAA,UAAU,EAAEL;AAAlE,SAAuBM,KAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJ6B,CAA7B,CADD,EAOC,EAACP,IAAD,aAACA,IAAD,qCAACA,IAAI,CAAEG,WAAP,+CAAC,mBAAmBC,MAApB,kBACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,QAAQ,CAACP,IAA1B;AAAA,8BACG,QAAC,gBAAD;AAA0B,QAAA,UAAU,EAAE,IAAtC;AAA4C,QAAA,UAAU,EAAEM;AAAxD,SAAuB,CAAvB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,gBAAD;AAA0B,QAAA,UAAU,EAAE,IAAtC;AAA4C,QAAA,UAAU,EAAEA;AAAxD,SAAuB,CAAvB;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,gBAAD;AAA0B,QAAA,UAAU,EAAE,IAAtC;AAA4C,QAAA,UAAU,EAAEA;AAAxD,SAAuB,CAAvB;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YARL;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAqBH,CA1BD;;KAAMH,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport {IMenu} from '../../_interfaces/IMenu'\r\nimport {Grid, List, makeStyles} from '@material-ui/core'\r\nimport IngrdientListtem from './IngredientListItem'\r\n\r\nconst styles = makeStyles({\r\n    container: {\r\n        display: 'flex'\r\n    },\r\n    list:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\ninterface IProps{\r\n    menu: IMenu\r\n    isReadOnly: boolean\r\n}\r\n\r\n\r\nconst IngrdientList: React.FC<IProps> = (props) => {\r\n\r\n    const {menu, isReadOnly} = props\r\n    const useStyle = styles()\r\n\r\n    return(\r\n       \r\n       \r\n            <List className={useStyle.list}>\r\n            {menu?.ingredients?.length && menu?.ingredients?.map((ingredient, index) =>{\r\n                return(\r\n                    <IngrdientListtem key={index} ingredient={ingredient} isReadOnly={isReadOnly}/>\r\n                )\r\n            })}\r\n            \r\n            {!menu?.ingredients?.length && (\r\n                 <List className={useStyle.list}>\r\n                    <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\r\n                    <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\r\n                    <IngrdientListtem key={0} ingredient={null} isReadOnly={isReadOnly}/>\r\n                 </List>\r\n            )}\r\n            </List>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default IngrdientList"]},"metadata":{},"sourceType":"module"}