{"ast":null,"code":"import React from\"react\";import{Column}from'react-virtualized';import HeaderCell from\"./HeaderCell\";import{jsx as _jsx}from\"react/jsx-runtime\";var TableColunm=function TableColunm(props){var key=props.key,dataKey=props.dataKey,width=props.width,headerValue=props.headerValue,style=props.style,state=props.state,itemCount=props.itemCount,customCellRenderer=props.customCellRenderer,handleSelectAll=props.handleSelectAll;return/*#__PURE__*/_jsx(Column,{style:style,dataKey:dataKey,width:width,cellRenderer:function cellRenderer(cell){return customCellRenderer(cell.cellData,cell.dataKey,cell.rowIndex);},headerRenderer:function headerRenderer(){return/*#__PURE__*/_jsx(HeaderCell,{value:headerValue,hasCheckbox:dataKey==='id',itemCount:itemCount,state:state,handleSelectAll:handleSelectAll});}},key);};export default TableColunm;","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableColunm.tsx"],"names":["React","Column","HeaderCell","TableColunm","props","key","dataKey","width","headerValue","style","state","itemCount","customCellRenderer","handleSelectAll","cell","cellData","rowIndex"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,KAAkC,mBAAlC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,2CAaA,GAAMC,CAAAA,WAA6B,CAAG,QAAhCA,CAAAA,WAAgC,CAACC,KAAD,CAAU,CAE5C,GAAOC,CAAAA,GAAP,CAAyGD,KAAzG,CAAOC,GAAP,CAAYC,OAAZ,CAAyGF,KAAzG,CAAYE,OAAZ,CAAqBC,KAArB,CAAyGH,KAAzG,CAAqBG,KAArB,CAA4BC,WAA5B,CAAyGJ,KAAzG,CAA4BI,WAA5B,CAAyCC,KAAzC,CAAyGL,KAAzG,CAAyCK,KAAzC,CAAgDC,KAAhD,CAAyGN,KAAzG,CAAgDM,KAAhD,CAAuDC,SAAvD,CAAyGP,KAAzG,CAAuDO,SAAvD,CAAkEC,kBAAlE,CAAyGR,KAAzG,CAAkEQ,kBAAlE,CAAsFC,eAAtF,CAAyGT,KAAzG,CAAsFS,eAAtF,CAEA,mBAEQ,KAAC,MAAD,EAEI,KAAK,CAAEJ,KAFX,CAGI,OAAO,CAAEH,OAHb,CAII,KAAK,CAAEC,KAJX,CAKI,YAAY,CAAE,sBAACO,IAAD,QAAUF,CAAAA,kBAAkB,CAACE,IAAI,CAACC,QAAN,CAAgBD,IAAI,CAACR,OAArB,CAA8BQ,IAAI,CAACE,QAAnC,CAA5B,EALlB,CAMI,cAAc,CAAE,6CAAO,KAAC,UAAD,EAAY,KAAK,CAAIR,WAArB,CAAkC,WAAW,CAAEF,OAAO,GAAK,IAA3D,CAAiE,SAAS,CAAEK,SAA5E,CAAuF,KAAK,CAAED,KAA9F,CAAqG,eAAe,CAAEG,eAAtH,EAAP,EANpB,EACSR,GADT,CAFR,CAWH,CAfD,CAiBA,cAAeF,CAAAA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {Column, ColumnProps} from 'react-virtualized'\r\nimport { ILogMessageTableState } from \"../../../_pages/_administartion/_logging/loggingDataService\";\r\nimport HeaderCell from \"./HeaderCell\";\r\n\r\n\r\ninterface IProps extends ColumnProps{\r\n    key: string\r\n    dataKey: string\r\n    headerValue: string\r\n    state: ILogMessageTableState\r\n    itemCount: number\r\n    customCellRenderer: (cellData: any, dataKey: string, index: number) => JSX.Element\r\n    handleSelectAll: () => void\r\n}\r\n\r\nconst TableColunm: React.FC<IProps> = (props) =>{\r\n\r\n    const {key, dataKey, width, headerValue, style, state, itemCount, customCellRenderer, handleSelectAll} = props\r\n\r\n    return(\r\n      \r\n            <Column\r\n                key={key}\r\n                style={style}\r\n                dataKey={dataKey} \r\n                width={width}\r\n                cellRenderer={(cell) => customCellRenderer(cell.cellData, cell.dataKey, cell.rowIndex)}\r\n                headerRenderer={() => (<HeaderCell value = {headerValue} hasCheckbox={dataKey === 'id'} itemCount={itemCount} state={state} handleSelectAll={handleSelectAll}/>)}\r\n            />\r\n    )\r\n} \r\n\r\nexport default TableColunm"]},"metadata":{},"sourceType":"module"}