{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_components\\\\_virtualized\\\\_table\\\\TableColunm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { AutoSizer, Column } from 'react-virtualized';\nimport HeaderCell from \"./HeaderCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableColunm = props => {\n  _s();\n\n  const {\n    key,\n    dataKey,\n    headerValue,\n    style\n  } = props;\n  const cellRenderer = React.useCallback((cellData, columnData, dataKey, rowData, rowIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cellData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AutoSizer, {\n    disableHeight: true,\n    children: _ref => {\n      let {\n        width\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Column, {\n        style: style,\n        dataKey: dataKey,\n        width: width // cellRenderer={(data) =>cellRenderer(data.cellData, data.columnData, data.dataKey, data.rowData, data.rowIndex)}\n        ,\n        headerRenderer: () => /*#__PURE__*/_jsxDEV(HeaderCell, {\n          value: headerValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 40\n        }, this),\n        cellDataGetter: _ref2 => {\n          let {\n            dataKey,\n            rowData\n          } = _ref2;\n          return rowData[dataKey];\n        }\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableColunm, \"KgQLfKG6Mc2QVjuAUvgnGgs0MoY=\");\n\n_c = TableColunm;\nexport default TableColunm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableColunm\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_components/_virtualized/_table/TableColunm.tsx"],"names":["React","AutoSizer","Column","HeaderCell","TableColunm","props","key","dataKey","headerValue","style","cellRenderer","useCallback","cellData","columnData","rowData","rowIndex","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAA6C,mBAA7C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AASA,MAAMC,WAA6B,GAAIC,KAAD,IAAU;AAAA;;AAE5C,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,OAAN;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAqCJ,KAA3C;AAEA,QAAMK,YAAY,GAAGV,KAAK,CAACW,WAAN,CAAkB,CAACC,QAAD,EAAgBC,UAAhB,EAAiCN,OAAjC,EAAkDO,OAAlD,EAAgEC,QAAhE,KAAoF;AACvH,wBAAO;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFoB,EAEnB,EAFmB,CAArB;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,aAAa,MAAxB;AAAA,cACK;AAAA,UAAC;AAACI,QAAAA;AAAD,OAAD;AAAA,0BACD,QAAC,MAAD;AAEI,QAAA,KAAK,EAAEP,KAFX;AAGI,QAAA,OAAO,EAAEF,OAHb;AAII,QAAA,KAAK,EAAES,KAJX,CAKI;AALJ;AAMI,QAAA,cAAc,EAAE,mBAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAIR;AAArB;AAAA;AAAA;AAAA;AAAA,gBAN3B;AAOI,QAAA,cAAc,EAAE;AAAA,cAAC;AAACD,YAAAA,OAAD;AAAUO,YAAAA;AAAV,WAAD;AAAA,iBAAwBA,OAAO,CAACP,OAAD,CAA/B;AAAA;AAPpB,SACSD,GADT;AAAA;AAAA;AAAA;AAAA,cADC;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAvBD;;GAAMF,W;;KAAAA,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {AutoSizer, Column, ColumnProps} from 'react-virtualized'\r\nimport HeaderCell from \"./HeaderCell\";\r\n\r\n\r\ninterface IProps extends ColumnProps{\r\n    key: string\r\n    dataKey: string\r\n    headerValue: string\r\n}\r\n\r\nconst TableColunm: React.FC<IProps> = (props) =>{\r\n\r\n    const {key, dataKey, headerValue, style} = props\r\n\r\n    const cellRenderer = React.useCallback((cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number) =>{\r\n        return(<div>{cellData}</div>)\r\n    },[])\r\n\r\n    return(\r\n        <AutoSizer disableHeight>\r\n            {({width}) =>(\r\n            <Column\r\n                key={key}\r\n                style={style}\r\n                dataKey={dataKey} \r\n                width={width}\r\n                // cellRenderer={(data) =>cellRenderer(data.cellData, data.columnData, data.dataKey, data.rowData, data.rowIndex)}\r\n                headerRenderer={() => (<HeaderCell value = {headerValue}/>)}\r\n                cellDataGetter={({dataKey, rowData}) => rowData[dataKey]}\r\n            />\r\n        )}\r\n    </AutoSizer>\r\n    )\r\n} \r\n\r\nexport default TableColunm"]},"metadata":{},"sourceType":"module"}