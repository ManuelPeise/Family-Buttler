{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\menuList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, ListItem, ListItemText } from '@material-ui/core';\nimport React from 'react';\nimport { List } from 'react-virtualized';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuList = props => {\n  _s();\n\n  var _menuCollection$lengt;\n\n  const {\n    menuCollection,\n    selectedMenuId,\n    handleSelectMenu\n  } = props;\n  const isMobile = window.screen.width < 1000;\n  const listHeight = !isMobile ? window.screen.availHeight / 100 * 80 : menuCollection.length < 5 ? menuCollection.length * 40 + 20 : 200;\n  const listWidth = !isMobile ? window.screen.availWidth / 100 * 20 : window.screen.availWidth / 100 * 95;\n  const renderRow = React.useCallback((key, index, style) => {\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      id: menuCollection[index].id.toString(),\n      style: style,\n      button: true,\n      selected: selectedMenuId === menuCollection[index].id,\n      onClick: handleSelectMenu.bind(null, menuCollection[index].id),\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: menuCollection[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }, [handleSelectMenu, menuCollection, selectedMenuId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    xl: 3,\n    alignContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      height: listHeight,\n      width: listWidth,\n      style: {\n        width: isMobile ? '95vw' : '20vw',\n        padding: '2vw'\n      },\n      rowHeight: 40,\n      rowCount: (_menuCollection$lengt = menuCollection === null || menuCollection === void 0 ? void 0 : menuCollection.length) !== null && _menuCollection$lengt !== void 0 ? _menuCollection$lengt : 5,\n      rowRenderer: r => renderRow(r.key, r.index, r.style)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuList, \"otyBi0C7LW8NiGkOQaC/D+ipz9M=\");\n\n_c = MenuList;\nexport default MenuList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/menuList.tsx"],"names":["Grid","ListItem","ListItemText","React","List","MenuList","props","menuCollection","selectedMenuId","handleSelectMenu","isMobile","window","screen","width","listHeight","availHeight","length","listWidth","availWidth","renderRow","useCallback","key","index","style","id","toString","bind","name","padding","r"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,QAA6C,mBAA7C;AACA,OAAOC,KAAP,MAAqC,OAArC;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;;AASA,MAAMC,QAA0B,GAAIC,KAAD,IAAU;AAAA;;AAAA;;AAEzC,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA;AAAjC,MAAqDH,KAA3D;AAEA,QAAMI,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcC,KAAd,GAAsB,IAAvC;AACA,QAAMC,UAAU,GAAG,CAACJ,QAAD,GAAYC,MAAM,CAACC,MAAP,CAAcG,WAAd,GAA0B,GAA1B,GAAgC,EAA5C,GAAiDR,cAAc,CAACS,MAAf,GAAwB,CAAxB,GAA4BT,cAAc,CAACS,MAAf,GAAwB,EAAxB,GAA6B,EAAzD,GAA8D,GAAlI;AACA,QAAMC,SAAS,GAAG,CAACP,QAAD,GAAYC,MAAM,CAACC,MAAP,CAAcM,UAAd,GAAyB,GAAzB,GAA+B,EAA3C,GAAgDP,MAAM,CAACC,MAAP,CAAcM,UAAd,GAAyB,GAAzB,GAA+B,EAAjG;AAIA,QAAMC,SAAS,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,CAACC,GAAD,EAAcC,KAAd,EAA6BC,KAA7B,KAAqD;AACrF,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEhB,cAAc,CAACe,KAAD,CAAd,CAAsBE,EAAtB,CAAyBC,QAAzB,EAFR;AAGI,MAAA,KAAK,EAAEF,KAHX;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,QAAQ,EAAGf,cAAc,KAAKD,cAAc,CAACe,KAAD,CAAd,CAAsBE,EALxD;AAMI,MAAA,OAAO,EAAIf,gBAAgB,CAACiB,IAAjB,CAAsB,IAAtB,EAA4BnB,cAAc,CAACe,KAAD,CAAd,CAAsBE,EAAlD,CANf;AAAA,6BAOI,QAAC,YAAD;AAAA,kBACKjB,cAAc,CAACe,KAAD,CAAd,CAAsBK;AAD3B;AAAA;AAAA;AAAA;AAAA;AAPJ,OACSN,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH,GAdiB,EAchB,CAACZ,gBAAD,EAAmBF,cAAnB,EAAmCC,cAAnC,CAdgB,CAAlB;AAgBA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA8B,IAAA,EAAE,EAAE,CAAlC;AAAqC,IAAA,YAAY,EAAC,QAAlD;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,MAAM,EAAEM,UADZ;AAEI,MAAA,KAAK,EAAEG,SAFX;AAGI,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAEH,QAAQ,GAAG,MAAH,GAAY,MAA5B;AAAoCkB,QAAAA,OAAO,EAAC;AAA5C,OAHX;AAII,MAAA,SAAS,EAAE,EAJf;AAKI,MAAA,QAAQ,2BAAErB,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAES,MAAlB,yEAA2B,CALvC;AAMI,MAAA,WAAW,EAAGa,CAAD,IAAOV,SAAS,CAACU,CAAC,CAACR,GAAH,EAAQQ,CAAC,CAACP,KAAV,EAAiBO,CAAC,CAACN,KAAnB;AANjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArCD;;GAAMlB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import { Grid, ListItem, ListItemText } from '@material-ui/core'\r\nimport React, { CSSProperties } from 'react'\r\nimport {List} from 'react-virtualized'\r\nimport { IMenu } from '../../_interfaces/IMenu'\r\n\r\ninterface IProps{\r\n    menuCollection: IMenu[]\r\n    selectedMenuId: number\r\n    handleSelectMenu: (id: number) => void\r\n}\r\n\r\nconst MenuList: React.FC<IProps> = (props) =>{\r\n\r\n    const {menuCollection, selectedMenuId, handleSelectMenu} = props\r\n\r\n    const isMobile = window.screen.width < 1000\r\n    const listHeight = !isMobile ? window.screen.availHeight/100 * 80 : menuCollection.length < 5 ? menuCollection.length * 40 + 20 : 200\r\n    const listWidth = !isMobile ? window.screen.availWidth/100 * 20 : window.screen.availWidth/100 * 95\r\n\r\n   \r\n\r\n    const renderRow = React.useCallback((key: string, index: number, style: CSSProperties) =>{\r\n        return(\r\n            <ListItem \r\n                key={key} \r\n                id={menuCollection[index].id.toString()}\r\n                style={style}\r\n                button\r\n                selected ={selectedMenuId === menuCollection[index].id}\r\n                onClick = {handleSelectMenu.bind(null, menuCollection[index].id)}>\r\n                <ListItemText>\r\n                    {menuCollection[index].name}\r\n                </ListItemText>\r\n            </ListItem>\r\n        )\r\n    },[handleSelectMenu, menuCollection, selectedMenuId])\r\n\r\n    return(\r\n        <Grid container item xs={12}  xl={3} alignContent='center'>\r\n            <List\r\n                height={listHeight}\r\n                width={listWidth}\r\n                style={{width: isMobile ? '95vw' : '20vw', padding:'2vw'}}\r\n                rowHeight={40}\r\n                rowCount={menuCollection?.length?? 5}\r\n                rowRenderer={(r) => renderRow(r.key, r.index, r.style)}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuList"]},"metadata":{},"sourceType":"module"}