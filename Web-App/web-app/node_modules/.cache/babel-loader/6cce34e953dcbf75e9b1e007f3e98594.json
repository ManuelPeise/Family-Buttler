{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuInputComponent from './MenueInputComponent';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { Grid, makeStyles, MenuItem, List, Button } from '@material-ui/core';\nimport IngrdientListtem from './IngredientListItem';\nimport MenuListSubHeader from './MenuListSubHeader';\nimport IngrdientList from './ingredientList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  actionContainer: {}\n}));\n\nconst MenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$description, _menu$howTo, _menu$menuType;\n\n  const {\n    selectedMenu,\n    isReadOnly\n  } = props;\n  const [menu, setMenu] = React.useState(selectedMenu);\n  React.useEffect(() => {\n    setMenu(selectedMenu);\n  }, [setMenu, selectedMenu]);\n  const original = React.useMemo(() => {\n    return menu;\n  }, [menu]);\n  const useStyle = styles();\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: \"Select Menu Type\"\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '0',\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: MenuTypeEnum[MenuTypeEnum.Pasta]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '4',\n      value: 4,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: MenuTypeEnum[MenuTypeEnum.Meat]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '3',\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Other,\n      children: MenuTypeEnum[MenuTypeEnum.Other]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType]);\n  const handleAddIngredient = React.useCallback(() => {\n    const update = { ...menu\n    };\n    update.ingredients.push({});\n    setMenu(update);\n  }, [menu, setMenu]);\n  const ingredientList = React.useMemo(() => {\n    var _menu$ingredients, _menu$ingredients2;\n\n    return /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        width: '90%',\n        padding: '2vh',\n        marginTop: '1.5vh'\n      },\n      subheader: /*#__PURE__*/_jsxDEV(MenuListSubHeader, {\n        title: \"Zutaten\",\n        isReadOnly: isReadOnly,\n        handleAddIngredient: handleAddIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 88\n      }, this),\n      children: (menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) && (menu === null || menu === void 0 ? void 0 : (_menu$ingredients2 = menu.ingredients) === null || _menu$ingredients2 === void 0 ? void 0 : _menu$ingredients2.map((ingredient, index) => {\n        return /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: ingredient,\n          isReadOnly: isReadOnly\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }, [isReadOnly, menu, handleAddIngredient]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 11,\n    xl: 11,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Name\",\n        value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n        fullWidth: true,\n        isReadonly: isReadOnly,\n        onValueChanged: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Description\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onDescriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"How To\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n        isReadonly: isReadOnly,\n        onValueChanged: onHowToChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n        label: \"Menu Type\",\n        isMultiRow: true,\n        maxRows: 5,\n        fullWidth: true,\n        value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n        isReadonly: isReadOnly,\n        hasSelect: true,\n        selectElements: menuTypes,\n        onSelectChanged: onMenuTypeChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"center\",\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(IngrdientList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"flex-end\",\n      style: {\n        margin: '2vw'\n      },\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuContainer, \"jN3udR/1LR4PRd1rktbRkO/pncc=\");\n\n_c = MenuContainer;\nexport default MenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuContainer.tsx"],"names":["React","MenuInputComponent","MenuTypeEnum","Grid","makeStyles","MenuItem","List","Button","IngrdientListtem","MenuListSubHeader","IngrdientList","styles","theme","actionContainer","MenuContainer","props","selectedMenu","isReadOnly","menu","setMenu","useState","useEffect","original","useMemo","useStyle","onTitleChanged","useCallback","name","data","onDescriptionChanged","description","onHowToChanged","howTo","onMenuTypeChanged","value","menuType","menuTypes","elements","push","None","Pasta","Meat","Other","handleAddIngredient","update","ingredients","ingredientList","width","padding","marginTop","length","map","ingredient","index","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport {IIngredient, IMenu} from '../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { Grid, makeStyles, MenuItem, List, Button, Container } from '@material-ui/core'\r\nimport IngrdientListtem from './IngredientListItem'\r\nimport MenuListSubHeader from './MenuListSubHeader'\r\nimport IngrdientList from './ingredientList'\r\n\r\ninterface IProps{\r\n    selectedMenu: IMenu\r\n    isReadOnly: boolean\r\n}\r\n\r\nconst styles = makeStyles((theme) =>({\r\n    actionContainer:{\r\n        \r\n    }\r\n}))\r\n\r\nconst MenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {selectedMenu, isReadOnly} = props\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>(selectedMenu)\r\n    \r\n    React.useEffect(() =>{\r\n        setMenu(selectedMenu)\r\n    },[setMenu, selectedMenu])\r\n\r\n    const original = React.useMemo(() =>{\r\n        return menu\r\n    },[menu])\r\n\r\n    const useStyle = styles()\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key = {-1} id='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>Select Menu Type</MenuItem>)\r\n        elements.push(<MenuItem key = {0} id={'0'} value = {0} selected={menu.menuType === MenuTypeEnum.Pasta} >{MenuTypeEnum[MenuTypeEnum.Pasta]}</MenuItem>)\r\n        elements.push(<MenuItem key = {1} id={'4'} value={4} selected={menu.menuType === MenuTypeEnum.Meat} >{MenuTypeEnum[MenuTypeEnum.Meat]}</MenuItem>)\r\n        elements.push(<MenuItem key = {2} id={'3'} value={3} selected={menu.menuType === MenuTypeEnum.Other} >{MenuTypeEnum[MenuTypeEnum.Other]}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType])\r\n\r\n    const handleAddIngredient = React.useCallback(() => {\r\n        const update: IMenu = {...menu}\r\n        update.ingredients.push({} as IIngredient)\r\n        setMenu(update)\r\n\r\n    },[menu, setMenu])\r\n\r\n    const ingredientList = React.useMemo(() =>{\r\n        return(\r\n            <List style={{width: '90%', padding: '2vh', marginTop:'1.5vh'}} subheader={<MenuListSubHeader title='Zutaten' isReadOnly={isReadOnly} handleAddIngredient={handleAddIngredient}/> } >\r\n                {menu?.ingredients?.length &&  menu?.ingredients?.map((ingredient, index) => {\r\n                    return(\r\n                        <IngrdientListtem key={index} ingredient={ingredient} isReadOnly = {isReadOnly}/>\r\n                    )\r\n                })}\r\n            </List>\r\n        )\r\n    },[isReadOnly, menu, handleAddIngredient])\r\n\r\n    return(\r\n        <Grid \r\n            item\r\n            xs={11}\r\n            xl={11} >\r\n            <Grid\r\n                container>\r\n                    <MenuInputComponent\r\n                                label='Name'\r\n                                value={menu?.name?? \"\"}\r\n                                fullWidth={true} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onTitleChanged} />\r\n                    <MenuInputComponent\r\n                                label='Description'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.description?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onDescriptionChanged}/>\r\n                    <MenuInputComponent\r\n                                label='How To'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu?.howTo?? \"\"} \r\n                                isReadonly={isReadOnly}\r\n                                onValueChanged={onHowToChanged}/>\r\n                    <MenuInputComponent\r\n                                label='Menu Type'\r\n                                isMultiRow={true}\r\n                                maxRows={5}\r\n                                fullWidth={true} \r\n                                value={menu.menuType ?? -1} \r\n                                isReadonly={isReadOnly}\r\n                                hasSelect={true}\r\n                                selectElements={menuTypes}\r\n                                onSelectChanged={onMenuTypeChanged}/>\r\n            </Grid>\r\n            <Grid\r\n                justifyContent='center'\r\n                container>\r\n                    <IngrdientList/>\r\n                    {/* {ingredientList} */}\r\n            </Grid>\r\n            <Grid\r\n                justifyContent='flex-end'\r\n                style={{margin: '2vw'}}\r\n                container>\r\n                    <Button>Cancel</Button>\r\n                    <Button>Save</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuContainer  "]},"metadata":{},"sourceType":"module"}