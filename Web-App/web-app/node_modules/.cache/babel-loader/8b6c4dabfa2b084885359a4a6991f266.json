{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\_add\\\\AddMenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PageBodyLayout from '../../../_layout/pageBodyLayout';\nimport MenuInputComponent from '../MenueInputComponent';\nimport { MenuTypeEnum } from '../../../_enums/menuEnums';\nimport { Grid, makeStyles, MenuItem, List } from '@material-ui/core';\nimport IngrdientListtem from '../IngredientListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nconst AddMenuContainer = props => {\n  _s();\n\n  var _menu$name, _menu$description, _menu$howTo, _menu$menuType, _menu$ingredients, _menu$ingredients2;\n\n  const [menu, setMenu] = React.useState({});\n  const useStyle = styles();\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: \"Select Menu Type\"\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '0',\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: MenuTypeEnum[MenuTypeEnum.Pasta]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '4',\n      value: 4,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: MenuTypeEnum[MenuTypeEnum.Meat]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: '3',\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Other,\n      children: MenuTypeEnum[MenuTypeEnum.Other]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType]);\n  return /*#__PURE__*/_jsxDEV(PageBodyLayout, {\n    hasCancelBtn: true,\n    hasSaveBtn: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: useStyle.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        children: \"dddddddddddd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        justifyContent: \"center\",\n        item: true,\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: \"Name\",\n          value: (_menu$name = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name !== void 0 ? _menu$name : \"\",\n          isReadonly: false,\n          onValueChanged: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: \"Description\",\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n          isReadonly: false,\n          onValueChanged: onDescriptionChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: \"How To\",\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n          isReadonly: false,\n          onValueChanged: onHowToChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: \"Menu Type\",\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n          isReadonly: false,\n          hasSelect: true,\n          selectElements: menuTypes,\n          onSelectChanged: onMenuTypeChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), (menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) && /*#__PURE__*/_jsxDEV(List, {\n        children: menu.ingredients.map((ing, index) => {\n          return /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n            ingredient: ing,\n            isReadOnly: false\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this), !(menu !== null && menu !== void 0 && (_menu$ingredients2 = menu.ingredients) !== null && _menu$ingredients2 !== void 0 && _menu$ingredients2.length) && /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: null,\n          isReadOnly: false\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: null,\n          isReadOnly: false\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: null,\n          isReadOnly: false\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(IngrdientListtem, {\n          ingredient: null,\n          isReadOnly: false\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddMenuContainer, \"Xys+beIF/HcqctEEMX1g56WfRio=\");\n\n_c = AddMenuContainer;\nexport default AddMenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/_add/AddMenuContainer.tsx"],"names":["React","PageBodyLayout","MenuInputComponent","MenuTypeEnum","Grid","makeStyles","MenuItem","List","IngrdientListtem","styles","root","display","flexDirection","AddMenuContainer","props","menu","setMenu","useState","useStyle","onTitleChanged","useCallback","name","data","onDescriptionChanged","description","onHowToChanged","howTo","onMenuTypeChanged","value","menuType","menuTypes","useMemo","elements","push","None","Pasta","Meat","Other","ingredients","length","map","ing","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PageBodyLayout from '../../../_layout/pageBodyLayout'\r\nimport MenuInputComponent from '../MenueInputComponent'\r\nimport {IMenu} from '../../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../../_enums/menuEnums'\r\nimport { Grid, makeStyles, MenuItem, List, Typography } from '@material-ui/core'\r\nimport IngrdientList from '../ingredientList'\r\nimport IngrdientListtem from '../IngredientListItem'\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nconst styles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n})\r\n\r\nconst AddMenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const [menu, setMenu] = React.useState<IMenu>({} as IMenu)\r\n\r\n    const useStyle = styles()\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key = {-1} id='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>Select Menu Type</MenuItem>)\r\n        elements.push(<MenuItem key = {0} id={'0'} value = {0} selected={menu.menuType === MenuTypeEnum.Pasta} >{MenuTypeEnum[MenuTypeEnum.Pasta]}</MenuItem>)\r\n        elements.push(<MenuItem key = {1} id={'4'} value={4} selected={menu.menuType === MenuTypeEnum.Meat} >{MenuTypeEnum[MenuTypeEnum.Meat]}</MenuItem>)\r\n        elements.push(<MenuItem key = {2} id={'3'} value={3} selected={menu.menuType === MenuTypeEnum.Other} >{MenuTypeEnum[MenuTypeEnum.Other]}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType])\r\n\r\n    return(\r\n        <PageBodyLayout\r\n            hasCancelBtn = {true}\r\n            hasSaveBtn = {true}>\r\n            <Grid\r\n                container\r\n                className={useStyle.root}>\r\n                <Grid\r\n                    item\r\n                    container>\r\n                        dddddddddddd\r\n                </Grid>\r\n                <Grid\r\n                    justifyContent='center'\r\n                    item\r\n                    container>\r\n                    <MenuInputComponent\r\n                            label='Name'\r\n                            value={menu?.name?? \"\"} \r\n                            isReadonly={false}\r\n                            onValueChanged={onTitleChanged} />\r\n                        <MenuInputComponent\r\n                            label='Description'\r\n                            isMultiRow={true}\r\n                            maxRows={5}\r\n                            fullWidth={true} \r\n                            value={menu?.description?? \"\"} \r\n                            isReadonly={false}\r\n                            onValueChanged={onDescriptionChanged}/>\r\n                        <MenuInputComponent\r\n                            label='How To'\r\n                            isMultiRow={true}\r\n                            maxRows={5}\r\n                            fullWidth={true} \r\n                            value={menu?.howTo?? \"\"} \r\n                            isReadonly={false}\r\n                            onValueChanged={onHowToChanged}/>\r\n                        <MenuInputComponent\r\n                            label='Menu Type'\r\n                            isMultiRow={true}\r\n                            maxRows={5}\r\n                            fullWidth={true} \r\n                            value={menu.menuType ?? -1} \r\n                            isReadonly={false}\r\n                            hasSelect={true}\r\n                            selectElements={menuTypes}\r\n                            onSelectChanged={onMenuTypeChanged}/>\r\n                </Grid>\r\n               \r\n                        {menu?.ingredients?.length && (\r\n                            <List>\r\n                                {menu.ingredients.map((ing, index) =>{\r\n                                    return(\r\n                                        <IngrdientListtem key = {index} ingredient={ing} isReadOnly={false}/>\r\n                                    )\r\n                                })}\r\n                            </List>\r\n                        )}\r\n                        {!menu?.ingredients?.length &&(\r\n                            <List>\r\n                                <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n                                <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n                                <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n                                <IngrdientListtem key = {0} ingredient={null} isReadOnly={false}/>\r\n                            </List>\r\n                        )}\r\n                \r\n            </Grid>\r\n        </PageBodyLayout>\r\n    )\r\n}\r\n\r\nexport default AddMenuContainer  "]},"metadata":{},"sourceType":"module"}