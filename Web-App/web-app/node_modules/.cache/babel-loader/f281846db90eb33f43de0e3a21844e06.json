{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_administartion\\\\_logging\\\\loggingPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport LogTable from '../../../_components/_virtualized/_table/Table';\nimport { AutoSizer } from 'react-virtualized';\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\nimport { Grid } from '@material-ui/core';\nimport TableCell from '../../../_components/_virtualized/_table/TableCell';\nimport { useDispatch } from 'react-redux';\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggingPageContainer = props => {\n  _s();\n\n  const {\n    logmessages,\n    selectedItems,\n    handleSelectedItems,\n    handleSelectAll\n  } = props;\n  const dispatch = useDispatch();\n  dispatch(SetPageTitle(\"Administration - Logging\"));\n  const rowGetter = React.useCallback(row => {\n    return logmessages[row.index];\n  }, [logmessages]);\n  const cellRenderer = React.useCallback((cellData, dataKey, index) => {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      id: logmessages[index].id,\n      value: cellData,\n      selectedItems: selectedItems.ids,\n      hasCheckbox: dataKey === 'id',\n      handleSelectedItems: handleSelectedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }, [selectedItems, logmessages, handleSelectedItems]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(AutoSizer, {\n        disableHeight: true,\n        children: _ref => {\n          let {\n            width\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(LogTable, {\n            height: 800,\n            width: width,\n            rowHeight: 50,\n            rowCount: logmessages.length,\n            headerHeight: 100,\n            logmessages: logmessages,\n            getRow: rowGetter,\n            children: [TableColunm({\n              key: \"0\",\n              dataKey: 'id',\n              width: 150,\n              headerValue: \"ID\",\n              state: selectedItems,\n              logmessageCount: logmessages.length,\n              customCellRenderer: cellRenderer,\n              handleSelectAll: handleSelectAll\n            }), TableColunm({\n              key: \"1\",\n              dataKey: 'timeStamp',\n              width: 300,\n              headerValue: \"Date\",\n              state: selectedItems,\n              logmessageCount: logmessages.length,\n              customCellRenderer: cellRenderer,\n              handleSelectAll: handleSelectAll\n            }), TableColunm({\n              key: \"2\",\n              dataKey: 'messageType',\n              width: 300,\n              headerValue: \"Type\",\n              state: selectedItems,\n              logmessageCount: logmessages.length,\n              customCellRenderer: cellRenderer,\n              handleSelectAll: handleSelectAll\n            }), TableColunm({\n              key: \"3\",\n              dataKey: 'message',\n              width: 500,\n              headerValue: \"Message\",\n              state: selectedItems,\n              logmessageCount: logmessages.length,\n              customCellRenderer: cellRenderer,\n              handleSelectAll: handleSelectAll\n            }), TableColunm({\n              key: \"4\",\n              dataKey: 'exception',\n              width: 500,\n              headerValue: \"Exception\",\n              state: selectedItems,\n              logmessageCount: logmessages.length,\n              customCellRenderer: cellRenderer,\n              handleSelectAll: handleSelectAll\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggingPageContainer, \"qfyJRYDgrmVe6SzDQoE9DROQpe4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoggingPageContainer;\nexport default LoggingPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggingPageContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_administartion/_logging/loggingPageContainer.tsx"],"names":["React","LogTable","AutoSizer","TableColunm","Grid","TableCell","useDispatch","SetPageTitle","LoggingPageContainer","props","logmessages","selectedItems","handleSelectedItems","handleSelectAll","dispatch","rowGetter","useCallback","row","index","cellRenderer","cellData","dataKey","id","ids","width","length","key","headerValue","state","logmessageCount","customCellRenderer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport LogTable from '../../../_components/_virtualized/_table/Table';\r\nimport { AutoSizer, Index } from 'react-virtualized';\r\nimport TableColunm from '../../../_components/_virtualized/_table/TableColunm';\r\nimport { Grid } from '@material-ui/core';\r\nimport { ILogmessageRow } from './interfaces/ILogMessageRow';\r\nimport TableCell from '../../../_components/_virtualized/_table/TableCell';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SetPageTitle } from '../../../_redux/_appStateStore/appStoreAccessor';\r\nimport { ILogMessageTableState } from './loggingDataService';\r\n\r\ninterface IProps{\r\n    logmessages: ILogmessageRow[]\r\n    selectedItems: ILogMessageTableState\r\n    handleSelectedItems: (items: number[]) => void\r\n    handleSelectAll: () => void\r\n    deleteLogmessages: () => Promise<void>\r\n}\r\n\r\nconst LoggingPageContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {logmessages, selectedItems, handleSelectedItems, handleSelectAll} = props\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(SetPageTitle(\"Administration - Logging\"))\r\n  \r\n    const rowGetter = React.useCallback((row: Index) =>{\r\n        return logmessages[row.index]\r\n    },[logmessages])\r\n\r\n    const cellRenderer = React.useCallback((cellData: any, dataKey: string, index: number) =>{\r\n        return(\r\n            <TableCell id={logmessages[index].id} value={cellData} selectedItems={selectedItems.ids} hasCheckbox={dataKey==='id'} handleSelectedItems={handleSelectedItems} />\r\n        )\r\n    },[selectedItems, logmessages, handleSelectedItems])\r\n\r\n    return(\r\n        <Grid container>\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                <AutoSizer disableHeight>\r\n                    {({width}) =>(\r\n                    <LogTable \r\n                        height={800} \r\n                        width={width} \r\n                        rowHeight={50} \r\n                        rowCount={logmessages.length} \r\n                        headerHeight={100}\r\n                        logmessages={logmessages}\r\n                        getRow={rowGetter}\r\n                        >\r\n                        {TableColunm({key: \"0\", dataKey: 'id', width: 150, headerValue:\"ID\", state: selectedItems, logmessageCount: logmessages.length,  customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll })}\r\n                        {TableColunm({key: \"1\", dataKey: 'timeStamp', width: 300, headerValue: \"Date\", state: selectedItems, logmessageCount: logmessages.length, customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                        {TableColunm({key: \"2\", dataKey: 'messageType', width: 300, headerValue: \"Type\", state: selectedItems, logmessageCount: logmessages.length, customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                        {TableColunm({key: \"3\", dataKey: 'message', width: 500, headerValue: \"Message\", state: selectedItems, logmessageCount: logmessages.length,customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                        {TableColunm({key: \"4\", dataKey: 'exception', width: 500, headerValue: \"Exception\", state: selectedItems, logmessageCount: logmessages.length, customCellRenderer: cellRenderer, handleSelectAll: handleSelectAll})}\r\n                    </LogTable>\r\n                )}\r\n                </AutoSizer>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LoggingPageContainer"]},"metadata":{},"sourceType":"module"}