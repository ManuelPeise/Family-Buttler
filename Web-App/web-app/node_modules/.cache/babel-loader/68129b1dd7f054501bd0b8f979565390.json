{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\WorkFolder\\\\FamilyButtler\\\\Family-Buttler\\\\Web-App\\\\web-app\\\\src\\\\_pages\\\\_cookingBook\\\\MenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuInputComponent from './MenueInputComponent';\nimport { MenuTypeEnum } from '../../_enums/menuEnums';\nimport { Grid, MenuItem, Button } from '@material-ui/core';\nimport IngrdientList from './IngredientList';\nimport SubHeaderBar from '../../_components/_appBars/subHeader';\nimport ImageInput from '../../_components/_inputs/ImageInput';\nimport noImg from '../../img/no-pic.png';\nimport { useImageConverter } from '../../_hooks/useImageConverter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuContainer = props => {\n  _s();\n\n  var _menu$name2, _menu$description, _menu$howTo, _menu$menuType, _menu$image;\n\n  const {\n    selectedMenu,\n    values,\n    config,\n    menuCollection,\n    handleSave\n  } = props;\n  const [menu, setMenu] = React.useState(selectedMenu !== null && selectedMenu !== void 0 ? selectedMenu : {});\n  const imageService = useImageConverter(\"\");\n  React.useEffect(() => {\n    setMenu(selectedMenu);\n  }, [config.componentKey, selectedMenu, imageService, setMenu]);\n  const original = React.useMemo(() => {\n    return selectedMenu;\n  }, [selectedMenu]);\n  const existingMenuNames = React.useMemo(() => {\n    return menuCollection.map(menu => {\n      return menu.name.toLocaleLowerCase();\n    });\n  }, [menuCollection]);\n  const menuNameAlreadyExists = React.useMemo(() => {\n    return existingMenuNames.findIndex(x => {\n      var _menu$name;\n\n      return x.normalize() === (menu === null || menu === void 0 ? void 0 : (_menu$name = menu.name) === null || _menu$name === void 0 ? void 0 : _menu$name.toLocaleLowerCase().normalize());\n    }) !== -1;\n  }, [menu.name, existingMenuNames]);\n  const isValidMenu = React.useMemo(() => {\n    var _menu$ingredients;\n\n    return menu.name !== \"\" && menuNameAlreadyExists === false && menu.description !== \"\" && menu.menuType !== MenuTypeEnum.None && (menu === null || menu === void 0 ? void 0 : (_menu$ingredients = menu.ingredients) === null || _menu$ingredients === void 0 ? void 0 : _menu$ingredients.length) > 0;\n  }, [menu, menuNameAlreadyExists]);\n\n  const isEqualIngrdient = (original, modified) => {\n    return (original === null || original === void 0 ? void 0 : original.amount) === (modified === null || modified === void 0 ? void 0 : modified.amount) && (original === null || original === void 0 ? void 0 : original.name) === (modified === null || modified === void 0 ? void 0 : modified.name) && (original === null || original === void 0 ? void 0 : original.unit) === (modified === null || modified === void 0 ? void 0 : modified.unit);\n  };\n\n  const ingredientsEqual = React.useCallback(() => {\n    var _original$ingredients, _equal$filter, _original$ingredients2;\n\n    const equal = original === null || original === void 0 ? void 0 : (_original$ingredients = original.ingredients) === null || _original$ingredients === void 0 ? void 0 : _original$ingredients.map((ingredient, index) => {\n      return isEqualIngrdient(ingredient, menu === null || menu === void 0 ? void 0 : menu.ingredients[index]);\n    });\n    return (equal === null || equal === void 0 ? void 0 : (_equal$filter = equal.filter(x => x === true)) === null || _equal$filter === void 0 ? void 0 : _equal$filter.length) === (original === null || original === void 0 ? void 0 : (_original$ingredients2 = original.ingredients) === null || _original$ingredients2 === void 0 ? void 0 : _original$ingredients2.length);\n  }, [original === null || original === void 0 ? void 0 : original.ingredients, menu === null || menu === void 0 ? void 0 : menu.ingredients]);\n  const disabled = React.useMemo(() => {\n    if (config.componentKey === 'add') {\n      return isValidMenu === false;\n    }\n\n    if (config.componentKey === 'edit') {\n      var _menu$ingredients2;\n\n      if ((selectedMenu === null || selectedMenu === void 0 ? void 0 : selectedMenu.name) === undefined) {\n        return true;\n      }\n\n      return isValidMenu === false && menu.description === selectedMenu.description && menu.howTo === selectedMenu.howTo && menu.menuType === selectedMenu.menuType && menu.ingredients[(menu === null || menu === void 0 ? void 0 : (_menu$ingredients2 = menu.ingredients) === null || _menu$ingredients2 === void 0 ? void 0 : _menu$ingredients2.length) - 1].id !== -1 && ingredientsEqual() === true;\n    }\n\n    return true;\n  }, [config, menu, selectedMenu, ingredientsEqual, isValidMenu]);\n  const onTitleChanged = React.useCallback(name => {\n    const data = { ...menu,\n      name\n    };\n    setMenu(data);\n  }, [menu]);\n  const onDescriptionChanged = React.useCallback(description => {\n    const data = { ...menu,\n      description\n    };\n    setMenu(data);\n  }, [menu]);\n  const onHowToChanged = React.useCallback(howTo => {\n    const data = { ...menu,\n      howTo\n    };\n    setMenu(data);\n  }, [menu]);\n  const onMenuTypeChanged = React.useCallback(value => {\n    const data = { ...menu,\n      menuType: value\n    };\n    setMenu(data);\n  }, [menu]);\n  const onIngredientChanged = React.useCallback(ingredients => {\n    setMenu({ ...menu,\n      ingredients: ingredients\n    });\n  }, [menu, setMenu]);\n  const onImageChanged = React.useCallback(image => {\n    imageService.setLoadingState(true);\n    setMenu({ ...menu,\n      image: image\n    });\n    imageService.setLoadingState(false);\n  }, [menu, imageService, setMenu]);\n  const menuTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      selected: menu.menuType === MenuTypeEnum.None,\n      children: values.select\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"0\",\n      value: 0,\n      selected: menu.menuType === MenuTypeEnum.Pasta,\n      children: values.recipePasta\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"1\",\n      value: 1,\n      selected: menu.menuType === MenuTypeEnum.Meat,\n      children: values.recipeMeat\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"2\",\n      value: 2,\n      selected: menu.menuType === MenuTypeEnum.Soup,\n      children: values.recipeSoup\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"3\",\n      value: 3,\n      selected: menu.menuType === MenuTypeEnum.Pastries,\n      children: values.recipePastries\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [menu.menuType, values]);\n  const unitTypes = React.useMemo(() => {\n    const elements = [];\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"-1\",\n      value: -1,\n      children: values.select\n    }, -1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"3\",\n      value: 3,\n      children: values.unitGram\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"2\",\n      value: 2,\n      children: values.unitKilo\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"0\",\n      value: 0,\n      children: values.unitLiter\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"1\",\n      value: 1,\n      children: values.unitMilliliters\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"7\",\n      value: 7,\n      children: values.unitPiece\n    }, 7, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"4\",\n      value: 4,\n      children: values.unitTablespoon\n    }, 4, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }, this));\n    elements.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      id: \"5\",\n      value: 5,\n      children: values.unitTeaspoon\n    }, 5, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }, this));\n    return elements;\n  }, [values]);\n  const handleAddIngredient = React.useCallback(() => {\n    var _menu$ingredients3, _menu$ingredients4;\n\n    const update = { ...menu,\n      ingredients: (_menu$ingredients3 = menu.ingredients) !== null && _menu$ingredients3 !== void 0 ? _menu$ingredients3 : []\n    };\n    update.ingredients.push({\n      id: menu === null || menu === void 0 ? void 0 : (_menu$ingredients4 = menu.ingredients) === null || _menu$ingredients4 === void 0 ? void 0 : _menu$ingredients4.length\n    });\n    setMenu(update);\n  }, [menu, setMenu]);\n  const onCancel = React.useCallback(() => {\n    var _original$ingredients3;\n\n    setMenu({ ...original,\n      ingredients: original === null || original === void 0 ? void 0 : (_original$ingredients3 = original.ingredients) === null || _original$ingredients3 === void 0 ? void 0 : _original$ingredients3.filter(x => x.id !== -1)\n    });\n  }, [original, setMenu]);\n  const onSave = React.useCallback(async () => {\n    await handleSave(menu);\n  }, [menu, handleSave]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    justifyContent: \"center\",\n    xs: 11,\n    xl: 11,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(SubHeaderBar, {\n        title: values.recipe,\n        variant: \"h5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 8,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.name,\n          value: (_menu$name2 = menu === null || menu === void 0 ? void 0 : menu.name) !== null && _menu$name2 !== void 0 ? _menu$name2 : \"\",\n          fullWidth: true,\n          isReadonly: config.isReadOnly && (config.componentKey === 'view' || config.componentKey === 'edit'),\n          hasError: menuNameAlreadyExists && config.componentKey === 'add',\n          errorText: menuNameAlreadyExists && config.componentKey === 'add' ? \"Menu already exists!\" : \"\",\n          onValueChanged: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.description,\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$description = menu === null || menu === void 0 ? void 0 : menu.description) !== null && _menu$description !== void 0 ? _menu$description : \"\",\n          isReadonly: config.isReadOnly,\n          onValueChanged: onDescriptionChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.hoTo,\n          isMultiRow: true,\n          maxRows: 20,\n          fullWidth: true,\n          value: (_menu$howTo = menu === null || menu === void 0 ? void 0 : menu.howTo) !== null && _menu$howTo !== void 0 ? _menu$howTo : \"\",\n          isReadonly: config.isReadOnly,\n          onValueChanged: onHowToChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuInputComponent, {\n          label: values.menuType,\n          isMultiRow: true,\n          maxRows: 5,\n          fullWidth: true,\n          value: (_menu$menuType = menu.menuType) !== null && _menu$menuType !== void 0 ? _menu$menuType : -1,\n          isReadonly: config.isReadOnly,\n          hasSelect: true,\n          selectElements: menuTypes,\n          onSelectChanged: onMenuTypeChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageInput, {\n        isReadOnly: config.isReadOnly,\n        width: 300,\n        height: 300,\n        src: (_menu$image = menu.image) !== null && _menu$image !== void 0 ? _menu$image : noImg,\n        imageService: imageService,\n        handleImageChanged: onImageChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(IngrdientList, {\n        title: values.addIngredient,\n        values: values,\n        ingredients: menu.ingredients,\n        unitTypes: unitTypes,\n        isReadOnly: config.isReadOnly,\n        onIngredientsChanged: onIngredientChanged,\n        handleAddIngredient: handleAddIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), !config.isReadOnly && /*#__PURE__*/_jsxDEV(Grid, {\n      justifyContent: \"flex-end\",\n      style: {\n        margin: '2vw'\n      },\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuContainer, \"Gw1lAKJS6vg7oW5D78t7pzc5EDE=\", false, function () {\n  return [useImageConverter];\n});\n\n_c = MenuContainer;\nexport default MenuContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"sources":["D:/Development/WorkFolder/FamilyButtler/Family-Buttler/Web-App/web-app/src/_pages/_cookingBook/MenuContainer.tsx"],"names":["React","MenuInputComponent","MenuTypeEnum","Grid","MenuItem","Button","IngrdientList","SubHeaderBar","ImageInput","noImg","useImageConverter","MenuContainer","props","selectedMenu","values","config","menuCollection","handleSave","menu","setMenu","useState","imageService","useEffect","componentKey","original","useMemo","existingMenuNames","map","name","toLocaleLowerCase","menuNameAlreadyExists","findIndex","x","normalize","isValidMenu","description","menuType","None","ingredients","length","isEqualIngrdient","modified","amount","unit","ingredientsEqual","useCallback","equal","ingredient","index","filter","disabled","undefined","howTo","id","onTitleChanged","data","onDescriptionChanged","onHowToChanged","onMenuTypeChanged","value","onIngredientChanged","onImageChanged","image","setLoadingState","menuTypes","elements","push","select","Pasta","recipePasta","Meat","recipeMeat","Soup","recipeSoup","Pastries","recipePastries","unitTypes","unitGram","unitKilo","unitLiter","unitMilliliters","unitPiece","unitTablespoon","unitTeaspoon","handleAddIngredient","update","onCancel","onSave","recipe","isReadOnly","hoTo","addIngredient","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuInputComponent from './MenueInputComponent'\r\nimport {IIngredient, IMenu} from '../../_interfaces/IMenu'\r\nimport { MenuTypeEnum } from '../../_enums/menuEnums'\r\nimport { Grid, MenuItem, Button } from '@material-ui/core'\r\nimport IngrdientList from './IngredientList'\r\nimport SubHeaderBar from '../../_components/_appBars/subHeader'\r\nimport { ICookingBookValues } from '../../_interfaces/ICookingBookValues'\r\nimport { IMenuLayoutConfig } from './interfaces/IMenueLayoutConfig'\r\nimport ImageInput from '../../_components/_inputs/ImageInput'\r\nimport noImg from '../../img/no-pic.png'\r\nimport { useImageConverter } from '../../_hooks/useImageConverter'\r\n\r\ninterface IProps{\r\n    selectedMenu: IMenu\r\n    values: ICookingBookValues\r\n    config: IMenuLayoutConfig\r\n    menuCollection: IMenu[]\r\n    handleSave: (menu: IMenu) => Promise<void>\r\n}\r\n\r\nconst MenuContainer: React.FC<IProps> = (props) =>{\r\n\r\n    const {selectedMenu, values, config, menuCollection, handleSave} = props\r\n   \r\n    const [menu, setMenu] = React.useState<IMenu>(selectedMenu?? {} as IMenu)\r\n\r\n    const imageService = useImageConverter(\"\")\r\n\r\n    React.useEffect(() =>{\r\n        setMenu(selectedMenu)\r\n    },[config.componentKey, selectedMenu, imageService, setMenu])\r\n\r\n    const original = React.useMemo(() =>{\r\n        return selectedMenu\r\n    },[selectedMenu])\r\n\r\n    const existingMenuNames = React.useMemo(() =>{\r\n        return menuCollection.map((menu) =>{\r\n            return menu.name.toLocaleLowerCase()\r\n        })\r\n    },[menuCollection])\r\n\r\n    const menuNameAlreadyExists = React.useMemo(() =>{\r\n        return existingMenuNames.findIndex(x => x.normalize() === menu?.name?.toLocaleLowerCase().normalize()) !== -1\r\n    },[menu.name, existingMenuNames])\r\n\r\n    const isValidMenu = React.useMemo(() =>{\r\n        return(\r\n            menu.name !== \"\" && menuNameAlreadyExists === false\r\n            && menu.description !== \"\"\r\n            && menu.menuType !== MenuTypeEnum.None\r\n            && menu?.ingredients?.length > 0\r\n        )\r\n    },[menu, menuNameAlreadyExists])\r\n\r\n    const isEqualIngrdient = (original: IIngredient, modified: IIngredient) => {\r\n        return original?.amount === modified?.amount && original?.name === modified?.name && original?.unit === modified?.unit\r\n    } \r\n\r\n    const ingredientsEqual = React.useCallback(() =>{\r\n        \r\n        const equal = original?.ingredients?.map((ingredient, index) =>{\r\n\r\n            return isEqualIngrdient(ingredient, menu?.ingredients[index])\r\n        })\r\n        \r\n        return equal?.filter(x => x === true)?.length === original?.ingredients?.length\r\n\r\n    },[original?.ingredients, menu?.ingredients])\r\n\r\n    const disabled = React.useMemo(() =>{\r\n\r\n        if(config.componentKey === 'add'){\r\n            return isValidMenu === false\r\n        }\r\n    \r\n        if(config.componentKey === 'edit'){\r\n\r\n            if(selectedMenu?.name === undefined){\r\n                return true\r\n            }\r\n\r\n            return (isValidMenu === false\r\n            && menu.description === selectedMenu.description\r\n            && menu.howTo === selectedMenu.howTo\r\n            && menu.menuType === selectedMenu.menuType\r\n            && menu.ingredients[menu?.ingredients?.length -1].id !== -1\r\n            && ingredientsEqual() === true)\r\n        }\r\n\r\n        return true\r\n       \r\n    },[config, menu, selectedMenu, ingredientsEqual, isValidMenu])\r\n\r\n    const onTitleChanged = React.useCallback((name: string) =>{\r\n        const data: IMenu = {...menu, name}\r\n       \r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onDescriptionChanged = React.useCallback((description: string) =>{\r\n        const data: IMenu = {...menu, description}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onHowToChanged = React.useCallback((howTo: string) =>{\r\n        const data: IMenu = {...menu, howTo}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onMenuTypeChanged = React.useCallback((value: number) =>{\r\n        const data: IMenu = {...menu, menuType: value}\r\n        setMenu(data)\r\n    },[menu])\r\n\r\n    const onIngredientChanged = React.useCallback((ingredients: IIngredient[]) =>{\r\n        setMenu({...menu, ingredients: ingredients})\r\n    },[menu, setMenu])\r\n\r\n    const onImageChanged = React.useCallback((image: string) =>{\r\n        imageService.setLoadingState(true)\r\n        setMenu({...menu, image: image})\r\n        imageService.setLoadingState(false)\r\n    },[menu, imageService, setMenu])\r\n\r\n    const menuTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key={-1} id ='-1' value={-1} selected={menu.menuType === MenuTypeEnum.None}>{values.select}</MenuItem>)\r\n        elements.push(<MenuItem key={0} id = '0' value={0} selected={menu.menuType === MenuTypeEnum.Pasta}>{values.recipePasta}</MenuItem>)\r\n        elements.push(<MenuItem key={1} id = '1' value={1} selected={menu.menuType === MenuTypeEnum.Meat}>{values.recipeMeat}</MenuItem>)\r\n        elements.push(<MenuItem key={2} id = '2' value={2} selected={menu.menuType === MenuTypeEnum.Soup}>{values.recipeSoup}</MenuItem>)\r\n        elements.push(<MenuItem key={3} id = '3' value={3} selected={menu.menuType === MenuTypeEnum.Pastries}>{values.recipePastries}</MenuItem>)\r\n\r\n        return elements\r\n    },[menu.menuType, values])\r\n\r\n    const unitTypes = React.useMemo(() => {\r\n        const elements = [] as JSX.Element[]\r\n\r\n        elements.push(<MenuItem key={-1} id ='-1' value={-1}>{values.select}</MenuItem>)\r\n        elements.push(<MenuItem key={3} id = '3' value={3}>{values.unitGram}</MenuItem>)\r\n        elements.push(<MenuItem key={2} id = '2' value={2}>{values.unitKilo}</MenuItem>)\r\n        elements.push(<MenuItem key={0} id = '0' value={0}>{values.unitLiter}</MenuItem>)\r\n        elements.push(<MenuItem key={1} id = '1' value={1}>{values.unitMilliliters}</MenuItem>)\r\n        elements.push(<MenuItem key={7} id = '7' value={7}>{values.unitPiece}</MenuItem>)\r\n        elements.push(<MenuItem key={4} id = '4' value={4}>{values.unitTablespoon}</MenuItem>)\r\n        elements.push(<MenuItem key={5} id = '5' value={5}>{values.unitTeaspoon}</MenuItem>)\r\n\r\n        return elements\r\n    },[values])\r\n\r\n    const handleAddIngredient = React.useCallback(() => {\r\n        const update: IMenu = {...menu, ingredients: menu.ingredients?? [] as IIngredient[]}\r\n        \r\n        update.ingredients.push({id: menu?.ingredients?.length} as IIngredient)\r\n        setMenu(update)\r\n\r\n    },[menu, setMenu])\r\n\r\n    const onCancel = React.useCallback(() =>{\r\n        setMenu({...original, ingredients: original?.ingredients?.filter(x => x.id !== -1)})\r\n    },[original, setMenu])\r\n\r\n    const onSave = React.useCallback(async () => {\r\n        await handleSave(menu)\r\n    },[menu, handleSave])\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            item\r\n            justifyContent='center'\r\n            xs={11}\r\n            xl={11}>\r\n            <Grid\r\n                item\r\n                xs = {12}\r\n                container>\r\n                <SubHeaderBar title={values.recipe} variant='h5'/>\r\n                <Grid\r\n                    xs={12}\r\n                    sm={8}\r\n                    item>\r\n                        <MenuInputComponent\r\n                                    label={values.name}\r\n                                    value={menu?.name?? \"\"}\r\n                                    fullWidth={true} \r\n                                    isReadonly={config.isReadOnly && (config.componentKey === 'view' || config.componentKey === 'edit')}\r\n                                    hasError={menuNameAlreadyExists && config.componentKey === 'add'}\r\n                                    errorText={menuNameAlreadyExists && config.componentKey === 'add' ? \"Menu already exists!\" : \"\"}\r\n                                    onValueChanged={onTitleChanged} />\r\n                        <MenuInputComponent\r\n                                    label={values.description}\r\n                                    isMultiRow={true}\r\n                                    maxRows={5}\r\n                                    fullWidth={true} \r\n                                    value={menu?.description?? \"\"} \r\n                                    isReadonly={config.isReadOnly}\r\n                                    onValueChanged={onDescriptionChanged}/>\r\n                        <MenuInputComponent\r\n                                    label={values.hoTo}\r\n                                    isMultiRow={true}\r\n                                    maxRows={20}\r\n                                    fullWidth={true} \r\n                                    value={menu?.howTo?? \"\"} \r\n                                    isReadonly={config.isReadOnly}\r\n                                    onValueChanged={onHowToChanged}/>\r\n                        <MenuInputComponent\r\n                                    label={values.menuType}\r\n                                    isMultiRow={true}\r\n                                    maxRows={5}\r\n                                    fullWidth={true} \r\n                                    value={menu.menuType ?? -1} \r\n                                    isReadonly={config.isReadOnly}\r\n                                    hasSelect={true}\r\n                                    selectElements={menuTypes}\r\n                                    onSelectChanged={onMenuTypeChanged}/>\r\n                </Grid>\r\n               <ImageInput \r\n                    isReadOnly={config.isReadOnly}\r\n                    width={300}\r\n                    height={300}\r\n                    src={menu.image?? noImg}\r\n                    imageService={imageService}\r\n                    handleImageChanged={onImageChanged}/>\r\n              \r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={12}>\r\n                    <IngrdientList\r\n                        title={values.addIngredient} \r\n                        values={values} \r\n                        ingredients={menu.ingredients}\r\n                        unitTypes={unitTypes}\r\n                        isReadOnly= {config.isReadOnly}\r\n                        onIngredientsChanged={onIngredientChanged}\r\n                        handleAddIngredient={handleAddIngredient}/>\r\n            </Grid>\r\n            {!config.isReadOnly && (\r\n            <Grid\r\n                justifyContent='flex-end'\r\n                style={{margin: '2vw'}}\r\n                container>\r\n                    <Button disabled={disabled} onClick={onCancel}>Cancel</Button>\r\n                    <Button disabled={disabled} onClick={onSave}>Save</Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MenuContainer  "]},"metadata":{},"sourceType":"module"}